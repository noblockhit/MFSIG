#############################################################################
# Makefile for building: LibRaw
# Generated by qmake (3.1) (Qt 6.7.0)
# Project:  ..\..\LibRaw.pro
# Template: subdirs
# Command: C:\Qt\6.7.0\mingw_64\bin\qmake.exe -o Makefile ..\..\LibRaw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug"
#############################################################################

MAKEFILE      = Makefile

EQ            = =

first: make_first
QMAKE         = C:\Qt\6.7.0\mingw_64\bin\qmake.exe
DEL_FILE      = del
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
COPY          = copy /y
COPY_FILE     = copy /y
COPY_DIR      = xcopy /s /q /y /i
INSTALL_FILE  = copy /y
INSTALL_PROGRAM = copy /y
INSTALL_DIR   = xcopy /s /q /y /i
QINSTALL      = C:\Qt\6.7.0\mingw_64\bin\qmake.exe -install qinstall
QINSTALL_PROGRAM = C:\Qt\6.7.0\mingw_64\bin\qmake.exe -install qinstall -exe
DEL_FILE      = del
SYMLINK       = $(QMAKE) -install ln -f -s
DEL_DIR       = rmdir
MOVE          = move
IDC           = idc
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
SED           = $(QMAKE) -install sed
MOVE          = move
SUBTARGETS    =  \
		sub-buildfiles-dcraw_emu-pro \
		sub-buildfiles-libraw-pro \
		sub-buildfiles-postprocessing_benchmark-pro \
		sub-buildfiles-dcraw_half-pro \
		sub-buildfiles-mem_image-pro \
		sub-buildfiles-raw-identify-pro \
		sub-buildfiles-simple_dcraw-pro \
		sub-buildfiles-multirender_test-pro \
		sub-buildfiles-unprocessed_raw-pro \
		sub-buildfiles-4channels-pro \
		sub-buildfiles-rawtextdump-pro \
		sub-buildfiles-openbayer_sample-pro


sub-buildfiles-dcraw_emu-pro-qmake_all:  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && $(QMAKE) -o Makefile.dcraw_emu D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_emu.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug"
	cd buildfiles\ && $(MAKE) -f Makefile.dcraw_emu qmake_all
sub-buildfiles-dcraw_emu-pro: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_emu $(QMAKE) -o Makefile.dcraw_emu D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_emu.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_emu
sub-buildfiles-dcraw_emu-pro-make_first-ordered: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_emu $(QMAKE) -o Makefile.dcraw_emu D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_emu.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_emu 
sub-buildfiles-dcraw_emu-pro-make_first: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_emu $(QMAKE) -o Makefile.dcraw_emu D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_emu.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_emu 
sub-buildfiles-dcraw_emu-pro-all-ordered: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_emu $(QMAKE) -o Makefile.dcraw_emu D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_emu.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_emu all
sub-buildfiles-dcraw_emu-pro-all: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_emu $(QMAKE) -o Makefile.dcraw_emu D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_emu.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_emu all
sub-buildfiles-dcraw_emu-pro-clean-ordered: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_emu $(QMAKE) -o Makefile.dcraw_emu D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_emu.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_emu clean
sub-buildfiles-dcraw_emu-pro-clean: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_emu $(QMAKE) -o Makefile.dcraw_emu D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_emu.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_emu clean
sub-buildfiles-dcraw_emu-pro-distclean-ordered: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_emu $(QMAKE) -o Makefile.dcraw_emu D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_emu.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_emu distclean
sub-buildfiles-dcraw_emu-pro-distclean: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_emu $(QMAKE) -o Makefile.dcraw_emu D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_emu.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_emu distclean
sub-buildfiles-dcraw_emu-pro-install_subtargets-ordered: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_emu $(QMAKE) -o Makefile.dcraw_emu D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_emu.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_emu install
sub-buildfiles-dcraw_emu-pro-install_subtargets: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_emu $(QMAKE) -o Makefile.dcraw_emu D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_emu.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_emu install
sub-buildfiles-dcraw_emu-pro-uninstall_subtargets-ordered: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_emu $(QMAKE) -o Makefile.dcraw_emu D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_emu.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_emu uninstall
sub-buildfiles-dcraw_emu-pro-uninstall_subtargets: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_emu $(QMAKE) -o Makefile.dcraw_emu D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_emu.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_emu uninstall
sub-buildfiles-libraw-pro-qmake_all: sub-buildfiles-dcraw_emu-pro-qmake_all FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && $(QMAKE) -o Makefile.libraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\libraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug"
	cd buildfiles\ && $(MAKE) -f Makefile.libraw qmake_all
sub-buildfiles-libraw-pro: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.libraw $(QMAKE) -o Makefile.libraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\libraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.libraw
sub-buildfiles-libraw-pro-make_first-ordered: sub-buildfiles-dcraw_emu-pro-make_first-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.libraw $(QMAKE) -o Makefile.libraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\libraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.libraw 
sub-buildfiles-libraw-pro-make_first: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.libraw $(QMAKE) -o Makefile.libraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\libraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.libraw 
sub-buildfiles-libraw-pro-all-ordered: sub-buildfiles-dcraw_emu-pro-all-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.libraw $(QMAKE) -o Makefile.libraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\libraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.libraw all
sub-buildfiles-libraw-pro-all: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.libraw $(QMAKE) -o Makefile.libraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\libraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.libraw all
sub-buildfiles-libraw-pro-clean-ordered: sub-buildfiles-dcraw_emu-pro-clean-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.libraw $(QMAKE) -o Makefile.libraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\libraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.libraw clean
sub-buildfiles-libraw-pro-clean: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.libraw $(QMAKE) -o Makefile.libraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\libraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.libraw clean
sub-buildfiles-libraw-pro-distclean-ordered: sub-buildfiles-dcraw_emu-pro-distclean-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.libraw $(QMAKE) -o Makefile.libraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\libraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.libraw distclean
sub-buildfiles-libraw-pro-distclean: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.libraw $(QMAKE) -o Makefile.libraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\libraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.libraw distclean
sub-buildfiles-libraw-pro-install_subtargets-ordered: sub-buildfiles-dcraw_emu-pro-install_subtargets-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.libraw $(QMAKE) -o Makefile.libraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\libraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.libraw install
sub-buildfiles-libraw-pro-install_subtargets: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.libraw $(QMAKE) -o Makefile.libraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\libraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.libraw install
sub-buildfiles-libraw-pro-uninstall_subtargets-ordered: sub-buildfiles-dcraw_emu-pro-uninstall_subtargets-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.libraw $(QMAKE) -o Makefile.libraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\libraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.libraw uninstall
sub-buildfiles-libraw-pro-uninstall_subtargets: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.libraw $(QMAKE) -o Makefile.libraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\libraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.libraw uninstall
sub-buildfiles-postprocessing_benchmark-pro-qmake_all: sub-buildfiles-libraw-pro-qmake_all FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && $(QMAKE) -o Makefile.postprocessing_benchmark D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\postprocessing_benchmark.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug"
	cd buildfiles\ && $(MAKE) -f Makefile.postprocessing_benchmark qmake_all
sub-buildfiles-postprocessing_benchmark-pro: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.postprocessing_benchmark $(QMAKE) -o Makefile.postprocessing_benchmark D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\postprocessing_benchmark.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.postprocessing_benchmark
sub-buildfiles-postprocessing_benchmark-pro-make_first-ordered: sub-buildfiles-libraw-pro-make_first-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.postprocessing_benchmark $(QMAKE) -o Makefile.postprocessing_benchmark D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\postprocessing_benchmark.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.postprocessing_benchmark 
sub-buildfiles-postprocessing_benchmark-pro-make_first: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.postprocessing_benchmark $(QMAKE) -o Makefile.postprocessing_benchmark D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\postprocessing_benchmark.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.postprocessing_benchmark 
sub-buildfiles-postprocessing_benchmark-pro-all-ordered: sub-buildfiles-libraw-pro-all-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.postprocessing_benchmark $(QMAKE) -o Makefile.postprocessing_benchmark D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\postprocessing_benchmark.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.postprocessing_benchmark all
sub-buildfiles-postprocessing_benchmark-pro-all: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.postprocessing_benchmark $(QMAKE) -o Makefile.postprocessing_benchmark D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\postprocessing_benchmark.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.postprocessing_benchmark all
sub-buildfiles-postprocessing_benchmark-pro-clean-ordered: sub-buildfiles-libraw-pro-clean-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.postprocessing_benchmark $(QMAKE) -o Makefile.postprocessing_benchmark D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\postprocessing_benchmark.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.postprocessing_benchmark clean
sub-buildfiles-postprocessing_benchmark-pro-clean: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.postprocessing_benchmark $(QMAKE) -o Makefile.postprocessing_benchmark D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\postprocessing_benchmark.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.postprocessing_benchmark clean
sub-buildfiles-postprocessing_benchmark-pro-distclean-ordered: sub-buildfiles-libraw-pro-distclean-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.postprocessing_benchmark $(QMAKE) -o Makefile.postprocessing_benchmark D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\postprocessing_benchmark.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.postprocessing_benchmark distclean
sub-buildfiles-postprocessing_benchmark-pro-distclean: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.postprocessing_benchmark $(QMAKE) -o Makefile.postprocessing_benchmark D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\postprocessing_benchmark.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.postprocessing_benchmark distclean
sub-buildfiles-postprocessing_benchmark-pro-install_subtargets-ordered: sub-buildfiles-libraw-pro-install_subtargets-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.postprocessing_benchmark $(QMAKE) -o Makefile.postprocessing_benchmark D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\postprocessing_benchmark.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.postprocessing_benchmark install
sub-buildfiles-postprocessing_benchmark-pro-install_subtargets: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.postprocessing_benchmark $(QMAKE) -o Makefile.postprocessing_benchmark D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\postprocessing_benchmark.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.postprocessing_benchmark install
sub-buildfiles-postprocessing_benchmark-pro-uninstall_subtargets-ordered: sub-buildfiles-libraw-pro-uninstall_subtargets-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.postprocessing_benchmark $(QMAKE) -o Makefile.postprocessing_benchmark D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\postprocessing_benchmark.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.postprocessing_benchmark uninstall
sub-buildfiles-postprocessing_benchmark-pro-uninstall_subtargets: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.postprocessing_benchmark $(QMAKE) -o Makefile.postprocessing_benchmark D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\postprocessing_benchmark.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.postprocessing_benchmark uninstall
sub-buildfiles-dcraw_half-pro-qmake_all: sub-buildfiles-postprocessing_benchmark-pro-qmake_all FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && $(QMAKE) -o Makefile.dcraw_half D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_half.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug"
	cd buildfiles\ && $(MAKE) -f Makefile.dcraw_half qmake_all
sub-buildfiles-dcraw_half-pro: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_half $(QMAKE) -o Makefile.dcraw_half D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_half.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_half
sub-buildfiles-dcraw_half-pro-make_first-ordered: sub-buildfiles-postprocessing_benchmark-pro-make_first-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_half $(QMAKE) -o Makefile.dcraw_half D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_half.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_half 
sub-buildfiles-dcraw_half-pro-make_first: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_half $(QMAKE) -o Makefile.dcraw_half D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_half.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_half 
sub-buildfiles-dcraw_half-pro-all-ordered: sub-buildfiles-postprocessing_benchmark-pro-all-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_half $(QMAKE) -o Makefile.dcraw_half D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_half.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_half all
sub-buildfiles-dcraw_half-pro-all: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_half $(QMAKE) -o Makefile.dcraw_half D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_half.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_half all
sub-buildfiles-dcraw_half-pro-clean-ordered: sub-buildfiles-postprocessing_benchmark-pro-clean-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_half $(QMAKE) -o Makefile.dcraw_half D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_half.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_half clean
sub-buildfiles-dcraw_half-pro-clean: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_half $(QMAKE) -o Makefile.dcraw_half D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_half.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_half clean
sub-buildfiles-dcraw_half-pro-distclean-ordered: sub-buildfiles-postprocessing_benchmark-pro-distclean-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_half $(QMAKE) -o Makefile.dcraw_half D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_half.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_half distclean
sub-buildfiles-dcraw_half-pro-distclean: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_half $(QMAKE) -o Makefile.dcraw_half D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_half.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_half distclean
sub-buildfiles-dcraw_half-pro-install_subtargets-ordered: sub-buildfiles-postprocessing_benchmark-pro-install_subtargets-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_half $(QMAKE) -o Makefile.dcraw_half D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_half.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_half install
sub-buildfiles-dcraw_half-pro-install_subtargets: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_half $(QMAKE) -o Makefile.dcraw_half D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_half.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_half install
sub-buildfiles-dcraw_half-pro-uninstall_subtargets-ordered: sub-buildfiles-postprocessing_benchmark-pro-uninstall_subtargets-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_half $(QMAKE) -o Makefile.dcraw_half D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_half.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_half uninstall
sub-buildfiles-dcraw_half-pro-uninstall_subtargets: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_half $(QMAKE) -o Makefile.dcraw_half D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_half.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_half uninstall
sub-buildfiles-mem_image-pro-qmake_all: sub-buildfiles-dcraw_half-pro-qmake_all FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && $(QMAKE) -o Makefile.mem_image D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\mem_image.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug"
	cd buildfiles\ && $(MAKE) -f Makefile.mem_image qmake_all
sub-buildfiles-mem_image-pro: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.mem_image $(QMAKE) -o Makefile.mem_image D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\mem_image.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.mem_image
sub-buildfiles-mem_image-pro-make_first-ordered: sub-buildfiles-dcraw_half-pro-make_first-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.mem_image $(QMAKE) -o Makefile.mem_image D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\mem_image.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.mem_image 
sub-buildfiles-mem_image-pro-make_first: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.mem_image $(QMAKE) -o Makefile.mem_image D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\mem_image.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.mem_image 
sub-buildfiles-mem_image-pro-all-ordered: sub-buildfiles-dcraw_half-pro-all-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.mem_image $(QMAKE) -o Makefile.mem_image D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\mem_image.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.mem_image all
sub-buildfiles-mem_image-pro-all: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.mem_image $(QMAKE) -o Makefile.mem_image D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\mem_image.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.mem_image all
sub-buildfiles-mem_image-pro-clean-ordered: sub-buildfiles-dcraw_half-pro-clean-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.mem_image $(QMAKE) -o Makefile.mem_image D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\mem_image.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.mem_image clean
sub-buildfiles-mem_image-pro-clean: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.mem_image $(QMAKE) -o Makefile.mem_image D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\mem_image.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.mem_image clean
sub-buildfiles-mem_image-pro-distclean-ordered: sub-buildfiles-dcraw_half-pro-distclean-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.mem_image $(QMAKE) -o Makefile.mem_image D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\mem_image.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.mem_image distclean
sub-buildfiles-mem_image-pro-distclean: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.mem_image $(QMAKE) -o Makefile.mem_image D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\mem_image.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.mem_image distclean
sub-buildfiles-mem_image-pro-install_subtargets-ordered: sub-buildfiles-dcraw_half-pro-install_subtargets-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.mem_image $(QMAKE) -o Makefile.mem_image D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\mem_image.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.mem_image install
sub-buildfiles-mem_image-pro-install_subtargets: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.mem_image $(QMAKE) -o Makefile.mem_image D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\mem_image.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.mem_image install
sub-buildfiles-mem_image-pro-uninstall_subtargets-ordered: sub-buildfiles-dcraw_half-pro-uninstall_subtargets-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.mem_image $(QMAKE) -o Makefile.mem_image D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\mem_image.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.mem_image uninstall
sub-buildfiles-mem_image-pro-uninstall_subtargets: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.mem_image $(QMAKE) -o Makefile.mem_image D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\mem_image.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.mem_image uninstall
sub-buildfiles-raw-identify-pro-qmake_all: sub-buildfiles-mem_image-pro-qmake_all FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && $(QMAKE) -o Makefile.raw-identify D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\raw-identify.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug"
	cd buildfiles\ && $(MAKE) -f Makefile.raw-identify qmake_all
sub-buildfiles-raw-identify-pro: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.raw-identify $(QMAKE) -o Makefile.raw-identify D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\raw-identify.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.raw-identify
sub-buildfiles-raw-identify-pro-make_first-ordered: sub-buildfiles-mem_image-pro-make_first-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.raw-identify $(QMAKE) -o Makefile.raw-identify D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\raw-identify.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.raw-identify 
sub-buildfiles-raw-identify-pro-make_first: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.raw-identify $(QMAKE) -o Makefile.raw-identify D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\raw-identify.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.raw-identify 
sub-buildfiles-raw-identify-pro-all-ordered: sub-buildfiles-mem_image-pro-all-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.raw-identify $(QMAKE) -o Makefile.raw-identify D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\raw-identify.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.raw-identify all
sub-buildfiles-raw-identify-pro-all: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.raw-identify $(QMAKE) -o Makefile.raw-identify D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\raw-identify.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.raw-identify all
sub-buildfiles-raw-identify-pro-clean-ordered: sub-buildfiles-mem_image-pro-clean-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.raw-identify $(QMAKE) -o Makefile.raw-identify D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\raw-identify.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.raw-identify clean
sub-buildfiles-raw-identify-pro-clean: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.raw-identify $(QMAKE) -o Makefile.raw-identify D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\raw-identify.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.raw-identify clean
sub-buildfiles-raw-identify-pro-distclean-ordered: sub-buildfiles-mem_image-pro-distclean-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.raw-identify $(QMAKE) -o Makefile.raw-identify D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\raw-identify.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.raw-identify distclean
sub-buildfiles-raw-identify-pro-distclean: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.raw-identify $(QMAKE) -o Makefile.raw-identify D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\raw-identify.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.raw-identify distclean
sub-buildfiles-raw-identify-pro-install_subtargets-ordered: sub-buildfiles-mem_image-pro-install_subtargets-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.raw-identify $(QMAKE) -o Makefile.raw-identify D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\raw-identify.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.raw-identify install
sub-buildfiles-raw-identify-pro-install_subtargets: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.raw-identify $(QMAKE) -o Makefile.raw-identify D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\raw-identify.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.raw-identify install
sub-buildfiles-raw-identify-pro-uninstall_subtargets-ordered: sub-buildfiles-mem_image-pro-uninstall_subtargets-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.raw-identify $(QMAKE) -o Makefile.raw-identify D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\raw-identify.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.raw-identify uninstall
sub-buildfiles-raw-identify-pro-uninstall_subtargets: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.raw-identify $(QMAKE) -o Makefile.raw-identify D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\raw-identify.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.raw-identify uninstall
sub-buildfiles-simple_dcraw-pro-qmake_all: sub-buildfiles-raw-identify-pro-qmake_all FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && $(QMAKE) -o Makefile.simple_dcraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\simple_dcraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug"
	cd buildfiles\ && $(MAKE) -f Makefile.simple_dcraw qmake_all
sub-buildfiles-simple_dcraw-pro: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.simple_dcraw $(QMAKE) -o Makefile.simple_dcraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\simple_dcraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.simple_dcraw
sub-buildfiles-simple_dcraw-pro-make_first-ordered: sub-buildfiles-raw-identify-pro-make_first-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.simple_dcraw $(QMAKE) -o Makefile.simple_dcraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\simple_dcraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.simple_dcraw 
sub-buildfiles-simple_dcraw-pro-make_first: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.simple_dcraw $(QMAKE) -o Makefile.simple_dcraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\simple_dcraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.simple_dcraw 
sub-buildfiles-simple_dcraw-pro-all-ordered: sub-buildfiles-raw-identify-pro-all-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.simple_dcraw $(QMAKE) -o Makefile.simple_dcraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\simple_dcraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.simple_dcraw all
sub-buildfiles-simple_dcraw-pro-all: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.simple_dcraw $(QMAKE) -o Makefile.simple_dcraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\simple_dcraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.simple_dcraw all
sub-buildfiles-simple_dcraw-pro-clean-ordered: sub-buildfiles-raw-identify-pro-clean-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.simple_dcraw $(QMAKE) -o Makefile.simple_dcraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\simple_dcraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.simple_dcraw clean
sub-buildfiles-simple_dcraw-pro-clean: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.simple_dcraw $(QMAKE) -o Makefile.simple_dcraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\simple_dcraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.simple_dcraw clean
sub-buildfiles-simple_dcraw-pro-distclean-ordered: sub-buildfiles-raw-identify-pro-distclean-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.simple_dcraw $(QMAKE) -o Makefile.simple_dcraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\simple_dcraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.simple_dcraw distclean
sub-buildfiles-simple_dcraw-pro-distclean: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.simple_dcraw $(QMAKE) -o Makefile.simple_dcraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\simple_dcraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.simple_dcraw distclean
sub-buildfiles-simple_dcraw-pro-install_subtargets-ordered: sub-buildfiles-raw-identify-pro-install_subtargets-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.simple_dcraw $(QMAKE) -o Makefile.simple_dcraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\simple_dcraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.simple_dcraw install
sub-buildfiles-simple_dcraw-pro-install_subtargets: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.simple_dcraw $(QMAKE) -o Makefile.simple_dcraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\simple_dcraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.simple_dcraw install
sub-buildfiles-simple_dcraw-pro-uninstall_subtargets-ordered: sub-buildfiles-raw-identify-pro-uninstall_subtargets-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.simple_dcraw $(QMAKE) -o Makefile.simple_dcraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\simple_dcraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.simple_dcraw uninstall
sub-buildfiles-simple_dcraw-pro-uninstall_subtargets: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.simple_dcraw $(QMAKE) -o Makefile.simple_dcraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\simple_dcraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.simple_dcraw uninstall
sub-buildfiles-multirender_test-pro-qmake_all: sub-buildfiles-simple_dcraw-pro-qmake_all FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && $(QMAKE) -o Makefile.multirender_test D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\multirender_test.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug"
	cd buildfiles\ && $(MAKE) -f Makefile.multirender_test qmake_all
sub-buildfiles-multirender_test-pro: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.multirender_test $(QMAKE) -o Makefile.multirender_test D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\multirender_test.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.multirender_test
sub-buildfiles-multirender_test-pro-make_first-ordered: sub-buildfiles-simple_dcraw-pro-make_first-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.multirender_test $(QMAKE) -o Makefile.multirender_test D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\multirender_test.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.multirender_test 
sub-buildfiles-multirender_test-pro-make_first: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.multirender_test $(QMAKE) -o Makefile.multirender_test D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\multirender_test.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.multirender_test 
sub-buildfiles-multirender_test-pro-all-ordered: sub-buildfiles-simple_dcraw-pro-all-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.multirender_test $(QMAKE) -o Makefile.multirender_test D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\multirender_test.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.multirender_test all
sub-buildfiles-multirender_test-pro-all: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.multirender_test $(QMAKE) -o Makefile.multirender_test D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\multirender_test.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.multirender_test all
sub-buildfiles-multirender_test-pro-clean-ordered: sub-buildfiles-simple_dcraw-pro-clean-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.multirender_test $(QMAKE) -o Makefile.multirender_test D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\multirender_test.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.multirender_test clean
sub-buildfiles-multirender_test-pro-clean: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.multirender_test $(QMAKE) -o Makefile.multirender_test D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\multirender_test.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.multirender_test clean
sub-buildfiles-multirender_test-pro-distclean-ordered: sub-buildfiles-simple_dcraw-pro-distclean-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.multirender_test $(QMAKE) -o Makefile.multirender_test D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\multirender_test.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.multirender_test distclean
sub-buildfiles-multirender_test-pro-distclean: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.multirender_test $(QMAKE) -o Makefile.multirender_test D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\multirender_test.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.multirender_test distclean
sub-buildfiles-multirender_test-pro-install_subtargets-ordered: sub-buildfiles-simple_dcraw-pro-install_subtargets-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.multirender_test $(QMAKE) -o Makefile.multirender_test D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\multirender_test.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.multirender_test install
sub-buildfiles-multirender_test-pro-install_subtargets: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.multirender_test $(QMAKE) -o Makefile.multirender_test D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\multirender_test.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.multirender_test install
sub-buildfiles-multirender_test-pro-uninstall_subtargets-ordered: sub-buildfiles-simple_dcraw-pro-uninstall_subtargets-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.multirender_test $(QMAKE) -o Makefile.multirender_test D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\multirender_test.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.multirender_test uninstall
sub-buildfiles-multirender_test-pro-uninstall_subtargets: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.multirender_test $(QMAKE) -o Makefile.multirender_test D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\multirender_test.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.multirender_test uninstall
sub-buildfiles-unprocessed_raw-pro-qmake_all: sub-buildfiles-multirender_test-pro-qmake_all FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && $(QMAKE) -o Makefile.unprocessed_raw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\unprocessed_raw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug"
	cd buildfiles\ && $(MAKE) -f Makefile.unprocessed_raw qmake_all
sub-buildfiles-unprocessed_raw-pro: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.unprocessed_raw $(QMAKE) -o Makefile.unprocessed_raw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\unprocessed_raw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.unprocessed_raw
sub-buildfiles-unprocessed_raw-pro-make_first-ordered: sub-buildfiles-multirender_test-pro-make_first-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.unprocessed_raw $(QMAKE) -o Makefile.unprocessed_raw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\unprocessed_raw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.unprocessed_raw 
sub-buildfiles-unprocessed_raw-pro-make_first: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.unprocessed_raw $(QMAKE) -o Makefile.unprocessed_raw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\unprocessed_raw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.unprocessed_raw 
sub-buildfiles-unprocessed_raw-pro-all-ordered: sub-buildfiles-multirender_test-pro-all-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.unprocessed_raw $(QMAKE) -o Makefile.unprocessed_raw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\unprocessed_raw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.unprocessed_raw all
sub-buildfiles-unprocessed_raw-pro-all: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.unprocessed_raw $(QMAKE) -o Makefile.unprocessed_raw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\unprocessed_raw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.unprocessed_raw all
sub-buildfiles-unprocessed_raw-pro-clean-ordered: sub-buildfiles-multirender_test-pro-clean-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.unprocessed_raw $(QMAKE) -o Makefile.unprocessed_raw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\unprocessed_raw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.unprocessed_raw clean
sub-buildfiles-unprocessed_raw-pro-clean: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.unprocessed_raw $(QMAKE) -o Makefile.unprocessed_raw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\unprocessed_raw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.unprocessed_raw clean
sub-buildfiles-unprocessed_raw-pro-distclean-ordered: sub-buildfiles-multirender_test-pro-distclean-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.unprocessed_raw $(QMAKE) -o Makefile.unprocessed_raw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\unprocessed_raw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.unprocessed_raw distclean
sub-buildfiles-unprocessed_raw-pro-distclean: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.unprocessed_raw $(QMAKE) -o Makefile.unprocessed_raw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\unprocessed_raw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.unprocessed_raw distclean
sub-buildfiles-unprocessed_raw-pro-install_subtargets-ordered: sub-buildfiles-multirender_test-pro-install_subtargets-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.unprocessed_raw $(QMAKE) -o Makefile.unprocessed_raw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\unprocessed_raw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.unprocessed_raw install
sub-buildfiles-unprocessed_raw-pro-install_subtargets: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.unprocessed_raw $(QMAKE) -o Makefile.unprocessed_raw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\unprocessed_raw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.unprocessed_raw install
sub-buildfiles-unprocessed_raw-pro-uninstall_subtargets-ordered: sub-buildfiles-multirender_test-pro-uninstall_subtargets-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.unprocessed_raw $(QMAKE) -o Makefile.unprocessed_raw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\unprocessed_raw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.unprocessed_raw uninstall
sub-buildfiles-unprocessed_raw-pro-uninstall_subtargets: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.unprocessed_raw $(QMAKE) -o Makefile.unprocessed_raw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\unprocessed_raw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.unprocessed_raw uninstall
sub-buildfiles-4channels-pro-qmake_all: sub-buildfiles-unprocessed_raw-pro-qmake_all FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && $(QMAKE) -o Makefile.4channels D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\4channels.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug"
	cd buildfiles\ && $(MAKE) -f Makefile.4channels qmake_all
sub-buildfiles-4channels-pro: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.4channels $(QMAKE) -o Makefile.4channels D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\4channels.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.4channels
sub-buildfiles-4channels-pro-make_first-ordered: sub-buildfiles-unprocessed_raw-pro-make_first-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.4channels $(QMAKE) -o Makefile.4channels D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\4channels.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.4channels 
sub-buildfiles-4channels-pro-make_first: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.4channels $(QMAKE) -o Makefile.4channels D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\4channels.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.4channels 
sub-buildfiles-4channels-pro-all-ordered: sub-buildfiles-unprocessed_raw-pro-all-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.4channels $(QMAKE) -o Makefile.4channels D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\4channels.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.4channels all
sub-buildfiles-4channels-pro-all: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.4channels $(QMAKE) -o Makefile.4channels D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\4channels.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.4channels all
sub-buildfiles-4channels-pro-clean-ordered: sub-buildfiles-unprocessed_raw-pro-clean-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.4channels $(QMAKE) -o Makefile.4channels D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\4channels.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.4channels clean
sub-buildfiles-4channels-pro-clean: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.4channels $(QMAKE) -o Makefile.4channels D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\4channels.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.4channels clean
sub-buildfiles-4channels-pro-distclean-ordered: sub-buildfiles-unprocessed_raw-pro-distclean-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.4channels $(QMAKE) -o Makefile.4channels D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\4channels.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.4channels distclean
sub-buildfiles-4channels-pro-distclean: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.4channels $(QMAKE) -o Makefile.4channels D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\4channels.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.4channels distclean
sub-buildfiles-4channels-pro-install_subtargets-ordered: sub-buildfiles-unprocessed_raw-pro-install_subtargets-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.4channels $(QMAKE) -o Makefile.4channels D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\4channels.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.4channels install
sub-buildfiles-4channels-pro-install_subtargets: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.4channels $(QMAKE) -o Makefile.4channels D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\4channels.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.4channels install
sub-buildfiles-4channels-pro-uninstall_subtargets-ordered: sub-buildfiles-unprocessed_raw-pro-uninstall_subtargets-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.4channels $(QMAKE) -o Makefile.4channels D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\4channels.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.4channels uninstall
sub-buildfiles-4channels-pro-uninstall_subtargets: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.4channels $(QMAKE) -o Makefile.4channels D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\4channels.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.4channels uninstall
sub-buildfiles-rawtextdump-pro-qmake_all: sub-buildfiles-4channels-pro-qmake_all FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && $(QMAKE) -o Makefile.rawtextdump D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\rawtextdump.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug"
	cd buildfiles\ && $(MAKE) -f Makefile.rawtextdump qmake_all
sub-buildfiles-rawtextdump-pro: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.rawtextdump $(QMAKE) -o Makefile.rawtextdump D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\rawtextdump.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.rawtextdump
sub-buildfiles-rawtextdump-pro-make_first-ordered: sub-buildfiles-4channels-pro-make_first-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.rawtextdump $(QMAKE) -o Makefile.rawtextdump D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\rawtextdump.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.rawtextdump 
sub-buildfiles-rawtextdump-pro-make_first: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.rawtextdump $(QMAKE) -o Makefile.rawtextdump D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\rawtextdump.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.rawtextdump 
sub-buildfiles-rawtextdump-pro-all-ordered: sub-buildfiles-4channels-pro-all-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.rawtextdump $(QMAKE) -o Makefile.rawtextdump D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\rawtextdump.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.rawtextdump all
sub-buildfiles-rawtextdump-pro-all: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.rawtextdump $(QMAKE) -o Makefile.rawtextdump D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\rawtextdump.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.rawtextdump all
sub-buildfiles-rawtextdump-pro-clean-ordered: sub-buildfiles-4channels-pro-clean-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.rawtextdump $(QMAKE) -o Makefile.rawtextdump D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\rawtextdump.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.rawtextdump clean
sub-buildfiles-rawtextdump-pro-clean: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.rawtextdump $(QMAKE) -o Makefile.rawtextdump D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\rawtextdump.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.rawtextdump clean
sub-buildfiles-rawtextdump-pro-distclean-ordered: sub-buildfiles-4channels-pro-distclean-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.rawtextdump $(QMAKE) -o Makefile.rawtextdump D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\rawtextdump.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.rawtextdump distclean
sub-buildfiles-rawtextdump-pro-distclean: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.rawtextdump $(QMAKE) -o Makefile.rawtextdump D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\rawtextdump.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.rawtextdump distclean
sub-buildfiles-rawtextdump-pro-install_subtargets-ordered: sub-buildfiles-4channels-pro-install_subtargets-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.rawtextdump $(QMAKE) -o Makefile.rawtextdump D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\rawtextdump.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.rawtextdump install
sub-buildfiles-rawtextdump-pro-install_subtargets: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.rawtextdump $(QMAKE) -o Makefile.rawtextdump D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\rawtextdump.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.rawtextdump install
sub-buildfiles-rawtextdump-pro-uninstall_subtargets-ordered: sub-buildfiles-4channels-pro-uninstall_subtargets-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.rawtextdump $(QMAKE) -o Makefile.rawtextdump D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\rawtextdump.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.rawtextdump uninstall
sub-buildfiles-rawtextdump-pro-uninstall_subtargets: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.rawtextdump $(QMAKE) -o Makefile.rawtextdump D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\rawtextdump.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.rawtextdump uninstall
sub-buildfiles-openbayer_sample-pro-qmake_all: sub-buildfiles-rawtextdump-pro-qmake_all FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && $(QMAKE) -o Makefile.openbayer_sample D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\openbayer_sample.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug"
	cd buildfiles\ && $(MAKE) -f Makefile.openbayer_sample qmake_all
sub-buildfiles-openbayer_sample-pro: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.openbayer_sample $(QMAKE) -o Makefile.openbayer_sample D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\openbayer_sample.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.openbayer_sample
sub-buildfiles-openbayer_sample-pro-make_first-ordered: sub-buildfiles-rawtextdump-pro-make_first-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.openbayer_sample $(QMAKE) -o Makefile.openbayer_sample D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\openbayer_sample.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.openbayer_sample 
sub-buildfiles-openbayer_sample-pro-make_first: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.openbayer_sample $(QMAKE) -o Makefile.openbayer_sample D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\openbayer_sample.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.openbayer_sample 
sub-buildfiles-openbayer_sample-pro-all-ordered: sub-buildfiles-rawtextdump-pro-all-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.openbayer_sample $(QMAKE) -o Makefile.openbayer_sample D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\openbayer_sample.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.openbayer_sample all
sub-buildfiles-openbayer_sample-pro-all: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.openbayer_sample $(QMAKE) -o Makefile.openbayer_sample D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\openbayer_sample.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.openbayer_sample all
sub-buildfiles-openbayer_sample-pro-clean-ordered: sub-buildfiles-rawtextdump-pro-clean-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.openbayer_sample $(QMAKE) -o Makefile.openbayer_sample D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\openbayer_sample.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.openbayer_sample clean
sub-buildfiles-openbayer_sample-pro-clean: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.openbayer_sample $(QMAKE) -o Makefile.openbayer_sample D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\openbayer_sample.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.openbayer_sample clean
sub-buildfiles-openbayer_sample-pro-distclean-ordered: sub-buildfiles-rawtextdump-pro-distclean-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.openbayer_sample $(QMAKE) -o Makefile.openbayer_sample D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\openbayer_sample.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.openbayer_sample distclean
sub-buildfiles-openbayer_sample-pro-distclean: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.openbayer_sample $(QMAKE) -o Makefile.openbayer_sample D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\openbayer_sample.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.openbayer_sample distclean
sub-buildfiles-openbayer_sample-pro-install_subtargets-ordered: sub-buildfiles-rawtextdump-pro-install_subtargets-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.openbayer_sample $(QMAKE) -o Makefile.openbayer_sample D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\openbayer_sample.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.openbayer_sample install
sub-buildfiles-openbayer_sample-pro-install_subtargets: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.openbayer_sample $(QMAKE) -o Makefile.openbayer_sample D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\openbayer_sample.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.openbayer_sample install
sub-buildfiles-openbayer_sample-pro-uninstall_subtargets-ordered: sub-buildfiles-rawtextdump-pro-uninstall_subtargets-ordered  FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.openbayer_sample $(QMAKE) -o Makefile.openbayer_sample D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\openbayer_sample.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.openbayer_sample uninstall
sub-buildfiles-openbayer_sample-pro-uninstall_subtargets: FORCE
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.openbayer_sample $(QMAKE) -o Makefile.openbayer_sample D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\openbayer_sample.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.openbayer_sample uninstall

Makefile: ../../LibRaw.pro C:/Qt/6.7.0/mingw_64/mkspecs/win32-g++/qmake.conf C:/Qt/6.7.0/mingw_64/mkspecs/features/spec_pre.prf \
		C:/Qt/6.7.0/mingw_64/mkspecs/features/device_config.prf \
		C:/Qt/6.7.0/mingw_64/mkspecs/common/sanitize.conf \
		C:/Qt/6.7.0/mingw_64/mkspecs/common/gcc-base.conf \
		C:/Qt/6.7.0/mingw_64/mkspecs/common/g++-base.conf \
		C:/Qt/6.7.0/mingw_64/mkspecs/features/win32/windows_vulkan_sdk.prf \
		C:/Qt/6.7.0/mingw_64/mkspecs/common/windows-vulkan.conf \
		C:/Qt/6.7.0/mingw_64/mkspecs/common/g++-win32.conf \
		C:/Qt/6.7.0/mingw_64/mkspecs/common/windows-desktop.conf \
		C:/Qt/6.7.0/mingw_64/mkspecs/qconfig.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_ext_freetype.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_ext_libjpeg.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_ext_libpng.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_charts.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_charts_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_chartsqml.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_chartsqml_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_concurrent.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_concurrent_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_core.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_core_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_dbus.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_dbus_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_designer.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_designer_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_designercomponents_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_devicediscovery_support_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_entrypoint_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_example_icons_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_fb_support_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_freetype_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_gui.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_gui_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_harfbuzz_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_help.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_help_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_jpeg_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_labsanimation.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_labsanimation_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_labsfolderlistmodel.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_labsfolderlistmodel_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_labsqmlmodels.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_labsqmlmodels_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_labssettings.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_labssettings_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_labssharedimage.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_labssharedimage_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_labswavefrontmesh.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_labswavefrontmesh_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_linguist.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_multimedia.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_multimedia_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_multimediaquick_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_multimediawidgets.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_multimediawidgets_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_network.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_network_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_opengl.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_opengl_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_openglwidgets.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_openglwidgets_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_packetprotocol_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_png_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_printsupport.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_printsupport_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qdoccatch_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qdoccatchconversions_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qdoccatchgenerators_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qml.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qml_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlbuiltins.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlbuiltins_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlcompiler.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlcompiler_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlcore.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlcore_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmldebug_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmldom_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlintegration.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlintegration_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmllocalstorage.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmllocalstorage_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlls_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlmodels.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlmodels_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlnetwork.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlnetwork_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmltest.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmltest_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmltoolingsettings_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmltyperegistrar_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlworkerscript.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlworkerscript_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlxmllistmodel.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlxmllistmodel_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3d.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3d_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dassetimport.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dassetimport_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dassetutils.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dassetutils_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3deffects.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3deffects_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dglslparser_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dhelpers.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dhelpers_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dhelpersimpl.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dhelpersimpl_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3diblbaker.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3diblbaker_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dparticleeffects.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dparticleeffects_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dparticles.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dparticles_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3druntimerender.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3druntimerender_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dspatialaudio_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dutils.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dutils_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2basic.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2basic_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2basicstyleimpl.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2basicstyleimpl_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2fusion.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2fusion_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2fusionstyleimpl.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2fusionstyleimpl_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2imagine.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2imagine_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2imaginestyleimpl.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2imaginestyleimpl_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2impl.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2impl_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2material.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2material_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2materialstyleimpl.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2materialstyleimpl_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2universal.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2universal_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2universalstyleimpl.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2universalstyleimpl_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2windowsstyleimpl.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2windowsstyleimpl_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrolstestutilsprivate_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickdialogs2.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickdialogs2_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickdialogs2quickimpl.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickdialogs2quickimpl_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickdialogs2utils.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickdialogs2utils_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickeffects_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quicklayouts.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quicklayouts_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickparticles_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickshapes_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quicktemplates2.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quicktemplates2_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quicktestutilsprivate_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quicktimeline.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quicktimeline_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quicktimelineblendtrees.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quicktimelineblendtrees_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickwidgets.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickwidgets_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_shadertools.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_shadertools_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_spatialaudio.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_spatialaudio_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_sql.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_sql_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_svg.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_svg_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_svgwidgets.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_svgwidgets_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_testlib.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_testlib_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_tools_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_uiplugin.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_uitools.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_uitools_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_widgets.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_widgets_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_xml.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_xml_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_zlib_private.pri \
		C:/Qt/6.7.0/mingw_64/mkspecs/features/qt_functions.prf \
		C:/Qt/6.7.0/mingw_64/mkspecs/features/qt_config.prf \
		C:/Qt/6.7.0/mingw_64/mkspecs/win32-g++/qmake.conf \
		C:/Qt/6.7.0/mingw_64/mkspecs/features/spec_post.prf \
		C:/Qt/6.7.0/mingw_64/mkspecs/features/exclusive_builds.prf \
		C:/Qt/6.7.0/mingw_64/mkspecs/features/toolchain.prf \
		C:/Qt/6.7.0/mingw_64/mkspecs/features/default_pre.prf \
		C:/Qt/6.7.0/mingw_64/mkspecs/features/win32/default_pre.prf \
		C:/Qt/6.7.0/mingw_64/mkspecs/features/resolve_config.prf \
		C:/Qt/6.7.0/mingw_64/mkspecs/features/exclusive_builds_post.prf \
		C:/Qt/6.7.0/mingw_64/mkspecs/features/default_post.prf \
		C:/Qt/6.7.0/mingw_64/mkspecs/features/qml_debug.prf \
		C:/Qt/6.7.0/mingw_64/mkspecs/features/precompile_header.prf \
		C:/Qt/6.7.0/mingw_64/mkspecs/features/warn_on.prf \
		C:/Qt/6.7.0/mingw_64/mkspecs/features/qmake_use.prf \
		C:/Qt/6.7.0/mingw_64/mkspecs/features/file_copies.prf \
		C:/Qt/6.7.0/mingw_64/mkspecs/features/win32/windows.prf \
		C:/Qt/6.7.0/mingw_64/mkspecs/features/testcase_targets.prf \
		C:/Qt/6.7.0/mingw_64/mkspecs/features/exceptions.prf \
		C:/Qt/6.7.0/mingw_64/mkspecs/features/yacc.prf \
		C:/Qt/6.7.0/mingw_64/mkspecs/features/lex.prf \
		../../LibRaw.pro
	$(QMAKE) -o Makefile ..\..\LibRaw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug"
C:/Qt/6.7.0/mingw_64/mkspecs/features/spec_pre.prf:
C:/Qt/6.7.0/mingw_64/mkspecs/features/device_config.prf:
C:/Qt/6.7.0/mingw_64/mkspecs/common/sanitize.conf:
C:/Qt/6.7.0/mingw_64/mkspecs/common/gcc-base.conf:
C:/Qt/6.7.0/mingw_64/mkspecs/common/g++-base.conf:
C:/Qt/6.7.0/mingw_64/mkspecs/features/win32/windows_vulkan_sdk.prf:
C:/Qt/6.7.0/mingw_64/mkspecs/common/windows-vulkan.conf:
C:/Qt/6.7.0/mingw_64/mkspecs/common/g++-win32.conf:
C:/Qt/6.7.0/mingw_64/mkspecs/common/windows-desktop.conf:
C:/Qt/6.7.0/mingw_64/mkspecs/qconfig.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_ext_freetype.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_ext_libjpeg.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_ext_libpng.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_charts.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_charts_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_chartsqml.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_chartsqml_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_concurrent.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_concurrent_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_core.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_core_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_dbus.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_dbus_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_designer.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_designer_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_designercomponents_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_devicediscovery_support_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_entrypoint_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_example_icons_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_fb_support_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_freetype_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_gui.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_gui_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_harfbuzz_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_help.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_help_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_jpeg_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_labsanimation.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_labsanimation_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_labsfolderlistmodel.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_labsfolderlistmodel_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_labsqmlmodels.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_labsqmlmodels_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_labssettings.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_labssettings_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_labssharedimage.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_labssharedimage_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_labswavefrontmesh.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_labswavefrontmesh_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_linguist.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_multimedia.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_multimedia_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_multimediaquick_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_multimediawidgets.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_multimediawidgets_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_network.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_network_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_opengl.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_opengl_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_openglwidgets.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_openglwidgets_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_packetprotocol_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_png_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_printsupport.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_printsupport_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qdoccatch_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qdoccatchconversions_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qdoccatchgenerators_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qml.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qml_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlbuiltins.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlbuiltins_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlcompiler.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlcompiler_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlcore.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlcore_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmldebug_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmldom_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlintegration.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlintegration_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmllocalstorage.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmllocalstorage_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlls_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlmodels.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlmodels_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlnetwork.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlnetwork_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmltest.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmltest_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmltoolingsettings_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmltyperegistrar_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlworkerscript.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlworkerscript_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlxmllistmodel.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_qmlxmllistmodel_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3d.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3d_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dassetimport.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dassetimport_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dassetutils.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dassetutils_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3deffects.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3deffects_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dglslparser_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dhelpers.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dhelpers_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dhelpersimpl.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dhelpersimpl_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3diblbaker.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3diblbaker_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dparticleeffects.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dparticleeffects_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dparticles.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dparticles_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3druntimerender.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3druntimerender_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dspatialaudio_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dutils.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick3dutils_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quick_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2basic.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2basic_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2basicstyleimpl.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2basicstyleimpl_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2fusion.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2fusion_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2fusionstyleimpl.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2fusionstyleimpl_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2imagine.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2imagine_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2imaginestyleimpl.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2imaginestyleimpl_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2impl.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2impl_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2material.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2material_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2materialstyleimpl.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2materialstyleimpl_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2universal.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2universal_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2universalstyleimpl.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2universalstyleimpl_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2windowsstyleimpl.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrols2windowsstyleimpl_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickcontrolstestutilsprivate_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickdialogs2.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickdialogs2_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickdialogs2quickimpl.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickdialogs2quickimpl_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickdialogs2utils.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickdialogs2utils_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickeffects_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quicklayouts.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quicklayouts_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickparticles_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickshapes_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quicktemplates2.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quicktemplates2_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quicktestutilsprivate_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quicktimeline.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quicktimeline_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quicktimelineblendtrees.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quicktimelineblendtrees_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickwidgets.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_quickwidgets_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_shadertools.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_shadertools_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_spatialaudio.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_spatialaudio_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_sql.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_sql_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_svg.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_svg_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_svgwidgets.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_svgwidgets_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_testlib.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_testlib_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_tools_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_uiplugin.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_uitools.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_uitools_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_widgets.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_widgets_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_xml.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_xml_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/modules/qt_lib_zlib_private.pri:
C:/Qt/6.7.0/mingw_64/mkspecs/features/qt_functions.prf:
C:/Qt/6.7.0/mingw_64/mkspecs/features/qt_config.prf:
C:/Qt/6.7.0/mingw_64/mkspecs/win32-g++/qmake.conf:
C:/Qt/6.7.0/mingw_64/mkspecs/features/spec_post.prf:
C:/Qt/6.7.0/mingw_64/mkspecs/features/exclusive_builds.prf:
C:/Qt/6.7.0/mingw_64/mkspecs/features/toolchain.prf:
C:/Qt/6.7.0/mingw_64/mkspecs/features/default_pre.prf:
C:/Qt/6.7.0/mingw_64/mkspecs/features/win32/default_pre.prf:
C:/Qt/6.7.0/mingw_64/mkspecs/features/resolve_config.prf:
C:/Qt/6.7.0/mingw_64/mkspecs/features/exclusive_builds_post.prf:
C:/Qt/6.7.0/mingw_64/mkspecs/features/default_post.prf:
C:/Qt/6.7.0/mingw_64/mkspecs/features/qml_debug.prf:
C:/Qt/6.7.0/mingw_64/mkspecs/features/precompile_header.prf:
C:/Qt/6.7.0/mingw_64/mkspecs/features/warn_on.prf:
C:/Qt/6.7.0/mingw_64/mkspecs/features/qmake_use.prf:
C:/Qt/6.7.0/mingw_64/mkspecs/features/file_copies.prf:
C:/Qt/6.7.0/mingw_64/mkspecs/features/win32/windows.prf:
C:/Qt/6.7.0/mingw_64/mkspecs/features/testcase_targets.prf:
C:/Qt/6.7.0/mingw_64/mkspecs/features/exceptions.prf:
C:/Qt/6.7.0/mingw_64/mkspecs/features/yacc.prf:
C:/Qt/6.7.0/mingw_64/mkspecs/features/lex.prf:
../../LibRaw.pro:
qmake: FORCE
	@$(QMAKE) -o Makefile ..\..\LibRaw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug"

qmake_all: sub-buildfiles-dcraw_emu-pro-qmake_all sub-buildfiles-libraw-pro-qmake_all sub-buildfiles-postprocessing_benchmark-pro-qmake_all sub-buildfiles-dcraw_half-pro-qmake_all sub-buildfiles-mem_image-pro-qmake_all sub-buildfiles-raw-identify-pro-qmake_all sub-buildfiles-simple_dcraw-pro-qmake_all sub-buildfiles-multirender_test-pro-qmake_all sub-buildfiles-unprocessed_raw-pro-qmake_all sub-buildfiles-4channels-pro-qmake_all sub-buildfiles-rawtextdump-pro-qmake_all sub-buildfiles-openbayer_sample-pro-qmake_all FORCE

make_first: sub-buildfiles-dcraw_emu-pro-make_first-ordered sub-buildfiles-libraw-pro-make_first-ordered sub-buildfiles-postprocessing_benchmark-pro-make_first-ordered sub-buildfiles-dcraw_half-pro-make_first-ordered sub-buildfiles-mem_image-pro-make_first-ordered sub-buildfiles-raw-identify-pro-make_first-ordered sub-buildfiles-simple_dcraw-pro-make_first-ordered sub-buildfiles-multirender_test-pro-make_first-ordered sub-buildfiles-unprocessed_raw-pro-make_first-ordered sub-buildfiles-4channels-pro-make_first-ordered sub-buildfiles-rawtextdump-pro-make_first-ordered sub-buildfiles-openbayer_sample-pro-make_first-ordered  FORCE
all: sub-buildfiles-dcraw_emu-pro-all-ordered sub-buildfiles-libraw-pro-all-ordered sub-buildfiles-postprocessing_benchmark-pro-all-ordered sub-buildfiles-dcraw_half-pro-all-ordered sub-buildfiles-mem_image-pro-all-ordered sub-buildfiles-raw-identify-pro-all-ordered sub-buildfiles-simple_dcraw-pro-all-ordered sub-buildfiles-multirender_test-pro-all-ordered sub-buildfiles-unprocessed_raw-pro-all-ordered sub-buildfiles-4channels-pro-all-ordered sub-buildfiles-rawtextdump-pro-all-ordered sub-buildfiles-openbayer_sample-pro-all-ordered  FORCE
clean: sub-buildfiles-dcraw_emu-pro-clean-ordered sub-buildfiles-libraw-pro-clean-ordered sub-buildfiles-postprocessing_benchmark-pro-clean-ordered sub-buildfiles-dcraw_half-pro-clean-ordered sub-buildfiles-mem_image-pro-clean-ordered sub-buildfiles-raw-identify-pro-clean-ordered sub-buildfiles-simple_dcraw-pro-clean-ordered sub-buildfiles-multirender_test-pro-clean-ordered sub-buildfiles-unprocessed_raw-pro-clean-ordered sub-buildfiles-4channels-pro-clean-ordered sub-buildfiles-rawtextdump-pro-clean-ordered sub-buildfiles-openbayer_sample-pro-clean-ordered  FORCE
distclean: sub-buildfiles-dcraw_emu-pro-distclean-ordered sub-buildfiles-libraw-pro-distclean-ordered sub-buildfiles-postprocessing_benchmark-pro-distclean-ordered sub-buildfiles-dcraw_half-pro-distclean-ordered sub-buildfiles-mem_image-pro-distclean-ordered sub-buildfiles-raw-identify-pro-distclean-ordered sub-buildfiles-simple_dcraw-pro-distclean-ordered sub-buildfiles-multirender_test-pro-distclean-ordered sub-buildfiles-unprocessed_raw-pro-distclean-ordered sub-buildfiles-4channels-pro-distclean-ordered sub-buildfiles-rawtextdump-pro-distclean-ordered sub-buildfiles-openbayer_sample-pro-distclean-ordered  FORCE
	-$(DEL_FILE) Makefile
	-$(DEL_FILE) .qmake.stash
install_subtargets: sub-buildfiles-dcraw_emu-pro-install_subtargets-ordered sub-buildfiles-libraw-pro-install_subtargets-ordered sub-buildfiles-postprocessing_benchmark-pro-install_subtargets-ordered sub-buildfiles-dcraw_half-pro-install_subtargets-ordered sub-buildfiles-mem_image-pro-install_subtargets-ordered sub-buildfiles-raw-identify-pro-install_subtargets-ordered sub-buildfiles-simple_dcraw-pro-install_subtargets-ordered sub-buildfiles-multirender_test-pro-install_subtargets-ordered sub-buildfiles-unprocessed_raw-pro-install_subtargets-ordered sub-buildfiles-4channels-pro-install_subtargets-ordered sub-buildfiles-rawtextdump-pro-install_subtargets-ordered sub-buildfiles-openbayer_sample-pro-install_subtargets-ordered FORCE
uninstall_subtargets: sub-buildfiles-dcraw_emu-pro-uninstall_subtargets-ordered sub-buildfiles-libraw-pro-uninstall_subtargets-ordered sub-buildfiles-postprocessing_benchmark-pro-uninstall_subtargets-ordered sub-buildfiles-dcraw_half-pro-uninstall_subtargets-ordered sub-buildfiles-mem_image-pro-uninstall_subtargets-ordered sub-buildfiles-raw-identify-pro-uninstall_subtargets-ordered sub-buildfiles-simple_dcraw-pro-uninstall_subtargets-ordered sub-buildfiles-multirender_test-pro-uninstall_subtargets-ordered sub-buildfiles-unprocessed_raw-pro-uninstall_subtargets-ordered sub-buildfiles-4channels-pro-uninstall_subtargets-ordered sub-buildfiles-rawtextdump-pro-uninstall_subtargets-ordered sub-buildfiles-openbayer_sample-pro-uninstall_subtargets-ordered FORCE

sub-buildfiles-dcraw_emu-pro-debug_ordered:
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_emu $(QMAKE) -o Makefile.dcraw_emu D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_emu.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_emu debug
sub-buildfiles-libraw-pro-debug_ordered: sub-buildfiles-dcraw_emu-pro-debug_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.libraw $(QMAKE) -o Makefile.libraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\libraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.libraw debug
sub-buildfiles-postprocessing_benchmark-pro-debug_ordered: sub-buildfiles-libraw-pro-debug_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.postprocessing_benchmark $(QMAKE) -o Makefile.postprocessing_benchmark D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\postprocessing_benchmark.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.postprocessing_benchmark debug
sub-buildfiles-dcraw_half-pro-debug_ordered: sub-buildfiles-postprocessing_benchmark-pro-debug_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_half $(QMAKE) -o Makefile.dcraw_half D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_half.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_half debug
sub-buildfiles-mem_image-pro-debug_ordered: sub-buildfiles-dcraw_half-pro-debug_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.mem_image $(QMAKE) -o Makefile.mem_image D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\mem_image.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.mem_image debug
sub-buildfiles-raw-identify-pro-debug_ordered: sub-buildfiles-mem_image-pro-debug_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.raw-identify $(QMAKE) -o Makefile.raw-identify D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\raw-identify.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.raw-identify debug
sub-buildfiles-simple_dcraw-pro-debug_ordered: sub-buildfiles-raw-identify-pro-debug_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.simple_dcraw $(QMAKE) -o Makefile.simple_dcraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\simple_dcraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.simple_dcraw debug
sub-buildfiles-multirender_test-pro-debug_ordered: sub-buildfiles-simple_dcraw-pro-debug_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.multirender_test $(QMAKE) -o Makefile.multirender_test D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\multirender_test.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.multirender_test debug
sub-buildfiles-unprocessed_raw-pro-debug_ordered: sub-buildfiles-multirender_test-pro-debug_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.unprocessed_raw $(QMAKE) -o Makefile.unprocessed_raw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\unprocessed_raw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.unprocessed_raw debug
sub-buildfiles-4channels-pro-debug_ordered: sub-buildfiles-unprocessed_raw-pro-debug_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.4channels $(QMAKE) -o Makefile.4channels D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\4channels.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.4channels debug
sub-buildfiles-rawtextdump-pro-debug_ordered: sub-buildfiles-4channels-pro-debug_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.rawtextdump $(QMAKE) -o Makefile.rawtextdump D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\rawtextdump.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.rawtextdump debug
sub-buildfiles-openbayer_sample-pro-debug_ordered: sub-buildfiles-rawtextdump-pro-debug_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.openbayer_sample $(QMAKE) -o Makefile.openbayer_sample D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\openbayer_sample.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.openbayer_sample debug
debug: sub-buildfiles-dcraw_emu-pro-debug_ordered sub-buildfiles-libraw-pro-debug_ordered sub-buildfiles-postprocessing_benchmark-pro-debug_ordered sub-buildfiles-dcraw_half-pro-debug_ordered sub-buildfiles-mem_image-pro-debug_ordered sub-buildfiles-raw-identify-pro-debug_ordered sub-buildfiles-simple_dcraw-pro-debug_ordered sub-buildfiles-multirender_test-pro-debug_ordered sub-buildfiles-unprocessed_raw-pro-debug_ordered sub-buildfiles-4channels-pro-debug_ordered sub-buildfiles-rawtextdump-pro-debug_ordered sub-buildfiles-openbayer_sample-pro-debug_ordered

sub-buildfiles-dcraw_emu-pro-release_ordered:
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_emu $(QMAKE) -o Makefile.dcraw_emu D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_emu.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_emu release
sub-buildfiles-libraw-pro-release_ordered: sub-buildfiles-dcraw_emu-pro-release_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.libraw $(QMAKE) -o Makefile.libraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\libraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.libraw release
sub-buildfiles-postprocessing_benchmark-pro-release_ordered: sub-buildfiles-libraw-pro-release_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.postprocessing_benchmark $(QMAKE) -o Makefile.postprocessing_benchmark D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\postprocessing_benchmark.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.postprocessing_benchmark release
sub-buildfiles-dcraw_half-pro-release_ordered: sub-buildfiles-postprocessing_benchmark-pro-release_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_half $(QMAKE) -o Makefile.dcraw_half D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_half.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_half release
sub-buildfiles-mem_image-pro-release_ordered: sub-buildfiles-dcraw_half-pro-release_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.mem_image $(QMAKE) -o Makefile.mem_image D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\mem_image.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.mem_image release
sub-buildfiles-raw-identify-pro-release_ordered: sub-buildfiles-mem_image-pro-release_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.raw-identify $(QMAKE) -o Makefile.raw-identify D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\raw-identify.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.raw-identify release
sub-buildfiles-simple_dcraw-pro-release_ordered: sub-buildfiles-raw-identify-pro-release_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.simple_dcraw $(QMAKE) -o Makefile.simple_dcraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\simple_dcraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.simple_dcraw release
sub-buildfiles-multirender_test-pro-release_ordered: sub-buildfiles-simple_dcraw-pro-release_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.multirender_test $(QMAKE) -o Makefile.multirender_test D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\multirender_test.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.multirender_test release
sub-buildfiles-unprocessed_raw-pro-release_ordered: sub-buildfiles-multirender_test-pro-release_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.unprocessed_raw $(QMAKE) -o Makefile.unprocessed_raw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\unprocessed_raw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.unprocessed_raw release
sub-buildfiles-4channels-pro-release_ordered: sub-buildfiles-unprocessed_raw-pro-release_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.4channels $(QMAKE) -o Makefile.4channels D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\4channels.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.4channels release
sub-buildfiles-rawtextdump-pro-release_ordered: sub-buildfiles-4channels-pro-release_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.rawtextdump $(QMAKE) -o Makefile.rawtextdump D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\rawtextdump.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.rawtextdump release
sub-buildfiles-openbayer_sample-pro-release_ordered: sub-buildfiles-rawtextdump-pro-release_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.openbayer_sample $(QMAKE) -o Makefile.openbayer_sample D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\openbayer_sample.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.openbayer_sample release
release: sub-buildfiles-dcraw_emu-pro-release_ordered sub-buildfiles-libraw-pro-release_ordered sub-buildfiles-postprocessing_benchmark-pro-release_ordered sub-buildfiles-dcraw_half-pro-release_ordered sub-buildfiles-mem_image-pro-release_ordered sub-buildfiles-raw-identify-pro-release_ordered sub-buildfiles-simple_dcraw-pro-release_ordered sub-buildfiles-multirender_test-pro-release_ordered sub-buildfiles-unprocessed_raw-pro-release_ordered sub-buildfiles-4channels-pro-release_ordered sub-buildfiles-rawtextdump-pro-release_ordered sub-buildfiles-openbayer_sample-pro-release_ordered

sub-buildfiles-dcraw_emu-pro-check_ordered:
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_emu $(QMAKE) -o Makefile.dcraw_emu D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_emu.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_emu check
sub-buildfiles-libraw-pro-check_ordered: sub-buildfiles-dcraw_emu-pro-check_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.libraw $(QMAKE) -o Makefile.libraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\libraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.libraw check
sub-buildfiles-postprocessing_benchmark-pro-check_ordered: sub-buildfiles-libraw-pro-check_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.postprocessing_benchmark $(QMAKE) -o Makefile.postprocessing_benchmark D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\postprocessing_benchmark.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.postprocessing_benchmark check
sub-buildfiles-dcraw_half-pro-check_ordered: sub-buildfiles-postprocessing_benchmark-pro-check_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_half $(QMAKE) -o Makefile.dcraw_half D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_half.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_half check
sub-buildfiles-mem_image-pro-check_ordered: sub-buildfiles-dcraw_half-pro-check_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.mem_image $(QMAKE) -o Makefile.mem_image D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\mem_image.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.mem_image check
sub-buildfiles-raw-identify-pro-check_ordered: sub-buildfiles-mem_image-pro-check_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.raw-identify $(QMAKE) -o Makefile.raw-identify D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\raw-identify.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.raw-identify check
sub-buildfiles-simple_dcraw-pro-check_ordered: sub-buildfiles-raw-identify-pro-check_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.simple_dcraw $(QMAKE) -o Makefile.simple_dcraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\simple_dcraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.simple_dcraw check
sub-buildfiles-multirender_test-pro-check_ordered: sub-buildfiles-simple_dcraw-pro-check_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.multirender_test $(QMAKE) -o Makefile.multirender_test D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\multirender_test.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.multirender_test check
sub-buildfiles-unprocessed_raw-pro-check_ordered: sub-buildfiles-multirender_test-pro-check_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.unprocessed_raw $(QMAKE) -o Makefile.unprocessed_raw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\unprocessed_raw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.unprocessed_raw check
sub-buildfiles-4channels-pro-check_ordered: sub-buildfiles-unprocessed_raw-pro-check_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.4channels $(QMAKE) -o Makefile.4channels D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\4channels.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.4channels check
sub-buildfiles-rawtextdump-pro-check_ordered: sub-buildfiles-4channels-pro-check_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.rawtextdump $(QMAKE) -o Makefile.rawtextdump D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\rawtextdump.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.rawtextdump check
sub-buildfiles-openbayer_sample-pro-check_ordered: sub-buildfiles-rawtextdump-pro-check_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.openbayer_sample $(QMAKE) -o Makefile.openbayer_sample D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\openbayer_sample.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.openbayer_sample check
check: sub-buildfiles-dcraw_emu-pro-check_ordered sub-buildfiles-libraw-pro-check_ordered sub-buildfiles-postprocessing_benchmark-pro-check_ordered sub-buildfiles-dcraw_half-pro-check_ordered sub-buildfiles-mem_image-pro-check_ordered sub-buildfiles-raw-identify-pro-check_ordered sub-buildfiles-simple_dcraw-pro-check_ordered sub-buildfiles-multirender_test-pro-check_ordered sub-buildfiles-unprocessed_raw-pro-check_ordered sub-buildfiles-4channels-pro-check_ordered sub-buildfiles-rawtextdump-pro-check_ordered sub-buildfiles-openbayer_sample-pro-check_ordered

sub-buildfiles-dcraw_emu-pro-benchmark_ordered:
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_emu $(QMAKE) -o Makefile.dcraw_emu D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_emu.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_emu benchmark
sub-buildfiles-libraw-pro-benchmark_ordered: sub-buildfiles-dcraw_emu-pro-benchmark_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.libraw $(QMAKE) -o Makefile.libraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\libraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.libraw benchmark
sub-buildfiles-postprocessing_benchmark-pro-benchmark_ordered: sub-buildfiles-libraw-pro-benchmark_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.postprocessing_benchmark $(QMAKE) -o Makefile.postprocessing_benchmark D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\postprocessing_benchmark.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.postprocessing_benchmark benchmark
sub-buildfiles-dcraw_half-pro-benchmark_ordered: sub-buildfiles-postprocessing_benchmark-pro-benchmark_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.dcraw_half $(QMAKE) -o Makefile.dcraw_half D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\dcraw_half.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.dcraw_half benchmark
sub-buildfiles-mem_image-pro-benchmark_ordered: sub-buildfiles-dcraw_half-pro-benchmark_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.mem_image $(QMAKE) -o Makefile.mem_image D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\mem_image.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.mem_image benchmark
sub-buildfiles-raw-identify-pro-benchmark_ordered: sub-buildfiles-mem_image-pro-benchmark_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.raw-identify $(QMAKE) -o Makefile.raw-identify D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\raw-identify.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.raw-identify benchmark
sub-buildfiles-simple_dcraw-pro-benchmark_ordered: sub-buildfiles-raw-identify-pro-benchmark_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.simple_dcraw $(QMAKE) -o Makefile.simple_dcraw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\simple_dcraw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.simple_dcraw benchmark
sub-buildfiles-multirender_test-pro-benchmark_ordered: sub-buildfiles-simple_dcraw-pro-benchmark_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.multirender_test $(QMAKE) -o Makefile.multirender_test D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\multirender_test.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.multirender_test benchmark
sub-buildfiles-unprocessed_raw-pro-benchmark_ordered: sub-buildfiles-multirender_test-pro-benchmark_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.unprocessed_raw $(QMAKE) -o Makefile.unprocessed_raw D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\unprocessed_raw.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.unprocessed_raw benchmark
sub-buildfiles-4channels-pro-benchmark_ordered: sub-buildfiles-unprocessed_raw-pro-benchmark_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.4channels $(QMAKE) -o Makefile.4channels D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\4channels.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.4channels benchmark
sub-buildfiles-rawtextdump-pro-benchmark_ordered: sub-buildfiles-4channels-pro-benchmark_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.rawtextdump $(QMAKE) -o Makefile.rawtextdump D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\rawtextdump.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.rawtextdump benchmark
sub-buildfiles-openbayer_sample-pro-benchmark_ordered: sub-buildfiles-rawtextdump-pro-benchmark_ordered 
	@if not exist buildfiles\ mkdir buildfiles\ & if not exist buildfiles\ exit 1
	cd buildfiles\ && ( if not exist Makefile.openbayer_sample $(QMAKE) -o Makefile.openbayer_sample D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\buildfiles\openbayer_sample.pro -spec win32-g++ "CONFIG+=debug" "CONFIG+=qml_debug" ) && $(MAKE) -f Makefile.openbayer_sample benchmark
benchmark: sub-buildfiles-dcraw_emu-pro-benchmark_ordered sub-buildfiles-libraw-pro-benchmark_ordered sub-buildfiles-postprocessing_benchmark-pro-benchmark_ordered sub-buildfiles-dcraw_half-pro-benchmark_ordered sub-buildfiles-mem_image-pro-benchmark_ordered sub-buildfiles-raw-identify-pro-benchmark_ordered sub-buildfiles-simple_dcraw-pro-benchmark_ordered sub-buildfiles-multirender_test-pro-benchmark_ordered sub-buildfiles-unprocessed_raw-pro-benchmark_ordered sub-buildfiles-4channels-pro-benchmark_ordered sub-buildfiles-rawtextdump-pro-benchmark_ordered sub-buildfiles-openbayer_sample-pro-benchmark_ordered
install:install_subtargets  FORCE

uninstall: uninstall_subtargets FORCE

FORCE:

.SUFFIXES:

