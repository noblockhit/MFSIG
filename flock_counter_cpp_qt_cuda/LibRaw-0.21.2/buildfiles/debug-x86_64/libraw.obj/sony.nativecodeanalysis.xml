<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\libraw\</FILEPATH>
      <FILENAME>libraw_alloc.h</FILENAME>
      <LINE>37</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>6387</DEFECTCODE>
    <DESCRIPTION>'mems' could be '0'.</DESCRIPTION>
    <FUNCTION>libraw_memmgr::{ctor}</FUNCTION>
    <DECORATED>??0libraw_memmgr@@QEAA@I@Z</DECORATED>
    <FUNCLINE>33</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\libraw\</FILEPATH>
        <FILENAME>libraw_alloc.h</FILENAME>
        <LINE>33</LINE>
        <COLUMN>42</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\libraw\</FILEPATH>
        <FILENAME>libraw_alloc.h</FILENAME>
        <LINE>35</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\libraw\</FILEPATH>
        <FILENAME>libraw_alloc.h</FILENAME>
        <LINE>36</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\libraw\</FILEPATH>
        <FILENAME>libraw_alloc.h</FILENAME>
        <LINE>37</LINE>
        <COLUMN>10</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'mems' is an Output from 'memset' (declared at c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.37.32822\include\vcruntime_string.h:63)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\libraw\</FILEPATH>
        <FILENAME>libraw_alloc.h</FILENAME>
        <LINE>37</LINE>
        <COLUMN>10</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'mems' should not be NULL, because this is not consistent with the SAL annotation on 'memset'</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>53</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>my_roundf</FUNCTION>
    <DECORATED>?my_roundf@@YAMM@Z</DECORATED>
    <FUNCLINE>47</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>60</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>my_roundf</FUNCTION>
    <DECORATED>?my_roundf@@YAMM@Z</DECORATED>
    <FUNCLINE>47</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>549</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6059</DEFECTCODE>
    <DESCRIPTION>Misuse of length parameter in call to 'strncat'.  Pass the number of remaining characters, not the buffer size of 'imgdata.lens.makernotes.LensFeatures_suf'.</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonyLensFeatures</FUNCTION>
    <DECORATED>?parseSonyLensFeatures@LibRaw@@IEAAXEE@Z</DECORATED>
    <FUNCLINE>481</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>1</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>484</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>485</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>488</LINE>
        <COLUMN>48</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>491</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>492</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>493</LINE>
        <COLUMN>26</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>495</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'features' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>497</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'features' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>500</LINE>
        <COLUMN>22</COLUMN>
        <KEYEVENT>
          <ID>5</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>520</LINE>
        <COLUMN>15</COLUMN>
        <KEYEVENT>
          <ID>6</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'features' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>523</LINE>
        <COLUMN>15</COLUMN>
        <KEYEVENT>
          <ID>7</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'features' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>525</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>8</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'features' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>528</LINE>
        <COLUMN>26</COLUMN>
        <KEYEVENT>
          <ID>9</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>530</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>10</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'features' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>532</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>11</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'features' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>534</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>12</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'features' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>537</LINE>
        <COLUMN>15</COLUMN>
        <KEYEVENT>
          <ID>13</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'features' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>539</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>14</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'features' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>542</LINE>
        <COLUMN>15</COLUMN>
        <KEYEVENT>
          <ID>15</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'features' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>545</LINE>
        <COLUMN>15</COLUMN>
        <KEYEVENT>
          <ID>16</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'features' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>548</LINE>
        <COLUMN>15</COLUMN>
        <KEYEVENT>
          <ID>17</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume 'features')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>549</LINE>
        <COLUMN>4</COLUMN>
        <KEYEVENT>
          <ID>18</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'imgdata' is an Output from 'LibRaw::strnlen' (declared at d:\coding\python\mfsig\flock_counter_cpp_qt_cuda\libraw-0.21.2\libraw\libraw.h:348)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>549</LINE>
        <COLUMN>4</COLUMN>
        <KEYEVENT>
          <ID>19</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>Length argument to 'strncat' should be less than the length of 'imgdata.lens.makernotes.LensFeatures_suf'</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>1386</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonyMakernotes</FUNCTION>
    <DECORATED>?parseSonyMakernotes@LibRaw@@IEAAXHIIIIAEAPEAEAEAG0101010101010101@Z</DECORATED>
    <FUNCLINE>1000</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>1975</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>checked_buffer_t::{ctor}</FUNCTION>
    <DECORATED>??0checked_buffer_t@@QEAA@FH@Z</DECORATED>
    <FUNCLINE>1975</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2119</LINE>
      <COLUMN>110</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySR2</FUNCTION>
    <DECORATED>?parseSonySR2@LibRaw@@IEAAXPEAEIII@Z</DECORATED>
    <FUNCLINE>2039</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2108</LINE>
      <COLUMN>97</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySR2</FUNCTION>
    <DECORATED>?parseSonySR2@LibRaw@@IEAAXPEAEIII@Z</DECORATED>
    <FUNCLINE>2039</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2082</LINE>
      <COLUMN>102</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySR2</FUNCTION>
    <DECORATED>?parseSonySR2@LibRaw@@IEAAXPEAEIII@Z</DECORATED>
    <FUNCLINE>2039</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2074</LINE>
      <COLUMN>101</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySR2</FUNCTION>
    <DECORATED>?parseSonySR2@LibRaw@@IEAAXPEAEIII@Z</DECORATED>
    <FUNCLINE>2039</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2070</LINE>
      <COLUMN>102</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySR2</FUNCTION>
    <DECORATED>?parseSonySR2@LibRaw@@IEAAXPEAEIII@Z</DECORATED>
    <FUNCLINE>2039</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2066</LINE>
      <COLUMN>88</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySR2</FUNCTION>
    <DECORATED>?parseSonySR2@LibRaw@@IEAAXPEAEIII@Z</DECORATED>
    <FUNCLINE>2039</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2138</LINE>
      <COLUMN>111</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySR2</FUNCTION>
    <DECORATED>?parseSonySR2@LibRaw@@IEAAXPEAEIII@Z</DECORATED>
    <FUNCLINE>2039</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2143</LINE>
      <COLUMN>112</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySR2</FUNCTION>
    <DECORATED>?parseSonySR2@LibRaw@@IEAAXPEAEIII@Z</DECORATED>
    <FUNCLINE>2039</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2151</LINE>
      <COLUMN>111</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySR2</FUNCTION>
    <DECORATED>?parseSonySR2@LibRaw@@IEAAXPEAEIII@Z</DECORATED>
    <FUNCLINE>2039</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2160</LINE>
      <COLUMN>113</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySR2</FUNCTION>
    <DECORATED>?parseSonySR2@LibRaw@@IEAAXPEAEIII@Z</DECORATED>
    <FUNCLINE>2039</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2165</LINE>
      <COLUMN>117</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySR2</FUNCTION>
    <DECORATED>?parseSonySR2@LibRaw@@IEAAXPEAEIII@Z</DECORATED>
    <FUNCLINE>2039</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2168</LINE>
      <COLUMN>117</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySR2</FUNCTION>
    <DECORATED>?parseSonySR2@LibRaw@@IEAAXPEAEIII@Z</DECORATED>
    <FUNCLINE>2039</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2207</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySRF</FUNCTION>
    <DECORATED>?parseSonySRF@LibRaw@@IEAAXI@Z</DECORATED>
    <FUNCLINE>2180</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2207</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySRF</FUNCTION>
    <DECORATED>?parseSonySRF@LibRaw@@IEAAXI@Z</DECORATED>
    <FUNCLINE>2180</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2221</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySRF</FUNCTION>
    <DECORATED>?parseSonySRF@LibRaw@@IEAAXI@Z</DECORATED>
    <FUNCLINE>2180</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>