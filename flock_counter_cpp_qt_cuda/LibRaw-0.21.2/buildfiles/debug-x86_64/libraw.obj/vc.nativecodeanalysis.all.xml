<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\libraw\</FILEPATH>
      <FILENAME>libraw_alloc.h</FILENAME>
      <LINE>37</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>6387</DEFECTCODE>
    <DESCRIPTION>'mems' could be '0'.</DESCRIPTION>
    <FUNCTION>libraw_memmgr::{ctor}</FUNCTION>
    <DECORATED>??0libraw_memmgr@@QEAA@I@Z</DECORATED>
    <FUNCLINE>33</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\libraw\</FILEPATH>
        <FILENAME>libraw_alloc.h</FILENAME>
        <LINE>33</LINE>
        <COLUMN>42</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\libraw\</FILEPATH>
        <FILENAME>libraw_alloc.h</FILENAME>
        <LINE>35</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\libraw\</FILEPATH>
        <FILENAME>libraw_alloc.h</FILENAME>
        <LINE>36</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\libraw\</FILEPATH>
        <FILENAME>libraw_alloc.h</FILENAME>
        <LINE>37</LINE>
        <COLUMN>10</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'mems' is an Output from 'memset' (declared at c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.37.32822\include\vcruntime_string.h:63)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\libraw\</FILEPATH>
        <FILENAME>libraw_alloc.h</FILENAME>
        <LINE>37</LINE>
        <COLUMN>10</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'mems' should not be NULL, because this is not consistent with the SAL annotation on 'memset'</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>aahd_demosaic.cpp</FILENAME>
      <LINE>133</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>AAHD::{ctor}</FUNCTION>
    <DECORATED>??0AAHD@@QEAA@AEAVLibRaw@@@Z</DECORATED>
    <FUNCLINE>129</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>aahd_demosaic.cpp</FILENAME>
      <LINE>138</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>AAHD::{ctor}</FUNCTION>
    <DECORATED>??0AAHD@@QEAA@AEAVLibRaw@@@Z</DECORATED>
    <FUNCLINE>129</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>aahd_demosaic.cpp</FILENAME>
      <LINE>139</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>AAHD::{ctor}</FUNCTION>
    <DECORATED>??0AAHD@@QEAA@AEAVLibRaw@@@Z</DECORATED>
    <FUNCLINE>129</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>aahd_demosaic.cpp</FILENAME>
      <LINE>140</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>AAHD::{ctor}</FUNCTION>
    <DECORATED>??0AAHD@@QEAA@AEAVLibRaw@@@Z</DECORATED>
    <FUNCLINE>129</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>aahd_demosaic.cpp</FILENAME>
      <LINE>141</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>AAHD::{ctor}</FUNCTION>
    <DECORATED>??0AAHD@@QEAA@AEAVLibRaw@@@Z</DECORATED>
    <FUNCLINE>129</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>aahd_demosaic.cpp</FILENAME>
      <LINE>142</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>AAHD::{ctor}</FUNCTION>
    <DECORATED>??0AAHD@@QEAA@AEAVLibRaw@@@Z</DECORATED>
    <FUNCLINE>129</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>aahd_demosaic.cpp</FILENAME>
      <LINE>143</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>AAHD::{ctor}</FUNCTION>
    <DECORATED>??0AAHD@@QEAA@AEAVLibRaw@@@Z</DECORATED>
    <FUNCLINE>129</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>adobepano.cpp</FILENAME>
      <LINE>40</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobePanoMakernote</FUNCTION>
    <DECORATED>?parseAdobePanoMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>ahd_demosaic.cpp</FILENAME>
      <LINE>88</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::ahd_interpolate_green_h_and_v</FUNCTION>
    <DECORATED>?ahd_interpolate_green_h_and_v@LibRaw@@IEAAXHHPEAY2CAA@CAA@2G@Z</DECORATED>
    <FUNCLINE>74</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>ahd_demosaic.cpp</FILENAME>
      <LINE>119</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::ahd_interpolate_r_and_b_in_rgb_and_convert_to_cielab</FUNCTION>
    <DECORATED>?ahd_interpolate_r_and_b_in_rgb_and_convert_to_cielab@LibRaw@@IEAAXHHPEAY1CAA@2GPEAY1CAA@2F@Z</DECORATED>
    <FUNCLINE>101</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>aspect_ratio.cpp</FILENAME>
      <LINE>48</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::fuji_rotate</FUNCTION>
    <DECORATED>?fuji_rotate@LibRaw@@MEAAXXZ</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>aspect_ratio.cpp</FILENAME>
      <LINE>54</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::fuji_rotate</FUNCTION>
    <DECORATED>?fuji_rotate@LibRaw@@MEAAXXZ</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>aspect_ratio.cpp</FILENAME>
      <LINE>87</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::stretch</FUNCTION>
    <DECORATED>?stretch@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>aspect_ratio.cpp</FILENAME>
      <LINE>104</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::stretch</FUNCTION>
    <DECORATED>?stretch@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>aspect_ratio.cpp</FILENAME>
      <LINE>104</LINE>
      <COLUMN>74</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::stretch</FUNCTION>
    <DECORATED>?stretch@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>canon.cpp</FILENAME>
      <LINE>176</LINE>
      <COLUMN>74</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::processCanonCameraInfo</FUNCTION>
    <DECORATED>?processCanonCameraInfo@LibRaw@@IEAAX_KPEAEIII@Z</DECORATED>
    <FUNCLINE>156</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>canon.cpp</FILENAME>
      <LINE>178</LINE>
      <COLUMN>74</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::processCanonCameraInfo</FUNCTION>
    <DECORATED>?processCanonCameraInfo@LibRaw@@IEAAX_KPEAEIII@Z</DECORATED>
    <FUNCLINE>156</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>canon.cpp</FILENAME>
      <LINE>180</LINE>
      <COLUMN>74</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::processCanonCameraInfo</FUNCTION>
    <DECORATED>?processCanonCameraInfo@LibRaw@@IEAAX_KPEAEIII@Z</DECORATED>
    <FUNCLINE>156</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>canon.cpp</FILENAME>
      <LINE>182</LINE>
      <COLUMN>74</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::processCanonCameraInfo</FUNCTION>
    <DECORATED>?processCanonCameraInfo@LibRaw@@IEAAX_KPEAEIII@Z</DECORATED>
    <FUNCLINE>156</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>canon.cpp</FILENAME>
      <LINE>176</LINE>
      <COLUMN>74</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::processCanonCameraInfo</FUNCTION>
    <DECORATED>?processCanonCameraInfo@LibRaw@@IEAAX_KPEAEIII@Z</DECORATED>
    <FUNCLINE>156</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>canon.cpp</FILENAME>
      <LINE>178</LINE>
      <COLUMN>74</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::processCanonCameraInfo</FUNCTION>
    <DECORATED>?processCanonCameraInfo@LibRaw@@IEAAX_KPEAEIII@Z</DECORATED>
    <FUNCLINE>156</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>canon.cpp</FILENAME>
      <LINE>180</LINE>
      <COLUMN>74</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::processCanonCameraInfo</FUNCTION>
    <DECORATED>?processCanonCameraInfo@LibRaw@@IEAAX_KPEAEIII@Z</DECORATED>
    <FUNCLINE>156</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>canon.cpp</FILENAME>
      <LINE>182</LINE>
      <COLUMN>74</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::processCanonCameraInfo</FUNCTION>
    <DECORATED>?processCanonCameraInfo@LibRaw@@IEAAX_KPEAEIII@Z</DECORATED>
    <FUNCLINE>156</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>canon.cpp</FILENAME>
      <LINE>976</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseCanonMakernotes</FUNCTION>
    <DECORATED>?parseCanonMakernotes@LibRaw@@IEAAXIIII@Z</DECORATED>
    <FUNCLINE>736</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>canon_600.cpp</FILENAME>
      <LINE>186</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::canon_600_load_raw</FUNCTION>
    <DECORATED>?canon_600_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>175</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>ciff.cpp</FILENAME>
      <LINE>53</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26453</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Left shift of a negative signed number is undefined behavior (io.4).</DESCRIPTION>
    <FUNCTION>LibRaw::ciff_block_1030</FUNCTION>
    <DECORATED>?ciff_block_1030@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>ciff.cpp</FILENAME>
      <LINE>74</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_ciff</FUNCTION>
    <DECORATED>?parse_ciff@LibRaw@@IEAAXHHH@Z</DECORATED>
    <FUNCLINE>60</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>ciff.cpp</FILENAME>
      <LINE>83</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_ciff</FUNCTION>
    <DECORATED>?parse_ciff@LibRaw@@IEAAXHHH@Z</DECORATED>
    <FUNCLINE>60</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>ciff.cpp</FILENAME>
      <LINE>83</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_ciff</FUNCTION>
    <DECORATED>?parse_ciff@LibRaw@@IEAAXHHH@Z</DECORATED>
    <FUNCLINE>60</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>ciff.cpp</FILENAME>
      <LINE>90</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_ciff</FUNCTION>
    <DECORATED>?parse_ciff@LibRaw@@IEAAXHHH@Z</DECORATED>
    <FUNCLINE>60</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>ciff.cpp</FILENAME>
      <LINE>285</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_ciff</FUNCTION>
    <DECORATED>?parse_ciff@LibRaw@@IEAAXHHH@Z</DECORATED>
    <FUNCLINE>60</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>cr3_parser.cpp</FILENAME>
      <LINE>819</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>6386</DEFECTCODE>
    <DESCRIPTION>Buffer overrun while writing to '&lt;COMPLEX_EXPR&gt;'.</DESCRIPTION>
    <FUNCTION>LibRaw::parseCR3</FUNCTION>
    <DECORATED>?parseCR3@LibRaw@@IEAAH_J0AEAFPEAD11@Z</DECORATED>
    <FUNCLINE>324</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>336</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>338</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>339</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>347</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>349</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>352</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>433</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>435</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>435</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>437</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>438</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>439</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>439</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>440</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>441</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>442</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>444</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>445</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>446</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>447</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>447</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>448</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>448</LINE>
        <COLUMN>25</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>449</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>449</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>449</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>450</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>452</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>453</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>454</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>455</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>456</LINE>
        <COLUMN>14</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>458</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>460</LINE>
        <COLUMN>23</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume '&lt;COMPLEX_EXPR&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>462</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>463</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>464</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>465</LINE>
        <COLUMN>4</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'libraw_internal_data' is an Output from 'LibRaw_abstract_datastream::seek' (declared at d:\coding\python\mfsig\flock_counter_cpp_qt_cuda\libraw-0.21.2\libraw\libraw_datastream.h:91)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>466</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>467</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>467</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'libraw_internal_data' is an Output from 'LibRaw_abstract_datastream::get_char' (declared at d:\coding\python\mfsig\flock_counter_cpp_qt_cuda\libraw-0.21.2\libraw\libraw_datastream.h:94)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>467</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>467</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>5</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'libraw_internal_data' is an Output from 'LibRaw_abstract_datastream::get_char' (declared at d:\coding\python\mfsig\flock_counter_cpp_qt_cuda\libraw-0.21.2\libraw\libraw_datastream.h:94)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>467</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>468</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>469</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>470</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>472</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>472</LINE>
        <COLUMN>18</COLUMN>
        <KEYEVENT>
          <ID>6</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume '&lt;COMPLEX_EXPR&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>473</LINE>
        <COLUMN>10</COLUMN>
        <KEYEVENT>
          <ID>7</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>472</LINE>
        <COLUMN>72</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>472</LINE>
        <COLUMN>18</COLUMN>
        <KEYEVENT>
          <ID>8</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume '&lt;COMPLEX_EXPR&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>473</LINE>
        <COLUMN>10</COLUMN>
        <KEYEVENT>
          <ID>9</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>472</LINE>
        <COLUMN>72</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>472</LINE>
        <COLUMN>18</COLUMN>
        <KEYEVENT>
          <ID>10</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume '&lt;COMPLEX_EXPR&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>479</LINE>
        <COLUMN>8</COLUMN>
        <KEYEVENT>
          <ID>11</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume '&lt;COMPLEX_EXPR&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>481</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>484</LINE>
        <COLUMN>15</COLUMN>
        <KEYEVENT>
          <ID>12</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>495</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>13</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>509</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>510</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>513</LINE>
        <COLUMN>5</COLUMN>
        <KEYEVENT>
          <ID>14</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>561</LINE>
        <COLUMN>8</COLUMN>
        <KEYEVENT>
          <ID>15</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>568</LINE>
        <COLUMN>8</COLUMN>
        <KEYEVENT>
          <ID>16</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>579</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>17</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>583</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>18</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>597</LINE>
        <COLUMN>49</COLUMN>
        <KEYEVENT>
          <ID>19</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>625</LINE>
        <COLUMN>10</COLUMN>
        <KEYEVENT>
          <ID>20</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>639</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>21</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>652</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>22</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>667</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>23</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>678</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>24</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>711</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>25</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>715</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>26</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>729</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>27</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>743</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>28</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>747</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>29</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>773</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>30</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>808</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>31</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume '&lt;COMPLEX_EXPR&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>810</LINE>
        <COLUMN>24</COLUMN>
        <KEYEVENT>
          <ID>32</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume '&lt;COMPLEX_EXPR&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>811</LINE>
        <COLUMN>8</COLUMN>
        <KEYEVENT>
          <ID>33</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'libraw_internal_data' is an Output from 'LibRaw_abstract_datastream::seek' (declared at d:\coding\python\mfsig\flock_counter_cpp_qt_cuda\libraw-0.21.2\libraw\libraw_datastream.h:91)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>812</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>813</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>814</LINE>
        <COLUMN>24</COLUMN>
        <KEYEVENT>
          <ID>34</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>819</LINE>
        <COLUMN>36</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>820</LINE>
        <COLUMN>11</COLUMN>
        <KEYEVENT>
          <ID>35</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>826</LINE>
        <COLUMN>34</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>827</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>827</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>828</LINE>
        <COLUMN>41</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>827</LINE>
        <COLUMN>34</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>827</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>830</LINE>
        <COLUMN>34</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>831</LINE>
        <COLUMN>34</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>837</LINE>
        <COLUMN>55</COLUMN>
        <KEYEVENT>
          <ID>36</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>846</LINE>
        <COLUMN>17</COLUMN>
        <KEYEVENT>
          <ID>37</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>853</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>460</LINE>
        <COLUMN>23</COLUMN>
        <KEYEVENT>
          <ID>38</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Continue this loop, (assume '&lt;COMPLEX_EXPR&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>462</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>463</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>464</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>465</LINE>
        <COLUMN>4</COLUMN>
        <KEYEVENT>
          <ID>39</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'libraw_internal_data' is an Output from 'LibRaw_abstract_datastream::seek' (declared at d:\coding\python\mfsig\flock_counter_cpp_qt_cuda\libraw-0.21.2\libraw\libraw_datastream.h:91)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>466</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>467</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>468</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>469</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>470</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>472</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>472</LINE>
        <COLUMN>18</COLUMN>
        <KEYEVENT>
          <ID>40</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Continue this loop, (assume '&lt;COMPLEX_EXPR&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>479</LINE>
        <COLUMN>8</COLUMN>
        <KEYEVENT>
          <ID>41</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume '&lt;COMPLEX_EXPR&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>481</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>484</LINE>
        <COLUMN>15</COLUMN>
        <KEYEVENT>
          <ID>42</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>495</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>43</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>509</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>510</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>513</LINE>
        <COLUMN>5</COLUMN>
        <KEYEVENT>
          <ID>44</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>561</LINE>
        <COLUMN>8</COLUMN>
        <KEYEVENT>
          <ID>45</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>568</LINE>
        <COLUMN>8</COLUMN>
        <KEYEVENT>
          <ID>46</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>579</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>47</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>583</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>48</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>597</LINE>
        <COLUMN>49</COLUMN>
        <KEYEVENT>
          <ID>49</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>625</LINE>
        <COLUMN>10</COLUMN>
        <KEYEVENT>
          <ID>50</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>639</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>51</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>652</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>52</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>667</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>53</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>678</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>54</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>711</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>55</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>715</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>56</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>729</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>57</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>743</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>58</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>747</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>59</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>773</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>60</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>808</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>61</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume '&lt;COMPLEX_EXPR&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>810</LINE>
        <COLUMN>24</COLUMN>
        <KEYEVENT>
          <ID>62</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume '&lt;COMPLEX_EXPR&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>811</LINE>
        <COLUMN>8</COLUMN>
        <KEYEVENT>
          <ID>63</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'libraw_internal_data' is an Output from 'LibRaw_abstract_datastream::seek' (declared at d:\coding\python\mfsig\flock_counter_cpp_qt_cuda\libraw-0.21.2\libraw\libraw_datastream.h:91)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>812</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>813</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>814</LINE>
        <COLUMN>24</COLUMN>
        <KEYEVENT>
          <ID>64</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>819</LINE>
        <COLUMN>36</COLUMN>
        <KEYEVENT>
          <ID>65</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>Invalid write to '&lt;COMPLEX_EXPR&gt;[-1]', (writable range is 0 to 15)</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>cr3_parser.cpp</FILENAME>
      <LINE>820</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>6385</DEFECTCODE>
    <DESCRIPTION>Reading invalid data from '&lt;COMPLEX_EXPR&gt;'.</DESCRIPTION>
    <FUNCTION>LibRaw::parseCR3</FUNCTION>
    <DECORATED>?parseCR3@LibRaw@@IEAAH_J0AEAFPEAD11@Z</DECORATED>
    <FUNCLINE>324</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>336</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>338</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>339</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>347</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>349</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>352</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>433</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>435</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>435</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>437</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>438</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>439</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>439</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>440</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>441</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>442</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>444</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>445</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>446</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>447</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>447</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>448</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>448</LINE>
        <COLUMN>25</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>449</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>449</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>449</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>450</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>452</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>453</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>454</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>455</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>456</LINE>
        <COLUMN>14</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>458</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>460</LINE>
        <COLUMN>23</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume '&lt;COMPLEX_EXPR&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>462</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>463</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>464</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>465</LINE>
        <COLUMN>4</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'libraw_internal_data' is an Output from 'LibRaw_abstract_datastream::seek' (declared at d:\coding\python\mfsig\flock_counter_cpp_qt_cuda\libraw-0.21.2\libraw\libraw_datastream.h:91)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>466</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>467</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>467</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'libraw_internal_data' is an Output from 'LibRaw_abstract_datastream::get_char' (declared at d:\coding\python\mfsig\flock_counter_cpp_qt_cuda\libraw-0.21.2\libraw\libraw_datastream.h:94)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>467</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>467</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>5</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'libraw_internal_data' is an Output from 'LibRaw_abstract_datastream::get_char' (declared at d:\coding\python\mfsig\flock_counter_cpp_qt_cuda\libraw-0.21.2\libraw\libraw_datastream.h:94)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>467</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>468</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>469</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>470</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>472</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>472</LINE>
        <COLUMN>18</COLUMN>
        <KEYEVENT>
          <ID>6</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume '&lt;COMPLEX_EXPR&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>473</LINE>
        <COLUMN>10</COLUMN>
        <KEYEVENT>
          <ID>7</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>472</LINE>
        <COLUMN>72</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>472</LINE>
        <COLUMN>18</COLUMN>
        <KEYEVENT>
          <ID>8</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume '&lt;COMPLEX_EXPR&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>473</LINE>
        <COLUMN>10</COLUMN>
        <KEYEVENT>
          <ID>9</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>472</LINE>
        <COLUMN>72</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>472</LINE>
        <COLUMN>18</COLUMN>
        <KEYEVENT>
          <ID>10</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume '&lt;COMPLEX_EXPR&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>479</LINE>
        <COLUMN>8</COLUMN>
        <KEYEVENT>
          <ID>11</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume '&lt;COMPLEX_EXPR&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>481</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>484</LINE>
        <COLUMN>15</COLUMN>
        <KEYEVENT>
          <ID>12</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>495</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>13</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>509</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>510</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>513</LINE>
        <COLUMN>5</COLUMN>
        <KEYEVENT>
          <ID>14</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>561</LINE>
        <COLUMN>8</COLUMN>
        <KEYEVENT>
          <ID>15</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>568</LINE>
        <COLUMN>8</COLUMN>
        <KEYEVENT>
          <ID>16</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>579</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>17</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>583</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>18</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>597</LINE>
        <COLUMN>49</COLUMN>
        <KEYEVENT>
          <ID>19</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>625</LINE>
        <COLUMN>10</COLUMN>
        <KEYEVENT>
          <ID>20</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>639</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>21</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>652</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>22</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>667</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>23</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>678</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>24</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>711</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>25</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>715</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>26</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>729</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>27</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>743</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>28</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>747</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>29</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>773</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>30</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>808</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>31</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume '&lt;COMPLEX_EXPR&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>810</LINE>
        <COLUMN>24</COLUMN>
        <KEYEVENT>
          <ID>32</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume '&lt;COMPLEX_EXPR&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>811</LINE>
        <COLUMN>8</COLUMN>
        <KEYEVENT>
          <ID>33</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'libraw_internal_data' is an Output from 'LibRaw_abstract_datastream::seek' (declared at d:\coding\python\mfsig\flock_counter_cpp_qt_cuda\libraw-0.21.2\libraw\libraw_datastream.h:91)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>812</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>813</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>814</LINE>
        <COLUMN>24</COLUMN>
        <KEYEVENT>
          <ID>34</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>819</LINE>
        <COLUMN>36</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>820</LINE>
        <COLUMN>11</COLUMN>
        <KEYEVENT>
          <ID>35</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>826</LINE>
        <COLUMN>34</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>827</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>827</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>828</LINE>
        <COLUMN>41</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>827</LINE>
        <COLUMN>34</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>827</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>830</LINE>
        <COLUMN>34</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>831</LINE>
        <COLUMN>34</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>837</LINE>
        <COLUMN>55</COLUMN>
        <KEYEVENT>
          <ID>36</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>846</LINE>
        <COLUMN>17</COLUMN>
        <KEYEVENT>
          <ID>37</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>853</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>460</LINE>
        <COLUMN>23</COLUMN>
        <KEYEVENT>
          <ID>38</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Continue this loop, (assume '&lt;COMPLEX_EXPR&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>462</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>463</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>464</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>465</LINE>
        <COLUMN>4</COLUMN>
        <KEYEVENT>
          <ID>39</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'libraw_internal_data' is an Output from 'LibRaw_abstract_datastream::seek' (declared at d:\coding\python\mfsig\flock_counter_cpp_qt_cuda\libraw-0.21.2\libraw\libraw_datastream.h:91)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>466</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>467</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>468</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>469</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>470</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>472</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>472</LINE>
        <COLUMN>18</COLUMN>
        <KEYEVENT>
          <ID>40</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Continue this loop, (assume '&lt;COMPLEX_EXPR&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>479</LINE>
        <COLUMN>8</COLUMN>
        <KEYEVENT>
          <ID>41</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume '&lt;COMPLEX_EXPR&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>481</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>484</LINE>
        <COLUMN>15</COLUMN>
        <KEYEVENT>
          <ID>42</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>495</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>43</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>509</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>510</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>513</LINE>
        <COLUMN>5</COLUMN>
        <KEYEVENT>
          <ID>44</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>561</LINE>
        <COLUMN>8</COLUMN>
        <KEYEVENT>
          <ID>45</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>568</LINE>
        <COLUMN>8</COLUMN>
        <KEYEVENT>
          <ID>46</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>579</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>47</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>583</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>48</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>597</LINE>
        <COLUMN>49</COLUMN>
        <KEYEVENT>
          <ID>49</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>625</LINE>
        <COLUMN>10</COLUMN>
        <KEYEVENT>
          <ID>50</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>639</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>51</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>652</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>52</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>667</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>53</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>678</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>54</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>711</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>55</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>715</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>56</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>729</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>57</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>743</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>58</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>747</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>59</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>773</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>60</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>808</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>61</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume '&lt;COMPLEX_EXPR&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>810</LINE>
        <COLUMN>24</COLUMN>
        <KEYEVENT>
          <ID>62</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume '&lt;COMPLEX_EXPR&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>811</LINE>
        <COLUMN>8</COLUMN>
        <KEYEVENT>
          <ID>63</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'libraw_internal_data' is an Output from 'LibRaw_abstract_datastream::seek' (declared at d:\coding\python\mfsig\flock_counter_cpp_qt_cuda\libraw-0.21.2\libraw\libraw_datastream.h:91)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>812</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>813</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>814</LINE>
        <COLUMN>24</COLUMN>
        <KEYEVENT>
          <ID>64</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>819</LINE>
        <COLUMN>36</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>820</LINE>
        <COLUMN>11</COLUMN>
        <KEYEVENT>
          <ID>65</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;COMPLEX_EXPR&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>cr3_parser.cpp</FILENAME>
        <LINE>820</LINE>
        <COLUMN>11</COLUMN>
        <KEYEVENT>
          <ID>66</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>Invalid read from '&lt;COMPLEX_EXPR&gt;[-1]', (readable range is 0 to 15)</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>176</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'CrxImage::medianBits' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>CrxImage::{ctor}</FUNCTION>
    <DECORATED>??0CrxImage@@QEAA@XZ</DECORATED>
    <FUNCLINE>176</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>CrxImage::medianBits</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>1216</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxIdwt53FilterDecode</FUNCTION>
    <DECORATED>?crxIdwt53FilterDecode@@YAHPEAUCrxPlaneComp@@HPEAUCrxQStep@@@Z</DECORATED>
    <FUNCLINE>1211</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>1664</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxConvertPlaneLine</FUNCTION>
    <DECORATED>?crxConvertPlaneLine@@YAXPEAUCrxImage@@HHHPEAHH@Z</DECORATED>
    <FUNCLINE>1659</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>1664</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxConvertPlaneLine</FUNCTION>
    <DECORATED>?crxConvertPlaneLine@@YAXPEAUCrxImage@@HHHPEAHH@Z</DECORATED>
    <FUNCLINE>1659</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>1664</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxConvertPlaneLine</FUNCTION>
    <DECORATED>?crxConvertPlaneLine@@YAXPEAUCrxImage@@HHHPEAHH@Z</DECORATED>
    <FUNCLINE>1659</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>1671</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxConvertPlaneLine</FUNCTION>
    <DECORATED>?crxConvertPlaneLine@@YAXPEAUCrxImage@@HHHPEAHH@Z</DECORATED>
    <FUNCLINE>1659</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>1676</LINE>
      <COLUMN>90</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxConvertPlaneLine</FUNCTION>
    <DECORATED>?crxConvertPlaneLine@@YAXPEAUCrxImage@@HHHPEAHH@Z</DECORATED>
    <FUNCLINE>1659</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>1676</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxConvertPlaneLine</FUNCTION>
    <DECORATED>?crxConvertPlaneLine@@YAXPEAUCrxImage@@HHHPEAHH@Z</DECORATED>
    <FUNCLINE>1659</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>1676</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxConvertPlaneLine</FUNCTION>
    <DECORATED>?crxConvertPlaneLine@@YAXPEAUCrxImage@@HHHPEAHH@Z</DECORATED>
    <FUNCLINE>1659</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>1676</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxConvertPlaneLine</FUNCTION>
    <DECORATED>?crxConvertPlaneLine@@YAXPEAUCrxImage@@HHHPEAHH@Z</DECORATED>
    <FUNCLINE>1659</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>1685</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxConvertPlaneLine</FUNCTION>
    <DECORATED>?crxConvertPlaneLine@@YAXPEAUCrxImage@@HHHPEAHH@Z</DECORATED>
    <FUNCLINE>1659</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>1691</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxConvertPlaneLine</FUNCTION>
    <DECORATED>?crxConvertPlaneLine@@YAXPEAUCrxImage@@HHHPEAHH@Z</DECORATED>
    <FUNCLINE>1659</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>1691</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxConvertPlaneLine</FUNCTION>
    <DECORATED>?crxConvertPlaneLine@@YAXPEAUCrxImage@@HHHPEAHH@Z</DECORATED>
    <FUNCLINE>1659</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>1699</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxConvertPlaneLine</FUNCTION>
    <DECORATED>?crxConvertPlaneLine@@YAXPEAUCrxImage@@HHHPEAHH@Z</DECORATED>
    <FUNCLINE>1659</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>1900</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::crxDecodePlane</FUNCTION>
    <DECORATED>?crxDecodePlane@LibRaw@@IEAAHPEAXI@Z</DECORATED>
    <FUNCLINE>1891</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>2010</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxMakeQStep</FUNCTION>
    <DECORATED>?crxMakeQStep@@YAHPEAUCrxImage@@PEAUCrxTile@@PEAHI@Z</DECORATED>
    <FUNCLINE>1993</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>2042</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26819</DEFECTCODE>
    <DESCRIPTION>Unannotated fallthrough between switch labels (es.78).</DESCRIPTION>
    <FUNCTION>crxMakeQStep</FUNCTION>
    <DECORATED>?crxMakeQStep@@YAHPEAUCrxImage@@PEAUCrxTile@@PEAHI@Z</DECORATED>
    <FUNCLINE>1993</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>2062</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26819</DEFECTCODE>
    <DESCRIPTION>Unannotated fallthrough between switch labels (es.78).</DESCRIPTION>
    <FUNCTION>crxMakeQStep</FUNCTION>
    <DECORATED>?crxMakeQStep@@YAHPEAUCrxImage@@PEAUCrxTile@@PEAHI@Z</DECORATED>
    <FUNCLINE>1993</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>2114</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxProcessSubbands</FUNCTION>
    <DECORATED>?crxProcessSubbands@@YAHPEAUcrx_data_header_t@@PEAUCrxImage@@PEAUCrxTile@@PEAUCrxPlaneComp@@@Z</DECORATED>
    <FUNCLINE>2100</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>2114</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxProcessSubbands</FUNCTION>
    <DECORATED>?crxProcessSubbands@@YAHPEAUcrx_data_header_t@@PEAUCrxImage@@PEAUCrxTile@@PEAUCrxPlaneComp@@@Z</DECORATED>
    <FUNCLINE>2100</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>2115</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxProcessSubbands</FUNCTION>
    <DECORATED>?crxProcessSubbands@@YAHPEAUcrx_data_header_t@@PEAUCrxImage@@PEAUCrxTile@@PEAUCrxPlaneComp@@@Z</DECORATED>
    <FUNCLINE>2100</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>2115</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxProcessSubbands</FUNCTION>
    <DECORATED>?crxProcessSubbands@@YAHPEAUcrx_data_header_t@@PEAUCrxImage@@PEAUCrxTile@@PEAUCrxPlaneComp@@@Z</DECORATED>
    <FUNCLINE>2100</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>2220</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxReadSubbandHeaders</FUNCTION>
    <DECORATED>?crxReadSubbandHeaders@@YAHPEAUcrx_data_header_t@@PEAUCrxImage@@PEAUCrxTile@@PEAUCrxPlaneComp@@PEAPEAEPEAH@Z</DECORATED>
    <FUNCLINE>2183</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>2237</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxReadSubbandHeaders</FUNCTION>
    <DECORATED>?crxReadSubbandHeaders@@YAHPEAUcrx_data_header_t@@PEAUCrxImage@@PEAUCrxTile@@PEAUCrxPlaneComp@@PEAPEAEPEAH@Z</DECORATED>
    <FUNCLINE>2183</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>2246</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxReadSubbandHeaders</FUNCTION>
    <DECORATED>?crxReadSubbandHeaders@@YAHPEAUcrx_data_header_t@@PEAUCrxImage@@PEAUCrxTile@@PEAUCrxPlaneComp@@PEAPEAEPEAH@Z</DECORATED>
    <FUNCLINE>2183</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>2253</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6262</DEFECTCODE>
    <DESCRIPTION>Function uses '65812' bytes of stack.  Consider moving some data to heap.</DESCRIPTION>
    <FUNCTION>crxReadImageHeaders</FUNCTION>
    <DECORATED>?crxReadImageHeaders@@YAHPEAUcrx_data_header_t@@PEAUCrxImage@@PEAEH@Z</DECORATED>
    <FUNCLINE>2253</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>2275</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxReadImageHeaders</FUNCTION>
    <DECORATED>?crxReadImageHeaders@@YAHPEAUcrx_data_header_t@@PEAUCrxImage@@PEAEH@Z</DECORATED>
    <FUNCLINE>2253</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>2282</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxReadImageHeaders</FUNCTION>
    <DECORATED>?crxReadImageHeaders@@YAHPEAUcrx_data_header_t@@PEAUCrxImage@@PEAEH@Z</DECORATED>
    <FUNCLINE>2253</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>2324</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxReadImageHeaders</FUNCTION>
    <DECORATED>?crxReadImageHeaders@@YAHPEAUcrx_data_header_t@@PEAUCrxImage@@PEAEH@Z</DECORATED>
    <FUNCLINE>2253</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>2324</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxReadImageHeaders</FUNCTION>
    <DECORATED>?crxReadImageHeaders@@YAHPEAUcrx_data_header_t@@PEAUCrxImage@@PEAEH@Z</DECORATED>
    <FUNCLINE>2253</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>2392</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxReadImageHeaders</FUNCTION>
    <DECORATED>?crxReadImageHeaders@@YAHPEAUcrx_data_header_t@@PEAUCrxImage@@PEAEH@Z</DECORATED>
    <FUNCLINE>2253</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>2463</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxReadImageHeaders</FUNCTION>
    <DECORATED>?crxReadImageHeaders@@YAHPEAUcrx_data_header_t@@PEAUCrxImage@@PEAEH@Z</DECORATED>
    <FUNCLINE>2253</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>2539</LINE>
      <COLUMN>79</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxSetupImageData</FUNCTION>
    <DECORATED>?crxSetupImageData@@YAHPEAUcrx_data_header_t@@PEAUCrxImage@@PEAF_KIPEAEH@Z</DECORATED>
    <FUNCLINE>2496</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>2539</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxSetupImageData</FUNCTION>
    <DECORATED>?crxSetupImageData@@YAHPEAUcrx_data_header_t@@PEAUCrxImage@@PEAF_KIPEAEH@Z</DECORATED>
    <FUNCLINE>2496</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>2539</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>crxSetupImageData</FUNCTION>
    <DECORATED>?crxSetupImageData@@YAHPEAUcrx_data_header_t@@PEAUCrxImage@@PEAF_KIPEAEH@Z</DECORATED>
    <FUNCLINE>2496</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>crx.cpp</FILENAME>
      <LINE>2659</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>6385</DEFECTCODE>
    <DESCRIPTION>Reading invalid data from 'libraw_internal_data.unpacker_data.crx_header'.</DESCRIPTION>
    <FUNCTION>LibRaw::crxLoadRaw</FUNCTION>
    <DECORATED>?crxLoadRaw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>2652</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>crx.cpp</FILENAME>
        <LINE>2654</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>crx.cpp</FILENAME>
        <LINE>2655</LINE>
        <COLUMN>64</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume '&lt;branch condition&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>crx.cpp</FILENAME>
        <LINE>2657</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>crx.cpp</FILENAME>
        <LINE>2659</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>Invalid read from 'libraw_internal_data.unpacker_data.crx_header[16]', (readable range is 0 to 15)</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\utils\</FILEPATH>
      <FILENAME>curves.cpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::cubic_spline</FUNCTION>
    <DECORATED>?cubic_spline@LibRaw@@IEAAXPEBH0H@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\utils\</FILEPATH>
      <FILENAME>curves.cpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::cubic_spline</FUNCTION>
    <DECORATED>?cubic_spline@LibRaw@@IEAAXPEBH0H@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\utils\</FILEPATH>
      <FILENAME>curves.cpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::cubic_spline</FUNCTION>
    <DECORATED>?cubic_spline@LibRaw@@IEAAXPEBH0H@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\utils\</FILEPATH>
      <FILENAME>curves.cpp</FILENAME>
      <LINE>29</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::cubic_spline</FUNCTION>
    <DECORATED>?cubic_spline@LibRaw@@IEAAXPEBH0H@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\utils\</FILEPATH>
      <FILENAME>curves.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::cubic_spline</FUNCTION>
    <DECORATED>?cubic_spline@LibRaw@@IEAAXPEBH0H@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\utils\</FILEPATH>
      <FILENAME>curves.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::cubic_spline</FUNCTION>
    <DECORATED>?cubic_spline@LibRaw@@IEAAXPEBH0H@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\utils\</FILEPATH>
      <FILENAME>curves.cpp</FILENAME>
      <LINE>32</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::cubic_spline</FUNCTION>
    <DECORATED>?cubic_spline@LibRaw@@IEAAXPEBH0H@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\utils\</FILEPATH>
      <FILENAME>curves.cpp</FILENAME>
      <LINE>83</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::cubic_spline</FUNCTION>
    <DECORATED>?cubic_spline@LibRaw@@IEAAXPEBH0H@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\utils\</FILEPATH>
      <FILENAME>curves.cpp</FILENAME>
      <LINE>83</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::cubic_spline</FUNCTION>
    <DECORATED>?cubic_spline@LibRaw@@IEAAXPEBH0H@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\utils\</FILEPATH>
      <FILENAME>curves.cpp</FILENAME>
      <LINE>83</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::cubic_spline</FUNCTION>
    <DECORATED>?cubic_spline@LibRaw@@IEAAXPEBH0H@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>54</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_ver</FUNCTION>
    <DECORATED>?dcb_ver@LibRaw@@IEAAXPEAY02M@Z</DECORATED>
    <FUNCLINE>45</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>68</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_hor</FUNCTION>
    <DECORATED>?dcb_hor@LibRaw@@IEAAXPEAY02M@Z</DECORATED>
    <FUNCLINE>59</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>83</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_color</FUNCTION>
    <DECORATED>?dcb_color@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>73</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>98</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_color</FUNCTION>
    <DECORATED>?dcb_color@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>73</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>102</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_color</FUNCTION>
    <DECORATED>?dcb_color@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>73</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>120</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_color2</FUNCTION>
    <DECORATED>?dcb_color2@LibRaw@@IEAAXPEAY02M@Z</DECORATED>
    <FUNCLINE>109</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>134</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_color2</FUNCTION>
    <DECORATED>?dcb_color2@LibRaw@@IEAAXPEAY02M@Z</DECORATED>
    <FUNCLINE>109</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>136</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_color2</FUNCTION>
    <DECORATED>?dcb_color2@LibRaw@@IEAAXPEAY02M@Z</DECORATED>
    <FUNCLINE>109</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>154</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_color3</FUNCTION>
    <DECORATED>?dcb_color3@LibRaw@@IEAAXPEAY02M@Z</DECORATED>
    <FUNCLINE>143</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>169</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_color3</FUNCTION>
    <DECORATED>?dcb_color3@LibRaw@@IEAAXPEAY02M@Z</DECORATED>
    <FUNCLINE>143</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>172</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_color3</FUNCTION>
    <DECORATED>?dcb_color3@LibRaw@@IEAAXPEAY02M@Z</DECORATED>
    <FUNCLINE>143</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>272</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_pp</FUNCTION>
    <DECORATED>?dcb_pp@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>262</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>272</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_pp</FUNCTION>
    <DECORATED>?dcb_pp@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>262</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>271</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_pp</FUNCTION>
    <DECORATED>?dcb_pp@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>262</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>271</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_pp</FUNCTION>
    <DECORATED>?dcb_pp@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>262</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>270</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_pp</FUNCTION>
    <DECORATED>?dcb_pp@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>262</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>270</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_pp</FUNCTION>
    <DECORATED>?dcb_pp@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>262</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>270</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_pp</FUNCTION>
    <DECORATED>?dcb_pp@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>262</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>277</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_pp</FUNCTION>
    <DECORATED>?dcb_pp@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>262</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>277</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_pp</FUNCTION>
    <DECORATED>?dcb_pp@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>262</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>276</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_pp</FUNCTION>
    <DECORATED>?dcb_pp@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>262</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>276</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_pp</FUNCTION>
    <DECORATED>?dcb_pp@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>262</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>275</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_pp</FUNCTION>
    <DECORATED>?dcb_pp@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>262</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>275</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_pp</FUNCTION>
    <DECORATED>?dcb_pp@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>262</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>275</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_pp</FUNCTION>
    <DECORATED>?dcb_pp@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>262</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>282</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_pp</FUNCTION>
    <DECORATED>?dcb_pp@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>262</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>282</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_pp</FUNCTION>
    <DECORATED>?dcb_pp@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>262</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>281</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_pp</FUNCTION>
    <DECORATED>?dcb_pp@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>262</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>281</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_pp</FUNCTION>
    <DECORATED>?dcb_pp@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>262</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>280</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_pp</FUNCTION>
    <DECORATED>?dcb_pp@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>262</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>280</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_pp</FUNCTION>
    <DECORATED>?dcb_pp@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>262</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>280</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_pp</FUNCTION>
    <DECORATED>?dcb_pp@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>262</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>301</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_nyquist</FUNCTION>
    <DECORATED>?dcb_nyquist@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>292</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>318</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_color_full</FUNCTION>
    <DECORATED>?dcb_color_full@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>313</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>459</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_map</FUNCTION>
    <DECORATED>?dcb_map@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>449</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>458</LINE>
      <COLUMN>68</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_map</FUNCTION>
    <DECORATED>?dcb_map@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>449</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>458</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_map</FUNCTION>
    <DECORATED>?dcb_map@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>449</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>491</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_correction</FUNCTION>
    <DECORATED>?dcb_correction@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>475</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>491</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_correction</FUNCTION>
    <DECORATED>?dcb_correction@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>475</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>492</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_correction</FUNCTION>
    <DECORATED>?dcb_correction@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>475</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>514</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_correction2</FUNCTION>
    <DECORATED>?dcb_correction2@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>499</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>571</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_refinement</FUNCTION>
    <DECORATED>?dcb_refinement@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>525</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>571</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_refinement</FUNCTION>
    <DECORATED>?dcb_refinement@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>525</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>571</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_refinement</FUNCTION>
    <DECORATED>?dcb_refinement@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>525</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>571</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_refinement</FUNCTION>
    <DECORATED>?dcb_refinement@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>525</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>571</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_refinement</FUNCTION>
    <DECORATED>?dcb_refinement@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>525</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>600</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_refinement</FUNCTION>
    <DECORATED>?dcb_refinement@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>525</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>600</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_refinement</FUNCTION>
    <DECORATED>?dcb_refinement@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>525</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>600</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_refinement</FUNCTION>
    <DECORATED>?dcb_refinement@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>525</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>600</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_refinement</FUNCTION>
    <DECORATED>?dcb_refinement@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>525</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>600</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_refinement</FUNCTION>
    <DECORATED>?dcb_refinement@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>525</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>602</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb_refinement</FUNCTION>
    <DECORATED>?dcb_refinement@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>525</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>639</LINE>
      <COLUMN>54</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::rgb_to_lch</FUNCTION>
    <DECORATED>?rgb_to_lch@LibRaw@@IEAAXPEAY02N@Z</DECORATED>
    <FUNCLINE>633</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>639</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::rgb_to_lch</FUNCTION>
    <DECORATED>?rgb_to_lch@LibRaw@@IEAAXPEAY02N@Z</DECORATED>
    <FUNCLINE>633</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>755</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::fbdd_green</FUNCTION>
    <DECORATED>?fbdd_green@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>735</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>760</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::fbdd_green</FUNCTION>
    <DECORATED>?fbdd_green@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>735</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>765</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::fbdd_green</FUNCTION>
    <DECORATED>?fbdd_green@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>735</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>770</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::fbdd_green</FUNCTION>
    <DECORATED>?fbdd_green@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>735</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>809</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::fbdd</FUNCTION>
    <DECORATED>?fbdd@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>803</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>844</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb</FUNCTION>
    <DECORATED>?dcb@LibRaw@@IEAAXHH@Z</DECORATED>
    <FUNCLINE>838</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dcb_demosaic.cpp</FILENAME>
      <LINE>847</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::dcb</FUNCTION>
    <DECORATED>?dcb@LibRaw@@IEAAXHH@Z</DECORATED>
    <FUNCLINE>838</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_dcraw.cpp</FILENAME>
      <LINE>99</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::make_decoder_ref</FUNCTION>
    <DECORATED>?make_decoder_ref@LibRaw@@IEAAPEAGPEAPEBE@Z</DECORATED>
    <FUNCLINE>90</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_dcraw.cpp</FILENAME>
      <LINE>185</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>6262</DEFECTCODE>
    <DESCRIPTION>Function uses '16400' bytes of stack.  Consider moving some data to heap.</DESCRIPTION>
    <FUNCTION>LibRaw::canon_has_lowbits</FUNCTION>
    <DECORATED>?canon_has_lowbits@LibRaw@@IEAAHXZ</DECORATED>
    <FUNCLINE>185</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_dcraw.cpp</FILENAME>
      <LINE>213</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::canon_load_raw</FUNCTION>
    <DECORATED>?canon_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>202</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_dcraw.cpp</FILENAME>
      <LINE>221</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::canon_load_raw</FUNCTION>
    <DECORATED>?canon_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>202</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_dcraw.cpp</FILENAME>
      <LINE>256</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::canon_load_raw</FUNCTION>
    <DECORATED>?canon_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>202</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_dcraw.cpp</FILENAME>
      <LINE>350</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::ljpeg_start</FUNCTION>
    <DECORATED>?ljpeg_start@LibRaw@@IEAAHPEAUjhead@@H@Z</DECORATED>
    <FUNCLINE>280</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_dcraw.cpp</FILENAME>
      <LINE>310</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26819</DEFECTCODE>
    <DESCRIPTION>Unannotated fallthrough between switch labels (es.78).</DESCRIPTION>
    <FUNCTION>LibRaw::ljpeg_start</FUNCTION>
    <DECORATED>?ljpeg_start@LibRaw@@IEAAHPEAUjhead@@H@Z</DECORATED>
    <FUNCLINE>280</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_dcraw.cpp</FILENAME>
      <LINE>399</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::ljpeg_row</FUNCTION>
    <DECORATED>?ljpeg_row@LibRaw@@IEAAPEAGHPEAUjhead@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_dcraw.cpp</FILENAME>
      <LINE>399</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::ljpeg_row</FUNCTION>
    <DECORATED>?ljpeg_row@LibRaw@@IEAAPEAGHPEAUjhead@@@Z</DECORATED>
    <FUNCLINE>378</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_dcraw.cpp</FILENAME>
      <LINE>464</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::ljpeg_row_unrolled</FUNCTION>
    <DECORATED>?ljpeg_row_unrolled@LibRaw@@IEAAPEAGHPEAUjhead@@@Z</DECORATED>
    <FUNCLINE>447</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_dcraw.cpp</FILENAME>
      <LINE>464</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::ljpeg_row_unrolled</FUNCTION>
    <DECORATED>?ljpeg_row_unrolled@LibRaw@@IEAAPEAGHPEAUjhead@@@Z</DECORATED>
    <FUNCLINE>447</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_dcraw.cpp</FILENAME>
      <LINE>697</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>6031</DEFECTCODE>
    <DESCRIPTION>Return value ignored: 'sscanf'.</DESCRIPTION>
    <FUNCTION>LibRaw::canon_sraw_load_raw</FUNCTION>
    <DECORATED>?canon_sraw_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>606</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_dcraw.cpp</FILENAME>
      <LINE>748</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>6011</DEFECTCODE>
    <DESCRIPTION>Dereferencing NULL pointer 'rp'. </DESCRIPTION>
    <FUNCTION>LibRaw::canon_sraw_load_raw</FUNCTION>
    <DECORATED>?canon_sraw_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>606</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>608</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>609</LINE>
        <COLUMN>9</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'rp' is NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>609</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>610</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>610</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>610</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>610</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>610</LINE>
        <COLUMN>32</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>610</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>610</LINE>
        <COLUMN>42</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>610</LINE>
        <COLUMN>52</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>610</LINE>
        <COLUMN>62</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>610</LINE>
        <COLUMN>70</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>611</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>611</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>611</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>612</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>612</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>613</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>615</LINE>
        <COLUMN>5</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '!((imgdata.image))' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>618</LINE>
        <COLUMN>27</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>620</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>622</LINE>
        <COLUMN>17</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'jwide&lt;32||jwide&gt;65535' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>625</LINE>
        <COLUMN>17</COLUMN>
        <KEYEVENT>
          <ID>5</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>633</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>633</LINE>
        <COLUMN>33</COLUMN>
        <KEYEVENT>
          <ID>6</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this loop, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>684</LINE>
        <COLUMN>33</COLUMN>
        <KEYEVENT>
          <ID>7</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'imgdata.rawparams.specials' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>695</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>695</LINE>
        <COLUMN>26</COLUMN>
        <KEYEVENT>
          <ID>8</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this loop, (assume '*cp&amp;&amp;!isdigit(*cp)' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>697</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>698</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>699</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>700</LINE>
        <COLUMN>35</COLUMN>
        <KEYEVENT>
          <ID>9</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>703</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>704</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>705</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>705</LINE>
        <COLUMN>22</COLUMN>
        <KEYEVENT>
          <ID>10</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this loop, (assume 'row&lt;((imgdata.sizes.height))' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>728</LINE>
        <COLUMN>8</COLUMN>
        <KEYEVENT>
          <ID>11</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume '&lt;branch condition&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>729</LINE>
        <COLUMN>16</COLUMN>
        <KEYEVENT>
          <ID>12</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume 'rp&lt;ip[0]')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>731</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>735</LINE>
        <COLUMN>50</COLUMN>
        <KEYEVENT>
          <ID>13</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>746</LINE>
        <COLUMN>24</COLUMN>
        <KEYEVENT>
          <ID>14</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>748</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>749</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>750</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>752</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>752</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>752</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>752</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>752</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>729</LINE>
        <COLUMN>28</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>729</LINE>
        <COLUMN>16</COLUMN>
        <KEYEVENT>
          <ID>15</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Continue this loop, (assume 'rp&lt;ip[0]')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>731</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>735</LINE>
        <COLUMN>50</COLUMN>
        <KEYEVENT>
          <ID>16</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>746</LINE>
        <COLUMN>24</COLUMN>
        <KEYEVENT>
          <ID>17</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>748</LINE>
        <COLUMN>17</COLUMN>
        <KEYEVENT>
          <ID>18</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'rp' is dereferenced, but may still be NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_dcraw.cpp</FILENAME>
      <LINE>642</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::canon_sraw_load_raw</FUNCTION>
    <DECORATED>?canon_sraw_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>606</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_dcraw.cpp</FILENAME>
      <LINE>970</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::nikon_yuv_load_raw</FUNCTION>
    <DECORATED>?nikon_yuv_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>952</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_dcraw.cpp</FILENAME>
      <LINE>970</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::nikon_yuv_load_raw</FUNCTION>
    <DECORATED>?nikon_yuv_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>952</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_dcraw.cpp</FILENAME>
      <LINE>1002</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>6201</DEFECTCODE>
    <DESCRIPTION>Index '16' is out of valid index range '0' to '15' for possibly stack allocated buffer 'todo'.</DESCRIPTION>
    <FUNCTION>LibRaw::rollei_load_raw</FUNCTION>
    <DECORATED>?rollei_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>981</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_dcraw.cpp</FILENAME>
      <LINE>1025</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::nokia_load_raw</FUNCTION>
    <DECORATED>?nokia_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1013</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_dcraw.cpp</FILENAME>
      <LINE>1025</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::nokia_load_raw</FUNCTION>
    <DECORATED>?nokia_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1013</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_dcraw.cpp</FILENAME>
      <LINE>1031</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::nokia_load_raw</FUNCTION>
    <DECORATED>?nokia_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1013</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_dcraw.cpp</FILENAME>
      <LINE>1047</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::nokia_load_raw</FUNCTION>
    <DECORATED>?nokia_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1013</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_dcraw.cpp</FILENAME>
      <LINE>1048</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::nokia_load_raw</FUNCTION>
    <DECORATED>?nokia_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1013</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_dcraw.cpp</FILENAME>
      <LINE>1141</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::panasonic_load_raw</FUNCTION>
    <DECORATED>?panasonic_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1127</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_dcraw.cpp</FILENAME>
      <LINE>1414</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::sony_load_raw</FUNCTION>
    <DECORATED>?sony_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1407</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_dcraw.cpp</FILENAME>
      <LINE>1428</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::sony_load_raw</FUNCTION>
    <DECORATED>?sony_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1407</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_dcraw.cpp</FILENAME>
      <LINE>1567</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>6001</DEFECTCODE>
    <DESCRIPTION>Using uninitialized memory 'pix'.</DESCRIPTION>
    <FUNCTION>LibRaw::sony_arw2_load_raw</FUNCTION>
    <DECORATED>?sony_arw2_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1467</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>3</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1469</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1469</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1470</LINE>
        <COLUMN>9</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'pix' is not initialized</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1471</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1471</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1471</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1471</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1471</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1471</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1471</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1471</LINE>
        <COLUMN>43</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1471</LINE>
        <COLUMN>47</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1471</LINE>
        <COLUMN>52</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1473</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1476</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1476</LINE>
        <COLUMN>22</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume 'row&lt;((imgdata.sizes.height))')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1478</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1479</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1480</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1480</LINE>
        <COLUMN>35</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume '&lt;branch condition&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1482</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1483</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1484</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1485</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1486</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1486</LINE>
        <COLUMN>28</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this loop, (assume 'sh&lt;4&amp;&amp;128&lt;&lt;sh&lt;=max-min' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1490</LINE>
        <COLUMN>12</COLUMN>
        <KEYEVENT>
          <ID>5</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1506</LINE>
        <COLUMN>44</COLUMN>
        <KEYEVENT>
          <ID>6</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'imgdata.rawparams.specials' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1516</LINE>
        <COLUMN>44</COLUMN>
        <KEYEVENT>
          <ID>7</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'imgdata.rawparams.specials' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1532</LINE>
        <COLUMN>44</COLUMN>
        <KEYEVENT>
          <ID>8</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'imgdata.rawparams.specials' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1548</LINE>
        <COLUMN>39</COLUMN>
        <KEYEVENT>
          <ID>9</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'imgdata.rawparams.specials' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1566</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1566</LINE>
        <COLUMN>24</COLUMN>
        <KEYEVENT>
          <ID>10</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume 'i&lt;16')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1567</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1567</LINE>
        <COLUMN>34</COLUMN>
        <KEYEVENT>
          <ID>11</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'pix' is used, but may not have been initialized</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_dcraw.cpp</FILENAME>
      <LINE>1473</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::sony_arw2_load_raw</FUNCTION>
    <DECORATED>?sony_arw2_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1467</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_dcraw.cpp</FILENAME>
      <LINE>1594</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::samsung_load_raw</FUNCTION>
    <DECORATED>?samsung_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1582</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_dcraw.cpp</FILENAME>
      <LINE>1721</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>6001</DEFECTCODE>
    <DESCRIPTION>Using uninitialized memory 'len'.</DESCRIPTION>
    <FUNCTION>LibRaw::samsung3_load_raw</FUNCTION>
    <DECORATED>?samsung3_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1665</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>3</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1667</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1667</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1667</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1667</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1667</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1667</LINE>
        <COLUMN>34</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1667</LINE>
        <COLUMN>39</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1667</LINE>
        <COLUMN>44</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1667</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1667</LINE>
        <COLUMN>56</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1667</LINE>
        <COLUMN>59</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1668</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1668</LINE>
        <COLUMN>21</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'len' is not initialized</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1668</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1669</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1670</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1671</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1672</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1673</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1673</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume '&lt;branch condition&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1675</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1676</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1677</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1678</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1679</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1680</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1680</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1680</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1680</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1680</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1681</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1682</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1683</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1683</LINE>
        <COLUMN>27</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume '&lt;branch condition&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1685</LINE>
        <COLUMN>19</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '~opt&amp;4&amp;&amp;!((tab&amp;63))' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1690</LINE>
        <COLUMN>14</COLUMN>
        <KEYEVENT>
          <ID>5</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'opt' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1692</LINE>
        <COLUMN>15</COLUMN>
        <KEYEVENT>
          <ID>6</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '!this-&gt;ph1_bithuff(1, 0)' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1694</LINE>
        <COLUMN>18</COLUMN>
        <KEYEVENT>
          <ID>7</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1707</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1709</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1710</LINE>
        <COLUMN>16</COLUMN>
        <KEYEVENT>
          <ID>8</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'col&lt;0' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1712</LINE>
        <COLUMN>18</COLUMN>
        <KEYEVENT>
          <ID>9</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'pmode&lt;0' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1714</LINE>
        <COLUMN>35</COLUMN>
        <KEYEVENT>
          <ID>10</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1716</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1721</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>decoders_dcraw.cpp</FILENAME>
        <LINE>1721</LINE>
        <COLUMN>15</COLUMN>
        <KEYEVENT>
          <ID>11</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'len' is used, but may not have been initialized</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_libraw.cpp</FILENAME>
      <LINE>57</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::pentax_4shot_load_raw</FUNCTION>
    <DECORATED>?pentax_4shot_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>55</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_libraw.cpp</FILENAME>
      <LINE>311</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::nikon_load_striped_packed_raw</FUNCTION>
    <DECORATED>?nikon_load_striped_packed_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>267</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_libraw.cpp</FILENAME>
      <LINE>311</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::nikon_load_striped_packed_raw</FUNCTION>
    <DECORATED>?nikon_load_striped_packed_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>267</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_libraw.cpp</FILENAME>
      <LINE>324</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'pana_cs6_page_decoder::pixelbuffer' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>pana_cs6_page_decoder::{ctor}</FUNCTION>
    <DECORATED>??0pana_cs6_page_decoder@@QEAA@PEAEI@Z</DECORATED>
    <FUNCLINE>324</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>pana_cs6_page_decoder::pixelbuffer</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_libraw.cpp</FILENAME>
      <LINE>404</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::panasonicC6_load_raw</FUNCTION>
    <DECORATED>?panasonicC6_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>390</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_libraw.cpp</FILENAME>
      <LINE>481</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::panasonicC7_load_raw</FUNCTION>
    <DECORATED>?panasonicC7_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>476</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_libraw.cpp</FILENAME>
      <LINE>543</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::unpacked_load_raw_fuji_f700s20</FUNCTION>
    <DECORATED>?unpacked_load_raw_fuji_f700s20@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>534</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_libraw.cpp</FILENAME>
      <LINE>557</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::nikon_load_sraw</FUNCTION>
    <DECORATED>?nikon_load_sraw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>553</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_libraw.cpp</FILENAME>
      <LINE>642</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::nikon_load_sraw</FUNCTION>
    <DECORATED>?nikon_load_sraw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>553</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_libraw.cpp</FILENAME>
      <LINE>647</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::nikon_load_sraw</FUNCTION>
    <DECORATED>?nikon_load_sraw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>553</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_libraw.cpp</FILENAME>
      <LINE>707</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>iiq_bitstream_t::peek</FUNCTION>
    <DECORATED>?peek@iiq_bitstream_t@@QEAA_KE@Z</DECORATED>
    <FUNCLINE>701</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_libraw.cpp</FILENAME>
      <LINE>707</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>iiq_bitstream_t::peek</FUNCTION>
    <DECORATED>?peek@iiq_bitstream_t@@QEAA_KE@Z</DECORATED>
    <FUNCLINE>701</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_libraw.cpp</FILENAME>
      <LINE>837</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::phase_one_load_raw_s</FUNCTION>
    <DECORATED>?phase_one_load_raw_s@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>833</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_libraw.cpp</FILENAME>
      <LINE>847</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::phase_one_load_raw_s</FUNCTION>
    <DECORATED>?phase_one_load_raw_s@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>833</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_libraw.cpp</FILENAME>
      <LINE>847</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::phase_one_load_raw_s</FUNCTION>
    <DECORATED>?phase_one_load_raw_s@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>833</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_libraw.cpp</FILENAME>
      <LINE>853</LINE>
      <COLUMN>63</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::phase_one_load_raw_s</FUNCTION>
    <DECORATED>?phase_one_load_raw_s@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>833</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_libraw.cpp</FILENAME>
      <LINE>855</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::phase_one_load_raw_s</FUNCTION>
    <DECORATED>?phase_one_load_raw_s@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>833</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_libraw_dcrdefs.cpp</FILENAME>
      <LINE>30</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::packed_tiled_dng_load_raw</FUNCTION>
    <DECORATED>?packed_tiled_dng_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_libraw_dcrdefs.cpp</FILENAME>
      <LINE>30</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::packed_tiled_dng_load_raw</FUNCTION>
    <DECORATED>?packed_tiled_dng_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_libraw_dcrdefs.cpp</FILENAME>
      <LINE>148</LINE>
      <COLUMN>63</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::nikon_coolscan_load_raw</FUNCTION>
    <DECORATED>?nikon_coolscan_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>121</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_libraw_dcrdefs.cpp</FILENAME>
      <LINE>149</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::nikon_coolscan_load_raw</FUNCTION>
    <DECORATED>?nikon_coolscan_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>121</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_libraw_dcrdefs.cpp</FILENAME>
      <LINE>214</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::broadcom_load_raw</FUNCTION>
    <DECORATED>?broadcom_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>209</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>decoders_libraw_dcrdefs.cpp</FILENAME>
      <LINE>220</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::broadcom_load_raw</FUNCTION>
    <DECORATED>?broadcom_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>209</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dht_demosaic.cpp</FILENAME>
      <LINE>220</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>DHT::{ctor}</FUNCTION>
    <DECORATED>??0DHT@@QEAA@AEAVLibRaw@@@Z</DECORATED>
    <FUNCLINE>216</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>dht_demosaic.cpp</FILENAME>
      <LINE>222</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>DHT::{ctor}</FUNCTION>
    <DECORATED>??0DHT@@QEAA@AEAVLibRaw@@@Z</DECORATED>
    <FUNCLINE>216</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>exif_gps.cpp</FILENAME>
      <LINE>112</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::parse_exif</FUNCTION>
    <DECORATED>?parse_exif@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>62</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>exif_gps.cpp</FILENAME>
      <LINE>113</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::parse_exif</FUNCTION>
    <DECORATED>?parse_exif@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>62</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>exif_gps.cpp</FILENAME>
      <LINE>112</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_exif</FUNCTION>
    <DECORATED>?parse_exif@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>62</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>exif_gps.cpp</FILENAME>
      <LINE>113</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_exif</FUNCTION>
    <DECORATED>?parse_exif@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>62</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>exif_gps.cpp</FILENAME>
      <LINE>99</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_exif</FUNCTION>
    <DECORATED>?parse_exif@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>62</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\write\</FILEPATH>
      <FILENAME>file_write.cpp</FILENAME>
      <LINE>45</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::tiff_set</FUNCTION>
    <DECORATED>?tiff_set@LibRaw@@IEAAXPEAUtiff_hdr@@PEAGGGHH@Z</DECORATED>
    <FUNCLINE>33</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\write\</FILEPATH>
      <FILENAME>file_write.cpp</FILENAME>
      <LINE>155</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::jpeg_thumb_writer</FUNCTION>
    <DECORATED>?jpeg_thumb_writer@LibRaw@@IEAAXPEAU_iobuf@@PEADH@Z</DECORATED>
    <FUNCLINE>141</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\write\</FILEPATH>
      <FILENAME>file_write.cpp</FILENAME>
      <LINE>231</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::write_ppm_tiff</FUNCTION>
    <DECORATED>?write_ppm_tiff@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>157</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\write\</FILEPATH>
      <FILENAME>file_write.cpp</FILENAME>
      <LINE>231</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::write_ppm_tiff</FUNCTION>
    <DECORATED>?write_ppm_tiff@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>157</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\write\</FILEPATH>
      <FILENAME>file_write.cpp</FILENAME>
      <LINE>235</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::write_ppm_tiff</FUNCTION>
    <DECORATED>?write_ppm_tiff@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>157</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\write\</FILEPATH>
      <FILENAME>file_write.cpp</FILENAME>
      <LINE>235</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::write_ppm_tiff</FUNCTION>
    <DECORATED>?write_ppm_tiff@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>157</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>fp_dng.cpp</FILENAME>
      <LINE>237</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>expandFloats</FUNCTION>
    <DECORATED>?expandFloats@@YAMPEAEHH@Z</DECORATED>
    <FUNCLINE>221</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>fp_dng.cpp</FILENAME>
      <LINE>237</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>expandFloats</FUNCTION>
    <DECORATED>?expandFloats@@YAMPEAEHH@Z</DECORATED>
    <FUNCLINE>221</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>fp_dng.cpp</FILENAME>
      <LINE>493</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::convertFloatToInt</FUNCTION>
    <DECORATED>?convertFloatToInt@LibRaw@@QEAAXMMM@Z</DECORATED>
    <FUNCLINE>467</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>fp_dng.cpp</FILENAME>
      <LINE>493</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::convertFloatToInt</FUNCTION>
    <DECORATED>?convertFloatToInt@LibRaw@@QEAAXMMM@Z</DECORATED>
    <FUNCLINE>467</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>fp_dng.cpp</FILENAME>
      <LINE>518</LINE>
      <COLUMN>76</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::convertFloatToInt</FUNCTION>
    <DECORATED>?convertFloatToInt@LibRaw@@QEAAXMMM@Z</DECORATED>
    <FUNCLINE>467</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>fp_dng.cpp</FILENAME>
      <LINE>518</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::convertFloatToInt</FUNCTION>
    <DECORATED>?convertFloatToInt@LibRaw@@QEAAXMMM@Z</DECORATED>
    <FUNCLINE>467</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>fp_dng.cpp</FILENAME>
      <LINE>619</LINE>
      <COLUMN>93</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::uncompressed_fp_dng_load_raw</FUNCTION>
    <DECORATED>?uncompressed_fp_dng_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>587</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>fp_dng.cpp</FILENAME>
      <LINE>619</LINE>
      <COLUMN>74</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::uncompressed_fp_dng_load_raw</FUNCTION>
    <DECORATED>?uncompressed_fp_dng_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>587</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>fp_dng.cpp</FILENAME>
      <LINE>619</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::uncompressed_fp_dng_load_raw</FUNCTION>
    <DECORATED>?uncompressed_fp_dng_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>587</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>258</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>262</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>266</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>270</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>274</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>278</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>282</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>286</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>290</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>294</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>304</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>310</LINE>
      <COLUMN>54</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>321</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>330</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>334</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>193</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>258</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>262</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>266</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>270</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>274</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>278</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>282</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>286</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>290</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>294</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>304</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>310</LINE>
      <COLUMN>54</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>321</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>330</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>334</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>827</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>829</LINE>
      <COLUMN>83</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>830</LINE>
      <COLUMN>103</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>831</LINE>
      <COLUMN>83</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseAdobeRAFMakernote</FUNCTION>
    <DECORATED>?parseAdobeRAFMakernote@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>1146</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_fuji_thumbnail</FUNCTION>
    <DECORATED>?parse_fuji_thumbnail@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>1121</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>1364</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_fuji</FUNCTION>
    <DECORATED>?parse_fuji@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>1160</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>1388</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_fuji</FUNCTION>
    <DECORATED>?parse_fuji@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>1160</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>fuji.cpp</FILENAME>
      <LINE>1418</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_fuji</FUNCTION>
    <DECORATED>?parse_fuji@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>1160</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>fuji_compressed.cpp</FILENAME>
      <LINE>151</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::init_fuji_compr</FUNCTION>
    <DECORATED>?init_fuji_compr@LibRaw@@IEAAXPEAUfuji_compressed_params@@@Z</DECORATED>
    <FUNCLINE>143</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>fuji_compressed.cpp</FILENAME>
      <LINE>151</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::init_fuji_compr</FUNCTION>
    <DECORATED>?init_fuji_compr@LibRaw@@IEAAXPEAUfuji_compressed_params@@@Z</DECORATED>
    <FUNCLINE>143</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>fuji_compressed.cpp</FILENAME>
      <LINE>278</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::init_fuji_block</FUNCTION>
    <DECORATED>?init_fuji_block@LibRaw@@IEAAXPEAUfuji_compressed_block@@PEBUfuji_compressed_params@@_JI@Z</DECORATED>
    <FUNCLINE>275</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>fuji_compressed.cpp</FILENAME>
      <LINE>1021</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::fuji_decode_strip</FUNCTION>
    <DECORATED>?fuji_decode_strip@LibRaw@@IEAAXPEAUfuji_compressed_params@@H_JIPEAE@Z</DECORATED>
    <FUNCLINE>1011</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>fuji_compressed.cpp</FILENAME>
      <LINE>1055</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>6011</DEFECTCODE>
    <DESCRIPTION>Dereferencing NULL pointer 'q_bases'. </DESCRIPTION>
    <FUNCTION>LibRaw::fuji_decode_strip</FUNCTION>
    <DECORATED>?fuji_decode_strip@LibRaw@@IEAAXPEAUfuji_compressed_params@@H_JIPEAE@Z</DECORATED>
    <FUNCLINE>1011</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>fuji_compressed.cpp</FILENAME>
        <LINE>1014</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>fuji_compressed.cpp</FILENAME>
        <LINE>1014</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>fuji_compressed.cpp</FILENAME>
        <LINE>1015</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>fuji_compressed.cpp</FILENAME>
        <LINE>1016</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>fuji_compressed.cpp</FILENAME>
        <LINE>1017</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>fuji_compressed.cpp</FILENAME>
        <LINE>1019</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>fuji_compressed.cpp</FILENAME>
        <LINE>1021</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>fuji_compressed.cpp</FILENAME>
        <LINE>1023</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>fuji_compressed.cpp</FILENAME>
        <LINE>1024</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>fuji_compressed.cpp</FILENAME>
        <LINE>1025</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>fuji_compressed.cpp</FILENAME>
        <LINE>1026</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>fuji_compressed.cpp</FILENAME>
        <LINE>1028</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>fuji_compressed.cpp</FILENAME>
        <LINE>1029</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>fuji_compressed.cpp</FILENAME>
        <LINE>1031</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>fuji_compressed.cpp</FILENAME>
        <LINE>1032</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>fuji_compressed.cpp</FILENAME>
        <LINE>1041</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>fuji_compressed.cpp</FILENAME>
        <LINE>1045</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>fuji_compressed.cpp</FILENAME>
        <LINE>1046</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>fuji_compressed.cpp</FILENAME>
        <LINE>1047</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>fuji_compressed.cpp</FILENAME>
        <LINE>1047</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>fuji_compressed.cpp</FILENAME>
        <LINE>1050</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>fuji_compressed.cpp</FILENAME>
        <LINE>1052</LINE>
        <COLUMN>10</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'q_bases' may be NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>fuji_compressed.cpp</FILENAME>
        <LINE>1053</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume '&lt;branch condition&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>fuji_compressed.cpp</FILENAME>
        <LINE>1055</LINE>
        <COLUMN>24</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'q_bases' is dereferenced, but may still be NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>fuji_compressed.cpp</FILENAME>
      <LINE>1021</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::fuji_decode_strip</FUNCTION>
    <DECORATED>?fuji_decode_strip@LibRaw@@IEAAXPEAUfuji_compressed_params@@H_JIPEAE@Z</DECORATED>
    <FUNCLINE>1011</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>fuji_compressed.cpp</FILENAME>
      <LINE>1029</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::fuji_decode_strip</FUNCTION>
    <DECORATED>?fuji_decode_strip@LibRaw@@IEAAXPEAUfuji_compressed_params@@H_JIPEAE@Z</DECORATED>
    <FUNCLINE>1011</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>fuji_compressed.cpp</FILENAME>
      <LINE>1076</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::fuji_decode_strip</FUNCTION>
    <DECORATED>?fuji_decode_strip@LibRaw@@IEAAXPEAUfuji_compressed_params@@H_JIPEAE@Z</DECORATED>
    <FUNCLINE>1011</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>fuji_compressed.cpp</FILENAME>
      <LINE>1159</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::fuji_decode_loop</FUNCTION>
    <DECORATED>?fuji_decode_loop@LibRaw@@MEAAXPEAUfuji_compressed_params@@HPEA_JPEAIPEAE@Z</DECORATED>
    <FUNCLINE>1148</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>generic.cpp</FILENAME>
      <LINE>75</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::packed_load_raw</FUNCTION>
    <DECORATED>?packed_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>40</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>generic.cpp</FILENAME>
      <LINE>75</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::packed_load_raw</FUNCTION>
    <DECORATED>?packed_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>40</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>498</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>6287</DEFECTCODE>
    <DESCRIPTION>Redundant code.</DESCRIPTION>
    <FUNCTION>LibRaw::identify</FUNCTION>
    <DECORATED>?identify@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>1027</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::identify</FUNCTION>
    <DECORATED>?identify@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>580</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::identify</FUNCTION>
    <DECORATED>?identify@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>523</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::identify</FUNCTION>
    <DECORATED>?identify@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>757</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::identify</FUNCTION>
    <DECORATED>?identify@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>767</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::identify</FUNCTION>
    <DECORATED>?identify@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>960</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::identify</FUNCTION>
    <DECORATED>?identify@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>1027</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::identify</FUNCTION>
    <DECORATED>?identify@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>777</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26819</DEFECTCODE>
    <DESCRIPTION>Unannotated fallthrough between switch labels (es.78).</DESCRIPTION>
    <FUNCTION>LibRaw::identify</FUNCTION>
    <DECORATED>?identify@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>181</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>2202</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::identify_finetune_dcr</FUNCTION>
    <DECORATED>?identify_finetune_dcr@LibRaw@@IEAAXQEADHH@Z</DECORATED>
    <FUNCLINE>1825</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>2212</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::identify_finetune_dcr</FUNCTION>
    <DECORATED>?identify_finetune_dcr@LibRaw@@IEAAXQEADHH@Z</DECORATED>
    <FUNCLINE>1825</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>2250</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::identify_finetune_dcr</FUNCTION>
    <DECORATED>?identify_finetune_dcr@LibRaw@@IEAAXQEADHH@Z</DECORATED>
    <FUNCLINE>1825</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>2251</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::identify_finetune_dcr</FUNCTION>
    <DECORATED>?identify_finetune_dcr@LibRaw@@IEAAXQEADHH@Z</DECORATED>
    <FUNCLINE>1825</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>2258</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::identify_finetune_dcr</FUNCTION>
    <DECORATED>?identify_finetune_dcr@LibRaw@@IEAAXQEADHH@Z</DECORATED>
    <FUNCLINE>1825</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>2263</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::identify_finetune_dcr</FUNCTION>
    <DECORATED>?identify_finetune_dcr@LibRaw@@IEAAXQEADHH@Z</DECORATED>
    <FUNCLINE>1825</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>2269</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::identify_finetune_dcr</FUNCTION>
    <DECORATED>?identify_finetune_dcr@LibRaw@@IEAAXQEADHH@Z</DECORATED>
    <FUNCLINE>1825</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>2275</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::identify_finetune_dcr</FUNCTION>
    <DECORATED>?identify_finetune_dcr@LibRaw@@IEAAXQEADHH@Z</DECORATED>
    <FUNCLINE>1825</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>2279</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::identify_finetune_dcr</FUNCTION>
    <DECORATED>?identify_finetune_dcr@LibRaw@@IEAAXQEADHH@Z</DECORATED>
    <FUNCLINE>1825</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>2280</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::identify_finetune_dcr</FUNCTION>
    <DECORATED>?identify_finetune_dcr@LibRaw@@IEAAXQEADHH@Z</DECORATED>
    <FUNCLINE>1825</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>2465</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>6282</DEFECTCODE>
    <DESCRIPTION>Incorrect operator.</DESCRIPTION>
    <FUNCTION>LibRaw::identify_finetune_dcr</FUNCTION>
    <DECORATED>?identify_finetune_dcr@LibRaw@@IEAAXQEADHH@Z</DECORATED>
    <FUNCLINE>1825</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>2202</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::identify_finetune_dcr</FUNCTION>
    <DECORATED>?identify_finetune_dcr@LibRaw@@IEAAXQEADHH@Z</DECORATED>
    <FUNCLINE>1825</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>2212</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::identify_finetune_dcr</FUNCTION>
    <DECORATED>?identify_finetune_dcr@LibRaw@@IEAAXQEADHH@Z</DECORATED>
    <FUNCLINE>1825</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>2250</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::identify_finetune_dcr</FUNCTION>
    <DECORATED>?identify_finetune_dcr@LibRaw@@IEAAXQEADHH@Z</DECORATED>
    <FUNCLINE>1825</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>2251</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::identify_finetune_dcr</FUNCTION>
    <DECORATED>?identify_finetune_dcr@LibRaw@@IEAAXQEADHH@Z</DECORATED>
    <FUNCLINE>1825</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>2258</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::identify_finetune_dcr</FUNCTION>
    <DECORATED>?identify_finetune_dcr@LibRaw@@IEAAXQEADHH@Z</DECORATED>
    <FUNCLINE>1825</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>2263</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::identify_finetune_dcr</FUNCTION>
    <DECORATED>?identify_finetune_dcr@LibRaw@@IEAAXQEADHH@Z</DECORATED>
    <FUNCLINE>1825</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>2269</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::identify_finetune_dcr</FUNCTION>
    <DECORATED>?identify_finetune_dcr@LibRaw@@IEAAXQEADHH@Z</DECORATED>
    <FUNCLINE>1825</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>2275</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::identify_finetune_dcr</FUNCTION>
    <DECORATED>?identify_finetune_dcr@LibRaw@@IEAAXQEADHH@Z</DECORATED>
    <FUNCLINE>1825</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>2279</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::identify_finetune_dcr</FUNCTION>
    <DECORATED>?identify_finetune_dcr@LibRaw@@IEAAXQEADHH@Z</DECORATED>
    <FUNCLINE>1825</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>2280</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::identify_finetune_dcr</FUNCTION>
    <DECORATED>?identify_finetune_dcr@LibRaw@@IEAAXQEADHH@Z</DECORATED>
    <FUNCLINE>1825</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>2807</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+=' on a 2 byte value and then casting the result to a 4 byte value. Cast the value to the wider type before calling operator '+=' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::identify_finetune_dcr</FUNCTION>
    <DECORATED>?identify_finetune_dcr@LibRaw@@IEAAXQEADHH@Z</DECORATED>
    <FUNCLINE>1825</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify.cpp</FILENAME>
      <LINE>2390</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26819</DEFECTCODE>
    <DESCRIPTION>Unannotated fallthrough between switch labels (es.78).</DESCRIPTION>
    <FUNCTION>LibRaw::identify_finetune_dcr</FUNCTION>
    <DECORATED>?identify_finetune_dcr@LibRaw@@IEAAXQEADHH@Z</DECORATED>
    <FUNCLINE>1825</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify_tools.cpp</FILENAME>
      <LINE>33</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::guess_byte_order</FUNCTION>
    <DECORATED>?guess_byte_order@LibRaw@@IEAAFH@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify_tools.cpp</FILENAME>
      <LINE>60</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::find_green</FUNCTION>
    <DECORATED>?find_green@LibRaw@@IEAAMHHHH@Z</DECORATED>
    <FUNCLINE>42</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify_tools.cpp</FILENAME>
      <LINE>60</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::find_green</FUNCTION>
    <DECORATED>?find_green@LibRaw@@IEAAMHHHH@Z</DECORATED>
    <FUNCLINE>42</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify_tools.cpp</FILENAME>
      <LINE>67</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::find_green</FUNCTION>
    <DECORATED>?find_green@LibRaw@@IEAAMHHHH@Z</DECORATED>
    <FUNCLINE>42</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify_tools.cpp</FILENAME>
      <LINE>68</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::find_green</FUNCTION>
    <DECORATED>?find_green@LibRaw@@IEAAMHHHH@Z</DECORATED>
    <FUNCLINE>42</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify_tools.cpp</FILENAME>
      <LINE>86</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::trimSpaces</FUNCTION>
    <DECORATED>?trimSpaces@LibRaw@@KAXPEAD@Z</DECORATED>
    <FUNCLINE>76</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>identify_tools.cpp</FILENAME>
      <LINE>97</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6295</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop.  Loop executes infinitely.</DESCRIPTION>
    <FUNCTION>LibRaw::remove_trailing_spaces</FUNCTION>
    <DECORATED>?remove_trailing_spaces@LibRaw@@KAXPEAD_K@Z</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\utils\</FILEPATH>
      <FILENAME>init_close_utils.cpp</FILENAME>
      <LINE>29</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'LibRaw::tiff_ifd' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>LibRaw::{ctor}</FUNCTION>
    <DECORATED>??0LibRaw@@QEAA@I@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>LibRaw::tiff_ifd</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>kodak_decoders.cpp</FILENAME>
      <LINE>98</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::kodak_radc_load_raw</FUNCTION>
    <DECORATED>?kodak_radc_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>37</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>kodak_decoders.cpp</FILENAME>
      <LINE>106</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::kodak_radc_load_raw</FUNCTION>
    <DECORATED>?kodak_radc_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>37</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>kodak_decoders.cpp</FILENAME>
      <LINE>137</LINE>
      <COLUMN>63</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::kodak_radc_load_raw</FUNCTION>
    <DECORATED>?kodak_radc_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>37</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>kodak_decoders.cpp</FILENAME>
      <LINE>260</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::kodak_c330_load_raw</FUNCTION>
    <DECORATED>?kodak_c330_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>254</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>kodak_decoders.cpp</FILENAME>
      <LINE>260</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::kodak_c330_load_raw</FUNCTION>
    <DECORATED>?kodak_c330_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>254</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>kodak_decoders.cpp</FILENAME>
      <LINE>268</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::kodak_c330_load_raw</FUNCTION>
    <DECORATED>?kodak_c330_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>254</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>kodak_decoders.cpp</FILENAME>
      <LINE>271</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::kodak_c330_load_raw</FUNCTION>
    <DECORATED>?kodak_c330_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>254</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>kodak_decoders.cpp</FILENAME>
      <LINE>289</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::kodak_c603_load_raw</FUNCTION>
    <DECORATED>?kodak_c603_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>283</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>kodak_decoders.cpp</FILENAME>
      <LINE>298</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::kodak_c603_load_raw</FUNCTION>
    <DECORATED>?kodak_c603_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>283</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>kodak_decoders.cpp</FILENAME>
      <LINE>298</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::kodak_c603_load_raw</FUNCTION>
    <DECORATED>?kodak_c603_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>283</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>kodak_decoders.cpp</FILENAME>
      <LINE>298</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::kodak_c603_load_raw</FUNCTION>
    <DECORATED>?kodak_c603_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>283</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>kodak_decoders.cpp</FILENAME>
      <LINE>299</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::kodak_c603_load_raw</FUNCTION>
    <DECORATED>?kodak_c603_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>283</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>kodak_decoders.cpp</FILENAME>
      <LINE>300</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::kodak_c603_load_raw</FUNCTION>
    <DECORATED>?kodak_c603_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>283</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>kodak_decoders.cpp</FILENAME>
      <LINE>300</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::kodak_c603_load_raw</FUNCTION>
    <DECORATED>?kodak_c603_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>283</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>kodak_decoders.cpp</FILENAME>
      <LINE>322</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::kodak_262_load_raw</FUNCTION>
    <DECORATED>?kodak_262_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>310</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>kodak_decoders.cpp</FILENAME>
      <LINE>322</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::kodak_262_load_raw</FUNCTION>
    <DECORATED>?kodak_262_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>310</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>kodak_decoders.cpp</FILENAME>
      <LINE>323</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::kodak_262_load_raw</FUNCTION>
    <DECORATED>?kodak_262_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>310</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>kodak_decoders.cpp</FILENAME>
      <LINE>395</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::kodak_65000_decode</FUNCTION>
    <DECORATED>?kodak_65000_decode@LibRaw@@IEAAHPEAFH@Z</DECORATED>
    <FUNCLINE>367</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>kodak_decoders.cpp</FILENAME>
      <LINE>395</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::kodak_65000_decode</FUNCTION>
    <DECORATED>?kodak_65000_decode@LibRaw@@IEAAHPEAFH@Z</DECORATED>
    <FUNCLINE>367</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>leica.cpp</FILENAME>
      <LINE>189</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>6054</DEFECTCODE>
    <DESCRIPTION>String 'buf' might not be zero-terminated.</DESCRIPTION>
    <FUNCTION>LibRaw::parseLeicaMakernote</FUNCTION>
    <DECORATED>?parseLeicaMakernote@LibRaw@@IEAAXHHI@Z</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>3</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>leica.cpp</FILENAME>
        <LINE>180</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>leica.cpp</FILENAME>
        <LINE>181</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>leica.cpp</FILENAME>
        <LINE>181</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>leica.cpp</FILENAME>
        <LINE>182</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>leica.cpp</FILENAME>
        <LINE>182</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>leica.cpp</FILENAME>
        <LINE>182</LINE>
        <COLUMN>25</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>leica.cpp</FILENAME>
        <LINE>182</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>leica.cpp</FILENAME>
        <LINE>182</LINE>
        <COLUMN>36</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>leica.cpp</FILENAME>
        <LINE>183</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>leica.cpp</FILENAME>
        <LINE>183</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>leica.cpp</FILENAME>
        <LINE>184</LINE>
        <COLUMN>7</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>This expression may not zero-terminate 'buf'</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>leica.cpp</FILENAME>
        <LINE>185</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>leica.cpp</FILENAME>
        <LINE>186</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>leica.cpp</FILENAME>
        <LINE>188</LINE>
        <COLUMN>2</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'buf' is an Output from 'LibRaw_abstract_datastream::read' (declared at d:\coding\python\mfsig\flock_counter_cpp_qt_cuda\libraw-0.21.2\libraw\libraw_datastream.h:90)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>leica.cpp</FILENAME>
        <LINE>189</LINE>
        <COLUMN>13</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'buf' should be zero-terminated but may not be</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>leica.cpp</FILENAME>
      <LINE>343</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseLeicaMakernote</FUNCTION>
    <DECORATED>?parseLeicaMakernote@LibRaw@@IEAAXHHI@Z</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\</FILEPATH>
      <FILENAME>libraw_datastream.cpp</FILENAME>
      <LINE>431</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw_buffer_datastream::gets</FUNCTION>
    <DECORATED>?gets@LibRaw_buffer_datastream@@UEAAPEADPEADH@Z</DECORATED>
    <FUNCLINE>423</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\</FILEPATH>
      <FILENAME>libraw_datastream.cpp</FILENAME>
      <LINE>441</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw_buffer_datastream::gets</FUNCTION>
    <DECORATED>?gets@LibRaw_buffer_datastream@@UEAAPEADPEADH@Z</DECORATED>
    <FUNCLINE>423</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\</FILEPATH>
      <FILENAME>libraw_datastream.cpp</FILENAME>
      <LINE>506</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'LibRaw_bigfile_datastream::_fsize' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>LibRaw_bigfile_datastream::{ctor}</FUNCTION>
    <DECORATED>??0LibRaw_bigfile_datastream@@QEAA@PEBD@Z</DECORATED>
    <FUNCLINE>506</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>LibRaw_bigfile_datastream::_fsize</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\</FILEPATH>
      <FILENAME>libraw_datastream.cpp</FILENAME>
      <LINE>540</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'LibRaw_bigfile_datastream::_fsize' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>LibRaw_bigfile_datastream::{ctor}</FUNCTION>
    <DECORATED>??0LibRaw_bigfile_datastream@@QEAA@PEB_W@Z</DECORATED>
    <FUNCLINE>540</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>LibRaw_bigfile_datastream::_fsize</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\</FILEPATH>
      <FILENAME>libraw_datastream.cpp</FILENAME>
      <LINE>975</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw_bigfile_buffered_datastream::gets</FUNCTION>
    <DECORATED>?gets@LibRaw_bigfile_buffered_datastream@@UEAAPEADPEADH@Z</DECORATED>
    <FUNCLINE>951</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\</FILEPATH>
      <FILENAME>libraw_datastream.cpp</FILENAME>
      <LINE>985</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw_bigfile_buffered_datastream::gets</FUNCTION>
    <DECORATED>?gets@LibRaw_bigfile_buffered_datastream@@UEAAPEADPEADH@Z</DECORATED>
    <FUNCLINE>951</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>load_mfbacks.cpp</FILENAME>
      <LINE>183</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>6001</DEFECTCODE>
    <DESCRIPTION>Using uninitialized memory 'mult'.</DESCRIPTION>
    <FUNCTION>LibRaw::phase_one_flat_field</FUNCTION>
    <DECORATED>?phase_one_flat_field@LibRaw@@IEAAXHH@Z</DECORATED>
    <FUNCLINE>137</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>3</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>139</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>140</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>140</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>140</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>140</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>140</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>140</LINE>
        <COLUMN>32</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>140</LINE>
        <COLUMN>38</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>140</LINE>
        <COLUMN>44</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>140</LINE>
        <COLUMN>49</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>141</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>141</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>141</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'mult' is not initialized</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>143</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>144</LINE>
        <COLUMN>51</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>146</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>147</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>148</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>149</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>149</LINE>
        <COLUMN>16</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume 'y&lt;high')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>151</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>152</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>152</LINE>
        <COLUMN>18</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this loop, (assume 'x&lt;wide' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>153</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>153</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>5</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this loop, (assume 'c&lt;(unsigned int)nc' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>152</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>152</LINE>
        <COLUMN>18</COLUMN>
        <KEYEVENT>
          <ID>6</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume 'x&lt;wide')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>153</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>153</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>7</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this loop, (assume 'c&lt;(unsigned int)nc' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>152</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>152</LINE>
        <COLUMN>18</COLUMN>
        <KEYEVENT>
          <ID>8</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Continue this loop, (assume 'x&lt;wide')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>161</LINE>
        <COLUMN>10</COLUMN>
        <KEYEVENT>
          <ID>9</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume 'y==0')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>149</LINE>
        <COLUMN>25</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>149</LINE>
        <COLUMN>16</COLUMN>
        <KEYEVENT>
          <ID>10</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Continue this loop, (assume 'y&lt;high')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>151</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>152</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>152</LINE>
        <COLUMN>18</COLUMN>
        <KEYEVENT>
          <ID>11</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Exit this loop, ('x&lt;wide' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>161</LINE>
        <COLUMN>10</COLUMN>
        <KEYEVENT>
          <ID>12</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'y==0' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>163</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>164</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>165</LINE>
        <COLUMN>40</COLUMN>
        <KEYEVENT>
          <ID>13</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume '&lt;branch condition&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>168</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>168</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>14</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume 'x&lt;wide')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>170</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>170</LINE>
        <COLUMN>22</COLUMN>
        <KEYEVENT>
          <ID>15</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this loop, (assume 'c&lt;(unsigned int)nc' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>175</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>176</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>177</LINE>
        <COLUMN>43</COLUMN>
        <KEYEVENT>
          <ID>16</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume '&lt;branch condition&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>180</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>181</LINE>
        <COLUMN>14</COLUMN>
        <KEYEVENT>
          <ID>17</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume '!((c&amp;1))')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>183</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>184</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>183</LINE>
        <COLUMN>32</COLUMN>
        <KEYEVENT>
          <ID>18</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'mult' is used, but may not have been initialized</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>load_mfbacks.cpp</FILENAME>
      <LINE>148</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::phase_one_flat_field</FUNCTION>
    <DECORATED>?phase_one_flat_field@LibRaw@@IEAAXHH@Z</DECORATED>
    <FUNCLINE>137</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>load_mfbacks.cpp</FILENAME>
      <LINE>479</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::phase_one_correct</FUNCTION>
    <DECORATED>?phase_one_correct@LibRaw@@QEAAHXZ</DECORATED>
    <FUNCLINE>198</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>load_mfbacks.cpp</FILENAME>
      <LINE>493</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::phase_one_correct</FUNCTION>
    <DECORATED>?phase_one_correct@LibRaw@@QEAAHXZ</DECORATED>
    <FUNCLINE>198</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>load_mfbacks.cpp</FILENAME>
      <LINE>493</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::phase_one_correct</FUNCTION>
    <DECORATED>?phase_one_correct@LibRaw@@QEAAHXZ</DECORATED>
    <FUNCLINE>198</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>load_mfbacks.cpp</FILENAME>
      <LINE>494</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::phase_one_correct</FUNCTION>
    <DECORATED>?phase_one_correct@LibRaw@@QEAAHXZ</DECORATED>
    <FUNCLINE>198</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>load_mfbacks.cpp</FILENAME>
      <LINE>495</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::phase_one_correct</FUNCTION>
    <DECORATED>?phase_one_correct@LibRaw@@QEAAHXZ</DECORATED>
    <FUNCLINE>198</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>load_mfbacks.cpp</FILENAME>
      <LINE>496</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::phase_one_correct</FUNCTION>
    <DECORATED>?phase_one_correct@LibRaw@@QEAAHXZ</DECORATED>
    <FUNCLINE>198</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>load_mfbacks.cpp</FILENAME>
      <LINE>550</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::phase_one_load_raw</FUNCTION>
    <DECORATED>?phase_one_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>538</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>load_mfbacks.cpp</FILENAME>
      <LINE>552</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::phase_one_load_raw</FUNCTION>
    <DECORATED>?phase_one_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>538</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>load_mfbacks.cpp</FILENAME>
      <LINE>668</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>6001</DEFECTCODE>
    <DESCRIPTION>Using uninitialized memory 'len'.</DESCRIPTION>
    <FUNCTION>LibRaw::phase_one_load_raw_c</FUNCTION>
    <DECORATED>?phase_one_load_raw_c@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>610</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>3</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>612</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>613</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>613</LINE>
        <COLUMN>15</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'len' is not initialized</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>613</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>613</LINE>
        <COLUMN>32</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>613</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>613</LINE>
        <COLUMN>42</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>613</LINE>
        <COLUMN>45</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>614</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>615</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>615</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>616</LINE>
        <COLUMN>17</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>619</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>620</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>621</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>622</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>622</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>623</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>622</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>622</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>624</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>625</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>626</LINE>
        <COLUMN>9</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>628</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>629</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>630</LINE>
        <COLUMN>9</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>634</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>5</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>646</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>646</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>647</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>646</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>646</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>647</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>646</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>646</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>650</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>650</LINE>
        <COLUMN>22</COLUMN>
        <KEYEVENT>
          <ID>6</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume '&lt;branch condition&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>652</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>653</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>654</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>655</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>656</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>656</LINE>
        <COLUMN>24</COLUMN>
        <KEYEVENT>
          <ID>7</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume '&lt;branch condition&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>658</LINE>
        <COLUMN>16</COLUMN>
        <KEYEVENT>
          <ID>8</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>660</LINE>
        <COLUMN>27</COLUMN>
        <KEYEVENT>
          <ID>9</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume '((col&amp;7))==0')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>661</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>661</LINE>
        <COLUMN>24</COLUMN>
        <KEYEVENT>
          <ID>10</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume 'i&lt;2')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>663</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>663</LINE>
        <COLUMN>30</COLUMN>
        <KEYEVENT>
          <ID>11</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this loop, (assume 'j&lt;5&amp;&amp;!this-&gt;ph1_bithuff(1, 0)' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>665</LINE>
        <COLUMN>17</COLUMN>
        <KEYEVENT>
          <ID>12</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'j--' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>661</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>661</LINE>
        <COLUMN>24</COLUMN>
        <KEYEVENT>
          <ID>13</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Continue this loop, (assume 'i&lt;2')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>663</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>663</LINE>
        <COLUMN>30</COLUMN>
        <KEYEVENT>
          <ID>14</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this loop, (assume 'j&lt;5&amp;&amp;!this-&gt;ph1_bithuff(1, 0)' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>665</LINE>
        <COLUMN>17</COLUMN>
        <KEYEVENT>
          <ID>15</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'j--' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>661</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>661</LINE>
        <COLUMN>24</COLUMN>
        <KEYEVENT>
          <ID>16</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Exit this loop, ('i&lt;2' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>668</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>668</LINE>
        <COLUMN>17</COLUMN>
        <KEYEVENT>
          <ID>17</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'len' is used, but may not have been initialized</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>load_mfbacks.cpp</FILENAME>
      <LINE>619</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::phase_one_load_raw_c</FUNCTION>
    <DECORATED>?phase_one_load_raw_c@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>610</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>load_mfbacks.cpp</FILENAME>
      <LINE>619</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::phase_one_load_raw_c</FUNCTION>
    <DECORATED>?phase_one_load_raw_c@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>610</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>load_mfbacks.cpp</FILENAME>
      <LINE>637</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::phase_one_load_raw_c</FUNCTION>
    <DECORATED>?phase_one_load_raw_c@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>610</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>load_mfbacks.cpp</FILENAME>
      <LINE>639</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::phase_one_load_raw_c</FUNCTION>
    <DECORATED>?phase_one_load_raw_c@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>610</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>load_mfbacks.cpp</FILENAME>
      <LINE>641</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::phase_one_load_raw_c</FUNCTION>
    <DECORATED>?phase_one_load_raw_c@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>610</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>load_mfbacks.cpp</FILENAME>
      <LINE>643</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::phase_one_load_raw_c</FUNCTION>
    <DECORATED>?phase_one_load_raw_c@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>610</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>load_mfbacks.cpp</FILENAME>
      <LINE>647</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::phase_one_load_raw_c</FUNCTION>
    <DECORATED>?phase_one_load_raw_c@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>610</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>load_mfbacks.cpp</FILENAME>
      <LINE>678</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::phase_one_load_raw_c</FUNCTION>
    <DECORATED>?phase_one_load_raw_c@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>610</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>load_mfbacks.cpp</FILENAME>
      <LINE>758</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>6011</DEFECTCODE>
    <DESCRIPTION>Dereferencing NULL pointer 'back[2]'. </DESCRIPTION>
    <FUNCTION>LibRaw::hasselblad_load_raw</FUNCTION>
    <DECORATED>?hasselblad_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>693</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>695</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>696</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>696</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>696</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>696</LINE>
        <COLUMN>23</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'back[2]' may be NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>697</LINE>
        <COLUMN>3</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>697</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>697</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>697</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>697</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>697</LINE>
        <COLUMN>34</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>698</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>699</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>699</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>699</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>700</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>702</LINE>
        <COLUMN>6</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '!this-&gt;ljpeg_start(&amp;jh, 0)' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>704</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>705</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>708</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>709</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>709</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>709</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>709</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>709</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>710</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>711</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>712</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>712</LINE>
        <COLUMN>22</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume '&lt;branch condition&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>714</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>715</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>715</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>715</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>715</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>715</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>716</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>716</LINE>
        <COLUMN>24</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume '&lt;branch condition&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>718</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>718</LINE>
        <COLUMN>22</COLUMN>
        <KEYEVENT>
          <ID>5</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume '&lt;branch condition&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>720</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>720</LINE>
        <COLUMN>25</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>720</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>720</LINE>
        <COLUMN>25</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>720</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>721</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>723</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>724</LINE>
        <COLUMN>27</COLUMN>
        <KEYEVENT>
          <ID>6</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>726</LINE>
        <COLUMN>28</COLUMN>
        <KEYEVENT>
          <ID>7</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'diff[s+c]==65535' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>721</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>723</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>724</LINE>
        <COLUMN>27</COLUMN>
        <KEYEVENT>
          <ID>8</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>726</LINE>
        <COLUMN>28</COLUMN>
        <KEYEVENT>
          <ID>9</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'diff[s+c]==65535' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>721</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>718</LINE>
        <COLUMN>44</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>718</LINE>
        <COLUMN>22</COLUMN>
        <KEYEVENT>
          <ID>10</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Exit this loop, ('&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>730</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>730</LINE>
        <COLUMN>24</COLUMN>
        <KEYEVENT>
          <ID>11</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume 's&lt;(unsigned int)col+2')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>732</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>733</LINE>
        <COLUMN>14</COLUMN>
        <KEYEVENT>
          <ID>12</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'col' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>735</LINE>
        <COLUMN>18</COLUMN>
        <KEYEVENT>
          <ID>13</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'col&amp;&amp;row&gt;1' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>742</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>743</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>745</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>746</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>747</LINE>
        <COLUMN>26</COLUMN>
        <KEYEVENT>
          <ID>14</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>749</LINE>
        <COLUMN>16</COLUMN>
        <KEYEVENT>
          <ID>15</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'imgdata.image' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>743</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
        <FILENAME>load_mfbacks.cpp</FILENAME>
        <LINE>758</LINE>
        <COLUMN>21</COLUMN>
        <KEYEVENT>
          <ID>16</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'back[2]' is dereferenced, but may still be NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>load_mfbacks.cpp</FILENAME>
      <LINE>709</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::hasselblad_load_raw</FUNCTION>
    <DECORATED>?hasselblad_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>693</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>load_mfbacks.cpp</FILENAME>
      <LINE>796</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::leaf_hdr_load_raw</FUNCTION>
    <DECORATED>?leaf_hdr_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>777</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>load_mfbacks.cpp</FILENAME>
      <LINE>802</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::leaf_hdr_load_raw</FUNCTION>
    <DECORATED>?leaf_hdr_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>777</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>load_mfbacks.cpp</FILENAME>
      <LINE>838</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::unpacked_load_raw_FujiDBP</FUNCTION>
    <DECORATED>?unpacked_load_raw_FujiDBP@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>823</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>load_mfbacks.cpp</FILENAME>
      <LINE>846</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::unpacked_load_raw_FujiDBP</FUNCTION>
    <DECORATED>?unpacked_load_raw_FujiDBP@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>823</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>load_mfbacks.cpp</FILENAME>
      <LINE>861</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::sinar_4shot_load_raw</FUNCTION>
    <DECORATED>?sinar_4shot_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>853</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>load_mfbacks.cpp</FILENAME>
      <LINE>874</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::sinar_4shot_load_raw</FUNCTION>
    <DECORATED>?sinar_4shot_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>853</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>load_mfbacks.cpp</FILENAME>
      <LINE>906</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::imacon_full_load_raw</FUNCTION>
    <DECORATED>?imacon_full_load_raw@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>899</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>makernotes.cpp</FILENAME>
      <LINE>83</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6054</DEFECTCODE>
    <DESCRIPTION>String 'buf' might not be zero-terminated.</DESCRIPTION>
    <FUNCTION>LibRaw::parse_makernote_0xc634</FUNCTION>
    <DECORATED>?parse_makernote_0xc634@LibRaw@@IEAAXHHI@Z</DECORATED>
    <FUNCLINE>60</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>3</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>63</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>66</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>71</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>77</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>77</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>78</LINE>
        <COLUMN>7</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>This expression may not zero-terminate 'buf'</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>79</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>81</LINE>
        <COLUMN>2</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'buf' is an Output from 'LibRaw_abstract_datastream::read' (declared at d:\coding\python\mfsig\flock_counter_cpp_qt_cuda\libraw-0.21.2\libraw\libraw_datastream.h:90)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>83</LINE>
        <COLUMN>6</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'buf' is an Input to 'strcmp' (declared at c:\program files (x86)\windows kits\10\include\10.0.22621.0\ucrt\string.h:100)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>83</LINE>
        <COLUMN>6</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'buf' is required to be zero-terminated by a SAL annotation on 'strcmp'</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>makernotes.cpp</FILENAME>
      <LINE>280</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_makernote_0xc634</FUNCTION>
    <DECORATED>?parse_makernote_0xc634@LibRaw@@IEAAXHHI@Z</DECORATED>
    <FUNCLINE>60</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>makernotes.cpp</FILENAME>
      <LINE>359</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>6054</DEFECTCODE>
    <DESCRIPTION>String 'another_buf' might not be zero-terminated.</DESCRIPTION>
    <FUNCTION>LibRaw::parse_makernote</FUNCTION>
    <DECORATED>?parse_makernote@LibRaw@@IEAAXHH@Z</DECORATED>
    <FUNCLINE>334</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>3</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>337</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>340</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>345</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>351</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>354</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>355</LINE>
        <COLUMN>7</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>This expression may not zero-terminate 'another_buf'</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>357</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>358</LINE>
        <COLUMN>2</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'another_buf' is an Output from 'LibRaw_abstract_datastream::read' (declared at d:\coding\python\mfsig\flock_counter_cpp_qt_cuda\libraw-0.21.2\libraw\libraw_datastream.h:90)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>359</LINE>
        <COLUMN>39</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'another_buf' should be zero-terminated but may not be</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>makernotes.cpp</FILENAME>
      <LINE>368</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>6054</DEFECTCODE>
    <DESCRIPTION>String 'buf' might not be zero-terminated.</DESCRIPTION>
    <FUNCTION>LibRaw::parse_makernote</FUNCTION>
    <DECORATED>?parse_makernote@LibRaw@@IEAAXHH@Z</DECORATED>
    <FUNCLINE>334</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>3</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>337</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>340</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>345</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>351</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>354</LINE>
        <COLUMN>7</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>This expression may not zero-terminate 'buf'</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>355</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>357</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>358</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>359</LINE>
        <COLUMN>39</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>364</LINE>
        <COLUMN>2</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'buf' is an Output from 'LibRaw_abstract_datastream::read' (declared at d:\coding\python\mfsig\flock_counter_cpp_qt_cuda\libraw-0.21.2\libraw\libraw_datastream.h:90)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>makernotes.cpp</FILENAME>
        <LINE>368</LINE>
        <COLUMN>31</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'buf' should be zero-terminated but may not be</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>makernotes.cpp</FILENAME>
      <LINE>707</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_makernote</FUNCTION>
    <DECORATED>?parse_makernote@LibRaw@@IEAAXHH@Z</DECORATED>
    <FUNCLINE>334</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>mediumformat.cpp</FILENAME>
      <LINE>36</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_phase_one</FUNCTION>
    <DECORATED>?parse_phase_one@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>mediumformat.cpp</FILENAME>
      <LINE>52</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_phase_one</FUNCTION>
    <DECORATED>?parse_phase_one@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>mediumformat.cpp</FILENAME>
      <LINE>129</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_phase_one</FUNCTION>
    <DECORATED>?parse_phase_one@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>mediumformat.cpp</FILENAME>
      <LINE>108</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_phase_one</FUNCTION>
    <DECORATED>?parse_phase_one@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>mediumformat.cpp</FILENAME>
      <LINE>104</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_phase_one</FUNCTION>
    <DECORATED>?parse_phase_one@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>mediumformat.cpp</FILENAME>
      <LINE>64</LINE>
      <COLUMN>111</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_phase_one</FUNCTION>
    <DECORATED>?parse_phase_one@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>mediumformat.cpp</FILENAME>
      <LINE>69</LINE>
      <COLUMN>111</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_phase_one</FUNCTION>
    <DECORATED>?parse_phase_one@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>mediumformat.cpp</FILENAME>
      <LINE>289</LINE>
      <COLUMN>68</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_phase_one</FUNCTION>
    <DECORATED>?parse_phase_one@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>mediumformat.cpp</FILENAME>
      <LINE>295</LINE>
      <COLUMN>68</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_phase_one</FUNCTION>
    <DECORATED>?parse_phase_one@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>mediumformat.cpp</FILENAME>
      <LINE>116</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26819</DEFECTCODE>
    <DESCRIPTION>Unannotated fallthrough between switch labels (es.78).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_phase_one</FUNCTION>
    <DECORATED>?parse_phase_one@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>mediumformat.cpp</FILENAME>
      <LINE>118</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26819</DEFECTCODE>
    <DESCRIPTION>Unannotated fallthrough between switch labels (es.78).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_phase_one</FUNCTION>
    <DECORATED>?parse_phase_one@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>mediumformat.cpp</FILENAME>
      <LINE>192</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26819</DEFECTCODE>
    <DESCRIPTION>Unannotated fallthrough between switch labels (es.78).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_phase_one</FUNCTION>
    <DECORATED>?parse_phase_one@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>mediumformat.cpp</FILENAME>
      <LINE>396</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6054</DEFECTCODE>
    <DESCRIPTION>String 'data' might not be zero-terminated.</DESCRIPTION>
    <FUNCTION>LibRaw::parse_mos</FUNCTION>
    <DECORATED>?parse_mos@LibRaw@@IEAAX_J@Z</DECORATED>
    <FUNCLINE>336</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>3</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>mediumformat.cpp</FILENAME>
        <LINE>338</LINE>
        <COLUMN>7</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>This expression may not zero-terminate 'data'</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>mediumformat.cpp</FILENAME>
        <LINE>339</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>mediumformat.cpp</FILENAME>
        <LINE>339</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>mediumformat.cpp</FILENAME>
        <LINE>339</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>mediumformat.cpp</FILENAME>
        <LINE>339</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>mediumformat.cpp</FILENAME>
        <LINE>339</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>mediumformat.cpp</FILENAME>
        <LINE>340</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>mediumformat.cpp</FILENAME>
        <LINE>341</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>mediumformat.cpp</FILENAME>
        <LINE>342</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>mediumformat.cpp</FILENAME>
        <LINE>384</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>mediumformat.cpp</FILENAME>
        <LINE>386</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>mediumformat.cpp</FILENAME>
        <LINE>387</LINE>
        <COLUMN>9</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume '&lt;branch condition&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>mediumformat.cpp</FILENAME>
        <LINE>389</LINE>
        <COLUMN>15</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'this-&gt;get4()!=1347114067' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>mediumformat.cpp</FILENAME>
        <LINE>391</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>mediumformat.cpp</FILENAME>
        <LINE>392</LINE>
        <COLUMN>4</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'data' is an Output from 'LibRaw_abstract_datastream::read' (declared at d:\coding\python\mfsig\flock_counter_cpp_qt_cuda\libraw-0.21.2\libraw\libraw_datastream.h:90)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>mediumformat.cpp</FILENAME>
        <LINE>393</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>mediumformat.cpp</FILENAME>
        <LINE>394</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>mediumformat.cpp</FILENAME>
        <LINE>396</LINE>
        <COLUMN>8</COLUMN>
        <KEYEVENT>
          <ID>5</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'data' is an Input to 'strcmp' (declared at c:\program files (x86)\windows kits\10\include\10.0.22621.0\ucrt\string.h:100)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>mediumformat.cpp</FILENAME>
        <LINE>396</LINE>
        <COLUMN>8</COLUMN>
        <KEYEVENT>
          <ID>6</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'data' is required to be zero-terminated by a SAL annotation on 'strcmp'</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>mem_image.cpp</FILENAME>
      <LINE>149</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::get_mem_image_format</FUNCTION>
    <DECORATED>?get_mem_image_format@LibRaw@@QEBAXPEAH000@Z</DECORATED>
    <FUNCLINE>135</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>mem_image.cpp</FILENAME>
      <LINE>216</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::copy_mem_image</FUNCTION>
    <DECORATED>?copy_mem_image@LibRaw@@QEAAHPEAXHH@Z</DECORATED>
    <FUNCLINE>168</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>misc_demosaic.cpp</FILENAME>
      <LINE>42</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::pre_interpolate</FUNCTION>
    <DECORATED>?pre_interpolate@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>misc_demosaic.cpp</FILENAME>
      <LINE>117</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::lin_interpolate_loop</FUNCTION>
    <DECORATED>?lin_interpolate_loop@LibRaw@@MEAAXPEAHH@Z</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>misc_demosaic.cpp</FILENAME>
      <LINE>117</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::lin_interpolate_loop</FUNCTION>
    <DECORATED>?lin_interpolate_loop@LibRaw@@MEAAXPEAHH@Z</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>misc_demosaic.cpp</FILENAME>
      <LINE>117</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::lin_interpolate_loop</FUNCTION>
    <DECORATED>?lin_interpolate_loop@LibRaw@@MEAAXPEAHH@Z</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>misc_demosaic.cpp</FILENAME>
      <LINE>141</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::lin_interpolate</FUNCTION>
    <DECORATED>?lin_interpolate@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>127</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>misc_demosaic.cpp</FILENAME>
      <LINE>141</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::lin_interpolate</FUNCTION>
    <DECORATED>?lin_interpolate@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>127</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>misc_demosaic.cpp</FILENAME>
      <LINE>141</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::lin_interpolate</FUNCTION>
    <DECORATED>?lin_interpolate@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>127</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>misc_demosaic.cpp</FILENAME>
      <LINE>156</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::lin_interpolate</FUNCTION>
    <DECORATED>?lin_interpolate@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>127</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>misc_demosaic.cpp</FILENAME>
      <LINE>156</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::lin_interpolate</FUNCTION>
    <DECORATED>?lin_interpolate@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>127</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>misc_demosaic.cpp</FILENAME>
      <LINE>156</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::lin_interpolate</FUNCTION>
    <DECORATED>?lin_interpolate@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>127</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>misc_demosaic.cpp</FILENAME>
      <LINE>222</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::vng_interpolate</FUNCTION>
    <DECORATED>?vng_interpolate@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>180</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>misc_demosaic.cpp</FILENAME>
      <LINE>264</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::vng_interpolate</FUNCTION>
    <DECORATED>?vng_interpolate@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>180</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>misc_demosaic.cpp</FILENAME>
      <LINE>266</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::vng_interpolate</FUNCTION>
    <DECORATED>?vng_interpolate@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>180</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>misc_demosaic.cpp</FILENAME>
      <LINE>360</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::ppg_interpolate</FUNCTION>
    <DECORATED>?ppg_interpolate@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>342</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>misc_demosaic.cpp</FILENAME>
      <LINE>387</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::ppg_interpolate</FUNCTION>
    <DECORATED>?ppg_interpolate@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>342</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>misc_demosaic.cpp</FILENAME>
      <LINE>406</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::ppg_interpolate</FUNCTION>
    <DECORATED>?ppg_interpolate@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>342</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>misc_parsers.cpp</FILENAME>
      <LINE>88</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::canon_s2is</FUNCTION>
    <DECORATED>?canon_s2is@LibRaw@@IEAAHXZ</DECORATED>
    <FUNCLINE>82</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>misc_parsers.cpp</FILENAME>
      <LINE>144</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_cine</FUNCTION>
    <DECORATED>?parse_cine@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>129</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>misc_parsers.cpp</FILENAME>
      <LINE>155</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_cine</FUNCTION>
    <DECORATED>?parse_cine@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>129</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>misc_parsers.cpp</FILENAME>
      <LINE>193</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_cine</FUNCTION>
    <DECORATED>?parse_cine@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>129</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>misc_parsers.cpp</FILENAME>
      <LINE>219</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_qt</FUNCTION>
    <DECORATED>?parse_qt@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>198</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>misc_parsers.cpp</FILENAME>
      <LINE>227</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_smal</FUNCTION>
    <DECORATED>?parse_smal@LibRaw@@IEAAXHH@Z</DECORATED>
    <FUNCLINE>223</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>misc_parsers.cpp</FILENAME>
      <LINE>289</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>6054</DEFECTCODE>
    <DESCRIPTION>String 'month' might not be zero-terminated.</DESCRIPTION>
    <FUNCTION>LibRaw::parse_riff</FUNCTION>
    <DECORATED>?parse_riff@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>246</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>3</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>misc_parsers.cpp</FILENAME>
        <LINE>248</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>misc_parsers.cpp</FILENAME>
        <LINE>248</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>misc_parsers.cpp</FILENAME>
        <LINE>248</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>misc_parsers.cpp</FILENAME>
        <LINE>249</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>misc_parsers.cpp</FILENAME>
        <LINE>249</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>misc_parsers.cpp</FILENAME>
        <LINE>249</LINE>
        <COLUMN>25</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>This expression may not zero-terminate 'month'</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>misc_parsers.cpp</FILENAME>
        <LINE>250</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>misc_parsers.cpp</FILENAME>
        <LINE>252</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>misc_parsers.cpp</FILENAME>
        <LINE>253</LINE>
        <COLUMN>15</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'maxdepth&lt;1' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>misc_parsers.cpp</FILENAME>
        <LINE>256</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>misc_parsers.cpp</FILENAME>
        <LINE>257</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>misc_parsers.cpp</FILENAME>
        <LINE>258</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>misc_parsers.cpp</FILENAME>
        <LINE>259</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>misc_parsers.cpp</FILENAME>
        <LINE>260</LINE>
        <COLUMN>30</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>misc_parsers.cpp</FILENAME>
        <LINE>267</LINE>
        <COLUMN>11</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '!memcmp(tag, "nctg", 4)' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>misc_parsers.cpp</FILENAME>
        <LINE>281</LINE>
        <COLUMN>35</COLUMN>
        <KEYEVENT>
          <ID>5</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume '&lt;branch condition&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>misc_parsers.cpp</FILENAME>
        <LINE>283</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>misc_parsers.cpp</FILENAME>
        <LINE>284</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>misc_parsers.cpp</FILENAME>
        <LINE>285</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>misc_parsers.cpp</FILENAME>
        <LINE>287</LINE>
        <COLUMN>49</COLUMN>
        <KEYEVENT>
          <ID>6</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'month' is an Output from 'sscanf' (declared at c:\program files (x86)\windows kits\10\include\10.0.22621.0\ucrt\stdio.h:2240)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>misc_parsers.cpp</FILENAME>
        <LINE>287</LINE>
        <COLUMN>49</COLUMN>
        <KEYEVENT>
          <ID>7</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume '&lt;branch condition&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>misc_parsers.cpp</FILENAME>
        <LINE>289</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>misc_parsers.cpp</FILENAME>
        <LINE>289</LINE>
        <COLUMN>25</COLUMN>
        <KEYEVENT>
          <ID>8</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'month' is an Input to 'stricmp' (declared at c:\program files (x86)\windows kits\10\include\10.0.22621.0\ucrt\string.h:545)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>misc_parsers.cpp</FILENAME>
        <LINE>289</LINE>
        <COLUMN>25</COLUMN>
        <KEYEVENT>
          <ID>9</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'month' is required to be zero-terminated by a SAL annotation on 'stricmp'</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>misc_parsers.cpp</FILENAME>
      <LINE>320</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>6031</DEFECTCODE>
    <DESCRIPTION>Return value ignored: 'sscanf'.</DESCRIPTION>
    <FUNCTION>LibRaw::parse_rollei</FUNCTION>
    <DECORATED>?parse_rollei@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>301</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>misc_parsers.cpp</FILENAME>
      <LINE>322</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>6031</DEFECTCODE>
    <DESCRIPTION>Return value ignored: 'sscanf'.</DESCRIPTION>
    <FUNCTION>LibRaw::parse_rollei</FUNCTION>
    <DECORATED>?parse_rollei@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>301</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>misc_parsers.cpp</FILENAME>
      <LINE>354</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>6031</DEFECTCODE>
    <DESCRIPTION>Return value ignored: 'sscanf'.</DESCRIPTION>
    <FUNCTION>LibRaw::parse_rollei</FUNCTION>
    <DECORATED>?parse_rollei@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>301</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>misc_parsers.cpp</FILENAME>
      <LINE>361</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_rollei</FUNCTION>
    <DECORATED>?parse_rollei@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>301</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>misc_parsers.cpp</FILENAME>
      <LINE>361</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_rollei</FUNCTION>
    <DECORATED>?parse_rollei@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>301</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>misc_parsers.cpp</FILENAME>
      <LINE>466</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_jpeg</FUNCTION>
    <DECORATED>?parse_jpeg@LibRaw@@IEAAHH@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>misc_parsers.cpp</FILENAME>
      <LINE>472</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_jpeg</FUNCTION>
    <DECORATED>?parse_jpeg@LibRaw@@IEAAHH@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>misc_parsers.cpp</FILENAME>
      <LINE>486</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_thumb_note</FUNCTION>
    <DECORATED>?parse_thumb_note@LibRaw@@IEAAXHII@Z</DECORATED>
    <FUNCLINE>477</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>nikon.cpp</FILENAME>
      <LINE>265</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6054</DEFECTCODE>
    <DESCRIPTION>String 'buf' might not be zero-terminated.</DESCRIPTION>
    <FUNCTION>LibRaw::parseNikonMakernote</FUNCTION>
    <DECORATED>?parseNikonMakernote@LibRaw@@IEAAXHHI@Z</DECORATED>
    <FUNCLINE>238</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>3</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>nikon.cpp</FILENAME>
        <LINE>241</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>nikon.cpp</FILENAME>
        <LINE>241</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>nikon.cpp</FILENAME>
        <LINE>241</LINE>
        <COLUMN>32</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>nikon.cpp</FILENAME>
        <LINE>241</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>nikon.cpp</FILENAME>
        <LINE>241</LINE>
        <COLUMN>43</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>nikon.cpp</FILENAME>
        <LINE>241</LINE>
        <COLUMN>48</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>nikon.cpp</FILENAME>
        <LINE>243</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>nikon.cpp</FILENAME>
        <LINE>243</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>nikon.cpp</FILENAME>
        <LINE>244</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>nikon.cpp</FILENAME>
        <LINE>245</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>nikon.cpp</FILENAME>
        <LINE>246</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>nikon.cpp</FILENAME>
        <LINE>247</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>nikon.cpp</FILENAME>
        <LINE>248</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>nikon.cpp</FILENAME>
        <LINE>248</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>nikon.cpp</FILENAME>
        <LINE>248</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>nikon.cpp</FILENAME>
        <LINE>249</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>nikon.cpp</FILENAME>
        <LINE>250</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>nikon.cpp</FILENAME>
        <LINE>252</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>nikon.cpp</FILENAME>
        <LINE>253</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>nikon.cpp</FILENAME>
        <LINE>259</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>nikon.cpp</FILENAME>
        <LINE>259</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>nikon.cpp</FILENAME>
        <LINE>260</LINE>
        <COLUMN>7</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>This expression may not zero-terminate 'buf'</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>nikon.cpp</FILENAME>
        <LINE>261</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>nikon.cpp</FILENAME>
        <LINE>263</LINE>
        <COLUMN>2</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'buf' is an Output from 'LibRaw_abstract_datastream::read' (declared at d:\coding\python\mfsig\flock_counter_cpp_qt_cuda\libraw-0.21.2\libraw\libraw_datastream.h:90)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>nikon.cpp</FILENAME>
        <LINE>265</LINE>
        <COLUMN>6</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'buf' is an Input to 'strcmp' (declared at c:\program files (x86)\windows kits\10\include\10.0.22621.0\ucrt\string.h:100)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>nikon.cpp</FILENAME>
        <LINE>265</LINE>
        <COLUMN>6</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'buf' is required to be zero-terminated by a SAL annotation on 'strcmp'</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>nikon.cpp</FILENAME>
      <LINE>322</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseNikonMakernote</FUNCTION>
    <DECORATED>?parseNikonMakernote@LibRaw@@IEAAXHHI@Z</DECORATED>
    <FUNCLINE>238</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>nikon.cpp</FILENAME>
      <LINE>768</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+=' on a 1 byte value and then casting the result to a 4 byte value. Cast the value to the wider type before calling operator '+=' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseNikonMakernote</FUNCTION>
    <DECORATED>?parseNikonMakernote@LibRaw@@IEAAXHHI@Z</DECORATED>
    <FUNCLINE>238</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>nikon.cpp</FILENAME>
      <LINE>771</LINE>
      <COLUMN>54</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseNikonMakernote</FUNCTION>
    <DECORATED>?parseNikonMakernote@LibRaw@@IEAAXHHI@Z</DECORATED>
    <FUNCLINE>238</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>nikon.cpp</FILENAME>
      <LINE>782</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+=' on a 1 byte value and then casting the result to a 4 byte value. Cast the value to the wider type before calling operator '+=' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseNikonMakernote</FUNCTION>
    <DECORATED>?parseNikonMakernote@LibRaw@@IEAAXHHI@Z</DECORATED>
    <FUNCLINE>238</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>nikon.cpp</FILENAME>
      <LINE>796</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+=' on a 1 byte value and then casting the result to a 4 byte value. Cast the value to the wider type before calling operator '+=' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseNikonMakernote</FUNCTION>
    <DECORATED>?parseNikonMakernote@LibRaw@@IEAAXHHI@Z</DECORATED>
    <FUNCLINE>238</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>normalize_model.cpp</FILENAME>
      <LINE>610</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::GetNormalizedModel</FUNCTION>
    <DECORATED>?GetNormalizedModel@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>normalize_model.cpp</FILENAME>
      <LINE>884</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::GetNormalizedModel</FUNCTION>
    <DECORATED>?GetNormalizedModel@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>normalize_model.cpp</FILENAME>
      <LINE>887</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::GetNormalizedModel</FUNCTION>
    <DECORATED>?GetNormalizedModel@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>normalize_model.cpp</FILENAME>
      <LINE>610</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::GetNormalizedModel</FUNCTION>
    <DECORATED>?GetNormalizedModel@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>normalize_model.cpp</FILENAME>
      <LINE>887</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::GetNormalizedModel</FUNCTION>
    <DECORATED>?GetNormalizedModel@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>normalize_model.cpp</FILENAME>
      <LINE>884</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::GetNormalizedModel</FUNCTION>
    <DECORATED>?GetNormalizedModel@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>22</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::setOlympusBodyFeatures</FUNCTION>
    <DECORATED>?setOlympusBodyFeatures@LibRaw@@IEAAX_K@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>23</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::setOlympusBodyFeatures</FUNCTION>
    <DECORATED>?setOlympusBodyFeatures@LibRaw@@IEAAX_K@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>28</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::setOlympusBodyFeatures</FUNCTION>
    <DECORATED>?setOlympusBodyFeatures@LibRaw@@IEAAX_K@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>29</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::setOlympusBodyFeatures</FUNCTION>
    <DECORATED>?setOlympusBodyFeatures@LibRaw@@IEAAX_K@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>30</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::setOlympusBodyFeatures</FUNCTION>
    <DECORATED>?setOlympusBodyFeatures@LibRaw@@IEAAX_K@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>30</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::setOlympusBodyFeatures</FUNCTION>
    <DECORATED>?setOlympusBodyFeatures@LibRaw@@IEAAX_K@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::setOlympusBodyFeatures</FUNCTION>
    <DECORATED>?setOlympusBodyFeatures@LibRaw@@IEAAX_K@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>32</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::setOlympusBodyFeatures</FUNCTION>
    <DECORATED>?setOlympusBodyFeatures@LibRaw@@IEAAX_K@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>33</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::setOlympusBodyFeatures</FUNCTION>
    <DECORATED>?setOlympusBodyFeatures@LibRaw@@IEAAX_K@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>34</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::setOlympusBodyFeatures</FUNCTION>
    <DECORATED>?setOlympusBodyFeatures@LibRaw@@IEAAX_K@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>22</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::setOlympusBodyFeatures</FUNCTION>
    <DECORATED>?setOlympusBodyFeatures@LibRaw@@IEAAX_K@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>23</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::setOlympusBodyFeatures</FUNCTION>
    <DECORATED>?setOlympusBodyFeatures@LibRaw@@IEAAX_K@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>28</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::setOlympusBodyFeatures</FUNCTION>
    <DECORATED>?setOlympusBodyFeatures@LibRaw@@IEAAX_K@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>29</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::setOlympusBodyFeatures</FUNCTION>
    <DECORATED>?setOlympusBodyFeatures@LibRaw@@IEAAX_K@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>30</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::setOlympusBodyFeatures</FUNCTION>
    <DECORATED>?setOlympusBodyFeatures@LibRaw@@IEAAX_K@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>30</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::setOlympusBodyFeatures</FUNCTION>
    <DECORATED>?setOlympusBodyFeatures@LibRaw@@IEAAX_K@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::setOlympusBodyFeatures</FUNCTION>
    <DECORATED>?setOlympusBodyFeatures@LibRaw@@IEAAX_K@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>32</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::setOlympusBodyFeatures</FUNCTION>
    <DECORATED>?setOlympusBodyFeatures@LibRaw@@IEAAX_K@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>33</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::setOlympusBodyFeatures</FUNCTION>
    <DECORATED>?setOlympusBodyFeatures@LibRaw@@IEAAX_K@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>34</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::setOlympusBodyFeatures</FUNCTION>
    <DECORATED>?setOlympusBodyFeatures@LibRaw@@IEAAX_K@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>68</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::getOlympus_CameraType2</FUNCTION>
    <DECORATED>?getOlympus_CameraType2@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>50</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>69</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::getOlympus_CameraType2</FUNCTION>
    <DECORATED>?getOlympus_CameraType2@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>50</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>68</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::getOlympus_CameraType2</FUNCTION>
    <DECORATED>?getOlympus_CameraType2@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>50</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>69</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::getOlympus_CameraType2</FUNCTION>
    <DECORATED>?getOlympus_CameraType2@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>50</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>82</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::getOlympus_SensorTemperature</FUNCTION>
    <DECORATED>?getOlympus_SensorTemperature@LibRaw@@IEAAXI@Z</DECORATED>
    <FUNCLINE>77</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>83</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::getOlympus_SensorTemperature</FUNCTION>
    <DECORATED>?getOlympus_SensorTemperature@LibRaw@@IEAAXI@Z</DECORATED>
    <FUNCLINE>77</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>82</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::getOlympus_SensorTemperature</FUNCTION>
    <DECORATED>?getOlympus_SensorTemperature@LibRaw@@IEAAXI@Z</DECORATED>
    <FUNCLINE>77</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>83</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::getOlympus_SensorTemperature</FUNCTION>
    <DECORATED>?getOlympus_SensorTemperature@LibRaw@@IEAAXI@Z</DECORATED>
    <FUNCLINE>77</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>152</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::parseOlympus_Equipment</FUNCTION>
    <DECORATED>?parseOlympus_Equipment@LibRaw@@IEAAXIIII@Z</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>152</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseOlympus_Equipment</FUNCTION>
    <DECORATED>?parseOlympus_Equipment@LibRaw@@IEAAXIIII@Z</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>186</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseOlympus_CameraSettings</FUNCTION>
    <DECORATED>?parseOlympus_CameraSettings@LibRaw@@IEAAXHIIII@Z</DECORATED>
    <FUNCLINE>175</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>290</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::parseOlympus_ImageProcessing</FUNCTION>
    <DECORATED>?parseOlympus_ImageProcessing@LibRaw@@IEAAXIIII@Z</DECORATED>
    <FUNCLINE>275</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>290</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::parseOlympus_ImageProcessing</FUNCTION>
    <DECORATED>?parseOlympus_ImageProcessing@LibRaw@@IEAAXIIII@Z</DECORATED>
    <FUNCLINE>275</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>408</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::parseOlympus_ImageProcessing</FUNCTION>
    <DECORATED>?parseOlympus_ImageProcessing@LibRaw@@IEAAXIIII@Z</DECORATED>
    <FUNCLINE>275</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>473</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::parseOlympus_ImageProcessing</FUNCTION>
    <DECORATED>?parseOlympus_ImageProcessing@LibRaw@@IEAAXIIII@Z</DECORATED>
    <FUNCLINE>275</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>474</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::parseOlympus_ImageProcessing</FUNCTION>
    <DECORATED>?parseOlympus_ImageProcessing@LibRaw@@IEAAXIIII@Z</DECORATED>
    <FUNCLINE>275</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>290</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseOlympus_ImageProcessing</FUNCTION>
    <DECORATED>?parseOlympus_ImageProcessing@LibRaw@@IEAAXIIII@Z</DECORATED>
    <FUNCLINE>275</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>290</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseOlympus_ImageProcessing</FUNCTION>
    <DECORATED>?parseOlympus_ImageProcessing@LibRaw@@IEAAXIIII@Z</DECORATED>
    <FUNCLINE>275</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>408</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseOlympus_ImageProcessing</FUNCTION>
    <DECORATED>?parseOlympus_ImageProcessing@LibRaw@@IEAAXIIII@Z</DECORATED>
    <FUNCLINE>275</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>473</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseOlympus_ImageProcessing</FUNCTION>
    <DECORATED>?parseOlympus_ImageProcessing@LibRaw@@IEAAXIIII@Z</DECORATED>
    <FUNCLINE>275</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>474</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseOlympus_ImageProcessing</FUNCTION>
    <DECORATED>?parseOlympus_ImageProcessing@LibRaw@@IEAAXIIII@Z</DECORATED>
    <FUNCLINE>275</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>olympus.cpp</FILENAME>
      <LINE>656</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26819</DEFECTCODE>
    <DESCRIPTION>Unannotated fallthrough between switch labels (es.78).</DESCRIPTION>
    <FUNCTION>LibRaw::parseOlympusMakernotes</FUNCTION>
    <DECORATED>?parseOlympusMakernotes@LibRaw@@IEAAXHIIII@Z</DECORATED>
    <FUNCLINE>550</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\utils\</FILEPATH>
      <FILENAME>open.cpp</FILENAME>
      <LINE>221</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>6287</DEFECTCODE>
    <DESCRIPTION>Redundant code.</DESCRIPTION>
    <FUNCTION>LibRaw::open_buffer</FUNCTION>
    <DECORATED>?open_buffer@LibRaw@@QEAAHPEBX_K@Z</DECORATED>
    <FUNCLINE>215</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\utils\</FILEPATH>
      <FILENAME>open.cpp</FILENAME>
      <LINE>318</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26819</DEFECTCODE>
    <DESCRIPTION>Unannotated fallthrough between switch labels (es.78).</DESCRIPTION>
    <FUNCTION>LibRaw::open_bayer</FUNCTION>
    <DECORATED>?open_bayer@LibRaw@@UEAAHPEBEIGGGGGGEEIII@Z</DECORATED>
    <FUNCLINE>253</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>pentax.cpp</FILENAME>
      <LINE>150</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::PentaxLensInfo</FUNCTION>
    <DECORATED>?PentaxLensInfo@LibRaw@@IEAAX_KI@Z</DECORATED>
    <FUNCLINE>135</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>pentax.cpp</FILENAME>
      <LINE>150</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::PentaxLensInfo</FUNCTION>
    <DECORATED>?PentaxLensInfo@LibRaw@@IEAAX_KI@Z</DECORATED>
    <FUNCLINE>135</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>pentax.cpp</FILENAME>
      <LINE>171</LINE>
      <COLUMN>77</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::PentaxLensInfo</FUNCTION>
    <DECORATED>?PentaxLensInfo@LibRaw@@IEAAX_KI@Z</DECORATED>
    <FUNCLINE>135</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>pentax.cpp</FILENAME>
      <LINE>171</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::PentaxLensInfo</FUNCTION>
    <DECORATED>?PentaxLensInfo@LibRaw@@IEAAX_KI@Z</DECORATED>
    <FUNCLINE>135</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>pentax.cpp</FILENAME>
      <LINE>171</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::PentaxLensInfo</FUNCTION>
    <DECORATED>?PentaxLensInfo@LibRaw@@IEAAX_KI@Z</DECORATED>
    <FUNCLINE>135</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>pentax.cpp</FILENAME>
      <LINE>164</LINE>
      <COLUMN>77</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::PentaxLensInfo</FUNCTION>
    <DECORATED>?PentaxLensInfo@LibRaw@@IEAAX_KI@Z</DECORATED>
    <FUNCLINE>135</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>pentax.cpp</FILENAME>
      <LINE>164</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::PentaxLensInfo</FUNCTION>
    <DECORATED>?PentaxLensInfo@LibRaw@@IEAAX_KI@Z</DECORATED>
    <FUNCLINE>135</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>pentax.cpp</FILENAME>
      <LINE>164</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::PentaxLensInfo</FUNCTION>
    <DECORATED>?PentaxLensInfo@LibRaw@@IEAAX_KI@Z</DECORATED>
    <FUNCLINE>135</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>pentax.cpp</FILENAME>
      <LINE>158</LINE>
      <COLUMN>77</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::PentaxLensInfo</FUNCTION>
    <DECORATED>?PentaxLensInfo@LibRaw@@IEAAX_KI@Z</DECORATED>
    <FUNCLINE>135</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>pentax.cpp</FILENAME>
      <LINE>158</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::PentaxLensInfo</FUNCTION>
    <DECORATED>?PentaxLensInfo@LibRaw@@IEAAX_KI@Z</DECORATED>
    <FUNCLINE>135</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>pentax.cpp</FILENAME>
      <LINE>158</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::PentaxLensInfo</FUNCTION>
    <DECORATED>?PentaxLensInfo@LibRaw@@IEAAX_KI@Z</DECORATED>
    <FUNCLINE>135</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>pentax.cpp</FILENAME>
      <LINE>181</LINE>
      <COLUMN>79</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::PentaxLensInfo</FUNCTION>
    <DECORATED>?PentaxLensInfo@LibRaw@@IEAAX_KI@Z</DECORATED>
    <FUNCLINE>135</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>pentax.cpp</FILENAME>
      <LINE>181</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::PentaxLensInfo</FUNCTION>
    <DECORATED>?PentaxLensInfo@LibRaw@@IEAAX_KI@Z</DECORATED>
    <FUNCLINE>135</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>pentax.cpp</FILENAME>
      <LINE>181</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::PentaxLensInfo</FUNCTION>
    <DECORATED>?PentaxLensInfo@LibRaw@@IEAAX_KI@Z</DECORATED>
    <FUNCLINE>135</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>pentax.cpp</FILENAME>
      <LINE>670</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseRicohMakernotes</FUNCTION>
    <DECORATED>?parseRicohMakernotes@LibRaw@@IEAAXHIIII@Z</DECORATED>
    <FUNCLINE>521</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\utils\</FILEPATH>
      <FILENAME>phaseone_processing.cpp</FILENAME>
      <LINE>24</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::phase_one_allocate_tempbuffer</FUNCTION>
    <DECORATED>?phase_one_allocate_tempbuffer@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_aux.cpp</FILENAME>
      <LINE>57</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::wavelet_denoise</FUNCTION>
    <DECORATED>?wavelet_denoise@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_aux.cpp</FILENAME>
      <LINE>57</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>6011</DEFECTCODE>
    <DESCRIPTION>Dereferencing NULL pointer 'fimg'. </DESCRIPTION>
    <FUNCTION>LibRaw::wavelet_denoise</FUNCTION>
    <DECORATED>?wavelet_denoise@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>36</LINE>
        <COLUMN>9</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'fimg' is NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>36</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>36</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>36</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>36</LINE>
        <COLUMN>41</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>36</LINE>
        <COLUMN>46</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>37</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>37</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>37</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>37</LINE>
        <COLUMN>28</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>37</LINE>
        <COLUMN>35</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>37</LINE>
        <COLUMN>42</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>37</LINE>
        <COLUMN>47</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>37</LINE>
        <COLUMN>52</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>37</LINE>
        <COLUMN>56</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>37</LINE>
        <COLUMN>59</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>37</LINE>
        <COLUMN>62</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>37</LINE>
        <COLUMN>69</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>38</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>39</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>42</LINE>
        <COLUMN>18</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>44</LINE>
        <COLUMN>26</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this loop, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>46</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>47</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>48</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>48</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>48</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>48</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>48</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>49</LINE>
        <COLUMN>32</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>51</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>52</LINE>
        <COLUMN>25</COLUMN>
        <KEYEVENT>
          <ID>5</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>54</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>56</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>56</LINE>
        <COLUMN>18</COLUMN>
        <KEYEVENT>
          <ID>6</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume 'i&lt;size')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>57</LINE>
        <COLUMN>14</COLUMN>
        <KEYEVENT>
          <ID>7</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'fimg' is dereferenced, but may still be NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_aux.cpp</FILENAME>
      <LINE>65</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>6011</DEFECTCODE>
    <DESCRIPTION>Dereferencing NULL pointer 'temp'. See line 57 for an earlier location where this can occur</DESCRIPTION>
    <FUNCTION>LibRaw::wavelet_denoise</FUNCTION>
    <DECORATED>?wavelet_denoise@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>36</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>36</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>36</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>36</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>36</LINE>
        <COLUMN>41</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>36</LINE>
        <COLUMN>46</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>37</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>37</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>37</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>37</LINE>
        <COLUMN>28</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>37</LINE>
        <COLUMN>35</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>37</LINE>
        <COLUMN>42</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>37</LINE>
        <COLUMN>47</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>37</LINE>
        <COLUMN>52</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>37</LINE>
        <COLUMN>56</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>37</LINE>
        <COLUMN>59</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>37</LINE>
        <COLUMN>62</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>37</LINE>
        <COLUMN>69</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>38</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>39</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>42</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>44</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>46</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>47</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>48</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>48</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>48</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>48</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>48</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>49</LINE>
        <COLUMN>32</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>51</LINE>
        <COLUMN>7</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'temp' may be NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>52</LINE>
        <COLUMN>25</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>54</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>56</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>56</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>57</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>56</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>56</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>57</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>56</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>56</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>58</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>58</LINE>
        <COLUMN>30</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume 'lev&lt;5')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>60</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>61</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>61</LINE>
        <COLUMN>24</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume 'row&lt;((imgdata.sizes.iheight))')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>63</LINE>
        <COLUMN>21</COLUMN>
        <KEYEVENT>
          <ID>5</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'temp' is an In/Out argument to 'LibRaw::hat_transform' (declared at d:\coding\python\mfsig\flock_counter_cpp_qt_cuda\libraw-0.21.2\libraw\libraw.h:456)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>64</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>64</LINE>
        <COLUMN>26</COLUMN>
        <KEYEVENT>
          <ID>6</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume 'col&lt;((imgdata.sizes.iwidth))')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>65</LINE>
        <COLUMN>43</COLUMN>
        <KEYEVENT>
          <ID>7</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'temp' is dereferenced, but may still be NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_aux.cpp</FILENAME>
      <LINE>50</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::wavelet_denoise</FUNCTION>
    <DECORATED>?wavelet_denoise@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_aux.cpp</FILENAME>
      <LINE>50</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::wavelet_denoise</FUNCTION>
    <DECORATED>?wavelet_denoise@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_aux.cpp</FILENAME>
      <LINE>50</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::wavelet_denoise</FUNCTION>
    <DECORATED>?wavelet_denoise@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_aux.cpp</FILENAME>
      <LINE>50</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::wavelet_denoise</FUNCTION>
    <DECORATED>?wavelet_denoise@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_aux.cpp</FILENAME>
      <LINE>51</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::wavelet_denoise</FUNCTION>
    <DECORATED>?wavelet_denoise@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_aux.cpp</FILENAME>
      <LINE>57</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::wavelet_denoise</FUNCTION>
    <DECORATED>?wavelet_denoise@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_aux.cpp</FILENAME>
      <LINE>63</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::wavelet_denoise</FUNCTION>
    <DECORATED>?wavelet_denoise@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_aux.cpp</FILENAME>
      <LINE>99</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::wavelet_denoise</FUNCTION>
    <DECORATED>?wavelet_denoise@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_aux.cpp</FILENAME>
      <LINE>115</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::wavelet_denoise</FUNCTION>
    <DECORATED>?wavelet_denoise@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_aux.cpp</FILENAME>
      <LINE>258</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::median_filter</FUNCTION>
    <DECORATED>?median_filter@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>245</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_aux.cpp</FILENAME>
      <LINE>260</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::median_filter</FUNCTION>
    <DECORATED>?median_filter@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>245</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_aux.cpp</FILENAME>
      <LINE>304</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>6385</DEFECTCODE>
    <DESCRIPTION>Reading invalid data from 'trans'.</DESCRIPTION>
    <FUNCTION>LibRaw::blend_highlights</FUNCTION>
    <DECORATED>?blend_highlights@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>276</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>278</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>278</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>278</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>278</LINE>
        <COLUMN>32</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>278</LINE>
        <COLUMN>35</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>278</LINE>
        <COLUMN>38</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>279</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>282</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>285</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>285</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>285</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>285</LINE>
        <COLUMN>38</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>287</LINE>
        <COLUMN>29</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>289</LINE>
        <COLUMN>2</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'callbacks.progress_cb' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>290</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>290</LINE>
        <COLUMN>17</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume '&lt;branch condition&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>290</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>290</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>291</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>291</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume 'row&lt;((imgdata.sizes.height))')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>292</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>292</LINE>
        <COLUMN>22</COLUMN>
        <KEYEVENT>
          <ID>5</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume 'col&lt;((imgdata.sizes.width))')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>294</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>294</LINE>
        <COLUMN>44</COLUMN>
        <KEYEVENT>
          <ID>6</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume '&lt;branch condition&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>295</LINE>
        <COLUMN>12</COLUMN>
        <KEYEVENT>
          <ID>7</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'c==((imgdata.idata.colors))' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>297</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>299</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>300</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>297</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>302</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>302</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>8</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume 'i&lt;2')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>304</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>304</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>304</LINE>
        <COLUMN>40</COLUMN>
        <KEYEVENT>
          <ID>9</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume 'j&lt;((imgdata.idata.colors))')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>304</LINE>
        <COLUMN>65</COLUMN>
        <KEYEVENT>
          <ID>10</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>Invalid read from 'trans[-2]', (readable range is 0 to 1)</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_aux.cpp</FILENAME>
      <LINE>312</LINE>
      <COLUMN>63</COLUMN>
    </SFA>
    <DEFECTCODE>6385</DEFECTCODE>
    <DESCRIPTION>Reading invalid data from 'itrans'.</DESCRIPTION>
    <FUNCTION>LibRaw::blend_highlights</FUNCTION>
    <DECORATED>?blend_highlights@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>276</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>278</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>278</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>278</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>278</LINE>
        <COLUMN>32</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>278</LINE>
        <COLUMN>35</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>278</LINE>
        <COLUMN>38</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>279</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>282</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>285</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>285</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>285</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>285</LINE>
        <COLUMN>38</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>287</LINE>
        <COLUMN>29</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>289</LINE>
        <COLUMN>2</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'callbacks.progress_cb' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>290</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>290</LINE>
        <COLUMN>17</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume '&lt;branch condition&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>290</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>290</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>291</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>291</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume 'row&lt;((imgdata.sizes.height))')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>292</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>292</LINE>
        <COLUMN>22</COLUMN>
        <KEYEVENT>
          <ID>5</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume 'col&lt;((imgdata.sizes.width))')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>294</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>294</LINE>
        <COLUMN>44</COLUMN>
        <KEYEVENT>
          <ID>6</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume '&lt;branch condition&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>295</LINE>
        <COLUMN>12</COLUMN>
        <KEYEVENT>
          <ID>7</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'c==((imgdata.idata.colors))' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>297</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>299</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>300</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>297</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>302</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>302</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>8</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume 'i&lt;2')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>304</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>304</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>304</LINE>
        <COLUMN>40</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>304</LINE>
        <COLUMN>65</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>304</LINE>
        <COLUMN>51</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>304</LINE>
        <COLUMN>40</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>304</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>306</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>306</LINE>
        <COLUMN>34</COLUMN>
        <KEYEVENT>
          <ID>9</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this loop, (assume 'c&lt;((imgdata.idata.colors))' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>302</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>302</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>10</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Continue this loop, (assume 'i&lt;2')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>304</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>304</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>304</LINE>
        <COLUMN>40</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>304</LINE>
        <COLUMN>65</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>304</LINE>
        <COLUMN>51</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>304</LINE>
        <COLUMN>40</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>304</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>306</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>306</LINE>
        <COLUMN>34</COLUMN>
        <KEYEVENT>
          <ID>11</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this loop, (assume 'c&lt;((imgdata.idata.colors))' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>302</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>302</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>12</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Exit this loop, ('i&lt;2' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>309</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>310</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>310</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>13</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this loop, (assume 'c&lt;((imgdata.idata.colors))' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>312</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>312</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>312</LINE>
        <COLUMN>38</COLUMN>
        <KEYEVENT>
          <ID>14</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume 'j&lt;((imgdata.idata.colors))')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_aux.cpp</FILENAME>
        <LINE>312</LINE>
        <COLUMN>63</COLUMN>
        <KEYEVENT>
          <ID>15</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>Invalid read from 'itrans[-2]', (readable range is 0 to 1)</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_aux.cpp</FILENAME>
      <LINE>343</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::recover_highlights</FUNCTION>
    <DECORATED>?recover_highlights@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>320</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
      <LINE>61</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>6385</DEFECTCODE>
    <DESCRIPTION>Reading invalid data from 'name'.</DESCRIPTION>
    <FUNCTION>LibRaw::convert_to_rgb</FUNCTION>
    <DECORATED>?convert_to_rgb@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>23</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>24</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>24</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>25</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>30</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>34</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>38</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>48</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>49</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>51</LINE>
        <COLUMN>2</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'callbacks.progress_cb' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>53</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>54</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>55</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>56</LINE>
        <COLUMN>6</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume '&lt;branch condition&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>58</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>59</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>60</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>60</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>60</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>61</LINE>
        <COLUMN>18</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'name' is an Output from '_snprintf' (declared at c:\program files (x86)\windows kits\10\include\10.0.22621.0\ucrt\stdio.h:1939)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>61</LINE>
        <COLUMN>18</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>Invalid read from 'name[8]', (readable range is 0 to 7)</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
      <LINE>85</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>6385</DEFECTCODE>
    <DESCRIPTION>Reading invalid data from 'out_rgb'.</DESCRIPTION>
    <FUNCTION>LibRaw::convert_to_rgb</FUNCTION>
    <DECORATED>?convert_to_rgb@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>23</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>24</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>24</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>25</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>30</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>34</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>38</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>48</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>49</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>51</LINE>
        <COLUMN>2</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'callbacks.progress_cb' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>53</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>54</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>55</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>56</LINE>
        <COLUMN>6</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume '&lt;branch condition&gt;')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>58</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>59</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>60</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>60</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>60</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>61</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>64</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>65</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>68</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>69</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>70</LINE>
        <COLUMN>21</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>72</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>73</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>73</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>75</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>76</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>77</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>73</LINE>
        <COLUMN>36</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>73</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>75</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>76</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>77</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>73</LINE>
        <COLUMN>36</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>73</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>79</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>80</LINE>
        <COLUMN>28</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>81</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>82</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>83</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>83</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>84</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>83</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>83</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>84</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>83</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>83</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>85</LINE>
        <COLUMN>17</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'out_rgb' is an Output from 'LibRaw::pseudoinverse' (declared at d:\coding\python\mfsig\flock_counter_cpp_qt_cuda\libraw-0.21.2\internal\libraw_internal_funcs.h:322)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
        <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
        <LINE>85</LINE>
        <COLUMN>17</COLUMN>
        <KEYEVENT>
          <ID>5</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>Invalid read from 'out_rgb[8]', (readable range is 0 to 7)</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
      <LINE>62</LINE>
      <COLUMN>112</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::convert_to_rgb</FUNCTION>
    <DECORATED>?convert_to_rgb@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
      <LINE>96</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::convert_to_rgb</FUNCTION>
    <DECORATED>?convert_to_rgb@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
      <LINE>243</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::scale_colors</FUNCTION>
    <DECORATED>?scale_colors@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>111</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
      <LINE>276</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::green_matching</FUNCTION>
    <DECORATED>?green_matching@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>256</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
      <LINE>277</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::green_matching</FUNCTION>
    <DECORATED>?green_matching@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>256</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
      <LINE>291</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::green_matching</FUNCTION>
    <DECORATED>?green_matching@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>256</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
      <LINE>291</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::green_matching</FUNCTION>
    <DECORATED>?green_matching@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>256</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
      <LINE>291</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::green_matching</FUNCTION>
    <DECORATED>?green_matching@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>256</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
      <LINE>292</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::green_matching</FUNCTION>
    <DECORATED>?green_matching@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>256</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
      <LINE>292</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::green_matching</FUNCTION>
    <DECORATED>?green_matching@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>256</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
      <LINE>292</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::green_matching</FUNCTION>
    <DECORATED>?green_matching@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>256</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
      <LINE>295</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::green_matching</FUNCTION>
    <DECORATED>?green_matching@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>256</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
      <LINE>295</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::green_matching</FUNCTION>
    <DECORATED>?green_matching@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>256</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
      <LINE>294</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::green_matching</FUNCTION>
    <DECORATED>?green_matching@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>256</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
      <LINE>294</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::green_matching</FUNCTION>
    <DECORATED>?green_matching@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>256</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
      <LINE>294</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::green_matching</FUNCTION>
    <DECORATED>?green_matching@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>256</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
      <LINE>298</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::green_matching</FUNCTION>
    <DECORATED>?green_matching@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>256</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
      <LINE>298</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::green_matching</FUNCTION>
    <DECORATED>?green_matching@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>256</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
      <LINE>297</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::green_matching</FUNCTION>
    <DECORATED>?green_matching@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>256</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
      <LINE>297</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::green_matching</FUNCTION>
    <DECORATED>?green_matching@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>256</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
      <LINE>297</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::green_matching</FUNCTION>
    <DECORATED>?green_matching@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>256</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
      <LINE>300</LINE>
      <COLUMN>68</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::green_matching</FUNCTION>
    <DECORATED>?green_matching@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>256</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\postprocessing\</FILEPATH>
      <FILENAME>postprocessing_utils_dcrdefs.cpp</FILENAME>
      <LINE>301</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::green_matching</FUNCTION>
    <DECORATED>?green_matching@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>256</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\preprocessing\</FILEPATH>
      <FILENAME>raw2image.cpp</FILENAME>
      <LINE>82</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::raw2image</FUNCTION>
    <DECORATED>?raw2image@LibRaw@@QEAAHXZ</DECORATED>
    <FUNCLINE>55</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\preprocessing\</FILEPATH>
      <FILENAME>raw2image.cpp</FILENAME>
      <LINE>83</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::raw2image</FUNCTION>
    <DECORATED>?raw2image@LibRaw@@QEAAHXZ</DECORATED>
    <FUNCLINE>55</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\preprocessing\</FILEPATH>
      <FILENAME>raw2image.cpp</FILENAME>
      <LINE>87</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::raw2image</FUNCTION>
    <DECORATED>?raw2image@LibRaw@@QEAAHXZ</DECORATED>
    <FUNCLINE>55</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\preprocessing\</FILEPATH>
      <FILENAME>raw2image.cpp</FILENAME>
      <LINE>148</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::raw2image</FUNCTION>
    <DECORATED>?raw2image@LibRaw@@QEAAHXZ</DECORATED>
    <FUNCLINE>55</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\preprocessing\</FILEPATH>
      <FILENAME>raw2image.cpp</FILENAME>
      <LINE>504</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::raw2image_ex</FUNCTION>
    <DECORATED>?raw2image_ex@LibRaw@@QEAAHH@Z</DECORATED>
    <FUNCLINE>301</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\utils\</FILEPATH>
      <FILENAME>read_utils.cpp</FILENAME>
      <LINE>175</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::read_shorts</FUNCTION>
    <DECORATED>?read_shorts@LibRaw@@IEAAXPEAGI@Z</DECORATED>
    <FUNCLINE>170</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>samsung.cpp</FILENAME>
      <LINE>172</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSamsungMakernotes</FUNCTION>
    <DECORATED>?parseSamsungMakernotes@LibRaw@@IEAAXHIIII@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>samsung.cpp</FILENAME>
      <LINE>179</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSamsungMakernotes</FUNCTION>
    <DECORATED>?parseSamsungMakernotes@LibRaw@@IEAAXHIIII@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>smal.cpp</FILENAME>
      <LINE>35</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::smal_decode_segment</FUNCTION>
    <DECORATED>?smal_decode_segment@LibRaw@@IEAAXQEAY01IH@Z</DECORATED>
    <FUNCLINE>24</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>smal.cpp</FILENAME>
      <LINE>95</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+=' on a 1 byte value and then casting the result to a 2 byte value. Cast the value to the wider type before calling operator '+=' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::smal_decode_segment</FUNCTION>
    <DECORATED>?smal_decode_segment@LibRaw@@IEAAXQEAY01IH@Z</DECORATED>
    <FUNCLINE>24</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>53</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>my_roundf</FUNCTION>
    <DECORATED>?my_roundf@@YAMM@Z</DECORATED>
    <FUNCLINE>47</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>60</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>my_roundf</FUNCTION>
    <DECORATED>?my_roundf@@YAMM@Z</DECORATED>
    <FUNCLINE>47</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>549</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6059</DEFECTCODE>
    <DESCRIPTION>Misuse of length parameter in call to 'strncat'.  Pass the number of remaining characters, not the buffer size of 'imgdata.lens.makernotes.LensFeatures_suf'.</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonyLensFeatures</FUNCTION>
    <DECORATED>?parseSonyLensFeatures@LibRaw@@IEAAXEE@Z</DECORATED>
    <FUNCLINE>481</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>1</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>484</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>485</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>488</LINE>
        <COLUMN>48</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>491</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>492</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>493</LINE>
        <COLUMN>26</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>495</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'features' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>497</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'features' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>500</LINE>
        <COLUMN>22</COLUMN>
        <KEYEVENT>
          <ID>5</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>520</LINE>
        <COLUMN>15</COLUMN>
        <KEYEVENT>
          <ID>6</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'features' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>523</LINE>
        <COLUMN>15</COLUMN>
        <KEYEVENT>
          <ID>7</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'features' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>525</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>8</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'features' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>528</LINE>
        <COLUMN>26</COLUMN>
        <KEYEVENT>
          <ID>9</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>530</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>10</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'features' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>532</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>11</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'features' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>534</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>12</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'features' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>537</LINE>
        <COLUMN>15</COLUMN>
        <KEYEVENT>
          <ID>13</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'features' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>539</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>14</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'features' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>542</LINE>
        <COLUMN>15</COLUMN>
        <KEYEVENT>
          <ID>15</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'features' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>545</LINE>
        <COLUMN>15</COLUMN>
        <KEYEVENT>
          <ID>16</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'features' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>548</LINE>
        <COLUMN>15</COLUMN>
        <KEYEVENT>
          <ID>17</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume 'features')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>549</LINE>
        <COLUMN>4</COLUMN>
        <KEYEVENT>
          <ID>18</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'imgdata' is an Output from 'LibRaw::strnlen' (declared at d:\coding\python\mfsig\flock_counter_cpp_qt_cuda\libraw-0.21.2\libraw\libraw.h:348)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>sony.cpp</FILENAME>
        <LINE>549</LINE>
        <COLUMN>4</COLUMN>
        <KEYEVENT>
          <ID>19</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>Length argument to 'strncat' should be less than the length of 'imgdata.lens.makernotes.LensFeatures_suf'</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>1386</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonyMakernotes</FUNCTION>
    <DECORATED>?parseSonyMakernotes@LibRaw@@IEAAXHIIIIAEAPEAEAEAG0101010101010101@Z</DECORATED>
    <FUNCLINE>1000</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>1975</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>checked_buffer_t::{ctor}</FUNCTION>
    <DECORATED>??0checked_buffer_t@@QEAA@FH@Z</DECORATED>
    <FUNCLINE>1975</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2119</LINE>
      <COLUMN>110</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySR2</FUNCTION>
    <DECORATED>?parseSonySR2@LibRaw@@IEAAXPEAEIII@Z</DECORATED>
    <FUNCLINE>2039</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2108</LINE>
      <COLUMN>97</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySR2</FUNCTION>
    <DECORATED>?parseSonySR2@LibRaw@@IEAAXPEAEIII@Z</DECORATED>
    <FUNCLINE>2039</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2082</LINE>
      <COLUMN>102</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySR2</FUNCTION>
    <DECORATED>?parseSonySR2@LibRaw@@IEAAXPEAEIII@Z</DECORATED>
    <FUNCLINE>2039</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2074</LINE>
      <COLUMN>101</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySR2</FUNCTION>
    <DECORATED>?parseSonySR2@LibRaw@@IEAAXPEAEIII@Z</DECORATED>
    <FUNCLINE>2039</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2070</LINE>
      <COLUMN>102</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySR2</FUNCTION>
    <DECORATED>?parseSonySR2@LibRaw@@IEAAXPEAEIII@Z</DECORATED>
    <FUNCLINE>2039</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2066</LINE>
      <COLUMN>88</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySR2</FUNCTION>
    <DECORATED>?parseSonySR2@LibRaw@@IEAAXPEAEIII@Z</DECORATED>
    <FUNCLINE>2039</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2138</LINE>
      <COLUMN>111</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySR2</FUNCTION>
    <DECORATED>?parseSonySR2@LibRaw@@IEAAXPEAEIII@Z</DECORATED>
    <FUNCLINE>2039</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2143</LINE>
      <COLUMN>112</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySR2</FUNCTION>
    <DECORATED>?parseSonySR2@LibRaw@@IEAAXPEAEIII@Z</DECORATED>
    <FUNCLINE>2039</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2151</LINE>
      <COLUMN>111</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySR2</FUNCTION>
    <DECORATED>?parseSonySR2@LibRaw@@IEAAXPEAEIII@Z</DECORATED>
    <FUNCLINE>2039</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2160</LINE>
      <COLUMN>113</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySR2</FUNCTION>
    <DECORATED>?parseSonySR2@LibRaw@@IEAAXPEAEIII@Z</DECORATED>
    <FUNCLINE>2039</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2165</LINE>
      <COLUMN>117</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySR2</FUNCTION>
    <DECORATED>?parseSonySR2@LibRaw@@IEAAXPEAEIII@Z</DECORATED>
    <FUNCLINE>2039</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2168</LINE>
      <COLUMN>117</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySR2</FUNCTION>
    <DECORATED>?parseSonySR2@LibRaw@@IEAAXPEAEIII@Z</DECORATED>
    <FUNCLINE>2039</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2207</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySRF</FUNCTION>
    <DECORATED>?parseSonySRF@LibRaw@@IEAAXI@Z</DECORATED>
    <FUNCLINE>2180</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2207</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySRF</FUNCTION>
    <DECORATED>?parseSonySRF@LibRaw@@IEAAXI@Z</DECORATED>
    <FUNCLINE>2180</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>sony.cpp</FILENAME>
      <LINE>2221</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parseSonySRF</FUNCTION>
    <DECORATED>?parseSonySRF@LibRaw@@IEAAXI@Z</DECORATED>
    <FUNCLINE>2180</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\utils\</FILEPATH>
      <FILENAME>thumb_utils.cpp</FILENAME>
      <LINE>63</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::kodak_thumb_loader</FUNCTION>
    <DECORATED>?kodak_thumb_loader@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\utils\</FILEPATH>
      <FILENAME>thumb_utils.cpp</FILENAME>
      <LINE>112</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::kodak_thumb_loader</FUNCTION>
    <DECORATED>?kodak_thumb_loader@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\utils\</FILEPATH>
      <FILENAME>thumb_utils.cpp</FILENAME>
      <LINE>205</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::kodak_thumb_loader</FUNCTION>
    <DECORATED>?kodak_thumb_loader@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\utils\</FILEPATH>
      <FILENAME>thumb_utils.cpp</FILENAME>
      <LINE>216</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::kodak_thumb_loader</FUNCTION>
    <DECORATED>?kodak_thumb_loader@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\utils\</FILEPATH>
      <FILENAME>thumb_utils.cpp</FILENAME>
      <LINE>216</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::kodak_thumb_loader</FUNCTION>
    <DECORATED>?kodak_thumb_loader@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>687</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::parse_tiff_ifd</FUNCTION>
    <DECORATED>?parse_tiff_ifd@LibRaw@@IEAAHH@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>687</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>6297</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow.  Results might not be an expected value.</DESCRIPTION>
    <FUNCTION>LibRaw::parse_tiff_ifd</FUNCTION>
    <DECORATED>?parse_tiff_ifd@LibRaw@@IEAAHH@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>891</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>6031</DEFECTCODE>
    <DESCRIPTION>Return value ignored: 'sscanf'.</DESCRIPTION>
    <FUNCTION>LibRaw::parse_tiff_ifd</FUNCTION>
    <DECORATED>?parse_tiff_ifd@LibRaw@@IEAAHH@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>283</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_tiff_ifd</FUNCTION>
    <DECORATED>?parse_tiff_ifd@LibRaw@@IEAAHH@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>283</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_tiff_ifd</FUNCTION>
    <DECORATED>?parse_tiff_ifd@LibRaw@@IEAAHH@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>1429</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_tiff_ifd</FUNCTION>
    <DECORATED>?parse_tiff_ifd@LibRaw@@IEAAHH@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>1431</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_tiff_ifd</FUNCTION>
    <DECORATED>?parse_tiff_ifd@LibRaw@@IEAAHH@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>906</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_tiff_ifd</FUNCTION>
    <DECORATED>?parse_tiff_ifd@LibRaw@@IEAAHH@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>775</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_tiff_ifd</FUNCTION>
    <DECORATED>?parse_tiff_ifd@LibRaw@@IEAAHH@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>687</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_tiff_ifd</FUNCTION>
    <DECORATED>?parse_tiff_ifd@LibRaw@@IEAAHH@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>687</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '&lt;&lt;' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '&lt;&lt;' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_tiff_ifd</FUNCTION>
    <DECORATED>?parse_tiff_ifd@LibRaw@@IEAAHH@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>675</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_tiff_ifd</FUNCTION>
    <DECORATED>?parse_tiff_ifd@LibRaw@@IEAAHH@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>549</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_tiff_ifd</FUNCTION>
    <DECORATED>?parse_tiff_ifd@LibRaw@@IEAAHH@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>559</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_tiff_ifd</FUNCTION>
    <DECORATED>?parse_tiff_ifd@LibRaw@@IEAAHH@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>568</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_tiff_ifd</FUNCTION>
    <DECORATED>?parse_tiff_ifd@LibRaw@@IEAAHH@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>571</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_tiff_ifd</FUNCTION>
    <DECORATED>?parse_tiff_ifd@LibRaw@@IEAAHH@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>422</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_tiff_ifd</FUNCTION>
    <DECORATED>?parse_tiff_ifd@LibRaw@@IEAAHH@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>380</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26819</DEFECTCODE>
    <DESCRIPTION>Unannotated fallthrough between switch labels (es.78).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_tiff_ifd</FUNCTION>
    <DECORATED>?parse_tiff_ifd@LibRaw@@IEAAHH@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>102</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26819</DEFECTCODE>
    <DESCRIPTION>Unannotated fallthrough between switch labels (es.78).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_tiff_ifd</FUNCTION>
    <DECORATED>?parse_tiff_ifd@LibRaw@@IEAAHH@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>503</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26819</DEFECTCODE>
    <DESCRIPTION>Unannotated fallthrough between switch labels (es.78).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_tiff_ifd</FUNCTION>
    <DECORATED>?parse_tiff_ifd@LibRaw@@IEAAHH@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>647</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26819</DEFECTCODE>
    <DESCRIPTION>Unannotated fallthrough between switch labels (es.78).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_tiff_ifd</FUNCTION>
    <DECORATED>?parse_tiff_ifd@LibRaw@@IEAAHH@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>771</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26819</DEFECTCODE>
    <DESCRIPTION>Unannotated fallthrough between switch labels (es.78).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_tiff_ifd</FUNCTION>
    <DECORATED>?parse_tiff_ifd@LibRaw@@IEAAHH@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>836</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26819</DEFECTCODE>
    <DESCRIPTION>Unannotated fallthrough between switch labels (es.78).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_tiff_ifd</FUNCTION>
    <DECORATED>?parse_tiff_ifd@LibRaw@@IEAAHH@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>913</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26819</DEFECTCODE>
    <DESCRIPTION>Unannotated fallthrough between switch labels (es.78).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_tiff_ifd</FUNCTION>
    <DECORATED>?parse_tiff_ifd@LibRaw@@IEAAHH@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>1095</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26819</DEFECTCODE>
    <DESCRIPTION>Unannotated fallthrough between switch labels (es.78).</DESCRIPTION>
    <FUNCTION>LibRaw::parse_tiff_ifd</FUNCTION>
    <DECORATED>?parse_tiff_ifd@LibRaw@@IEAAHH@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>1780</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>6282</DEFECTCODE>
    <DESCRIPTION>Incorrect operator.</DESCRIPTION>
    <FUNCTION>LibRaw::apply_tiff</FUNCTION>
    <DECORATED>?apply_tiff@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1584</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>2084</LINE>
      <COLUMN>80</COLUMN>
    </SFA>
    <DEFECTCODE>6385</DEFECTCODE>
    <DESCRIPTION>Reading invalid data from 'this-&gt;tiff_ifd'.</DESCRIPTION>
    <FUNCTION>LibRaw::apply_tiff</FUNCTION>
    <DECORATED>?apply_tiff@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1584</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>tiff.cpp</FILENAME>
        <LINE>1586</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>tiff.cpp</FILENAME>
        <LINE>1586</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>tiff.cpp</FILENAME>
        <LINE>1586</LINE>
        <COLUMN>30</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'raw' is equal to -1</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>tiff.cpp</FILENAME>
        <LINE>1586</LINE>
        <COLUMN>40</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>tiff.cpp</FILENAME>
        <LINE>1586</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>tiff.cpp</FILENAME>
        <LINE>1587</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>tiff.cpp</FILENAME>
        <LINE>1587</LINE>
        <COLUMN>25</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>tiff.cpp</FILENAME>
        <LINE>1588</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>tiff.cpp</FILENAME>
        <LINE>1590</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>tiff.cpp</FILENAME>
        <LINE>1591</LINE>
        <COLUMN>6</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>tiff.cpp</FILENAME>
        <LINE>1605</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>tiff.cpp</FILENAME>
        <LINE>1605</LINE>
        <COLUMN>24</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this loop, (assume 'i--' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>tiff.cpp</FILENAME>
        <LINE>1612</LINE>
        <COLUMN>6</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'imgdata.idata.dng_version' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>tiff.cpp</FILENAME>
        <LINE>1735</LINE>
        <COLUMN>8</COLUMN>
        <KEYEVENT>
          <ID>5</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>tiff.cpp</FILENAME>
        <LINE>1755</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>tiff.cpp</FILENAME>
        <LINE>1755</LINE>
        <COLUMN>18</COLUMN>
        <KEYEVENT>
          <ID>6</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this loop, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>tiff.cpp</FILENAME>
        <LINE>1797</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>7</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>tiff.cpp</FILENAME>
        <LINE>1800</LINE>
        <COLUMN>23</COLUMN>
        <KEYEVENT>
          <ID>8</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>tiff.cpp</FILENAME>
        <LINE>1826</LINE>
        <COLUMN>6</COLUMN>
        <KEYEVENT>
          <ID>9</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>tiff.cpp</FILENAME>
        <LINE>1828</LINE>
        <COLUMN>6</COLUMN>
        <KEYEVENT>
          <ID>10</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>tiff.cpp</FILENAME>
        <LINE>1830</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>tiff.cpp</FILENAME>
        <LINE>1830</LINE>
        <COLUMN>24</COLUMN>
        <KEYEVENT>
          <ID>11</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this loop, (assume 'i--' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>tiff.cpp</FILENAME>
        <LINE>1839</LINE>
        <COLUMN>15</COLUMN>
        <KEYEVENT>
          <ID>12</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>tiff.cpp</FILENAME>
        <LINE>2074</LINE>
        <COLUMN>6</COLUMN>
        <KEYEVENT>
          <ID>13</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume '!((imgdata.idata.dng_version))')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>tiff.cpp</FILENAME>
        <LINE>2084</LINE>
        <COLUMN>80</COLUMN>
        <KEYEVENT>
          <ID>14</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '&lt;branch condition&gt;' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
        <FILENAME>tiff.cpp</FILENAME>
        <LINE>2084</LINE>
        <COLUMN>80</COLUMN>
        <KEYEVENT>
          <ID>15</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>Invalid read from 'this-&gt;tiff_ifd[-1]', (readable range is 0 to 9)</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>1674</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::apply_tiff</FUNCTION>
    <DECORATED>?apply_tiff@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1584</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>1674</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::apply_tiff</FUNCTION>
    <DECORATED>?apply_tiff@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1584</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>1673</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::apply_tiff</FUNCTION>
    <DECORATED>?apply_tiff@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1584</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>1673</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::apply_tiff</FUNCTION>
    <DECORATED>?apply_tiff@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1584</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>1765</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::apply_tiff</FUNCTION>
    <DECORATED>?apply_tiff@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1584</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>1766</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::apply_tiff</FUNCTION>
    <DECORATED>?apply_tiff@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1584</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>2116</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::apply_tiff</FUNCTION>
    <DECORATED>?apply_tiff@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1584</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>2123</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::apply_tiff</FUNCTION>
    <DECORATED>?apply_tiff@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1584</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>2130</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::apply_tiff</FUNCTION>
    <DECORATED>?apply_tiff@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1584</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>2130</LINE>
      <COLUMN>54</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::apply_tiff</FUNCTION>
    <DECORATED>?apply_tiff@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1584</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>2129</LINE>
      <COLUMN>94</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::apply_tiff</FUNCTION>
    <DECORATED>?apply_tiff@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1584</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>2129</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::apply_tiff</FUNCTION>
    <DECORATED>?apply_tiff@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1584</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>1866</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26819</DEFECTCODE>
    <DESCRIPTION>Unannotated fallthrough between switch labels (es.78).</DESCRIPTION>
    <FUNCTION>LibRaw::apply_tiff</FUNCTION>
    <DECORATED>?apply_tiff@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1584</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>1868</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26819</DEFECTCODE>
    <DESCRIPTION>Unannotated fallthrough between switch labels (es.78).</DESCRIPTION>
    <FUNCTION>LibRaw::apply_tiff</FUNCTION>
    <DECORATED>?apply_tiff@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1584</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>2060</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26819</DEFECTCODE>
    <DESCRIPTION>Unannotated fallthrough between switch labels (es.78).</DESCRIPTION>
    <FUNCTION>LibRaw::apply_tiff</FUNCTION>
    <DECORATED>?apply_tiff@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1584</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\metadata\</FILEPATH>
      <FILENAME>tiff.cpp</FILENAME>
      <LINE>1942</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26819</DEFECTCODE>
    <DESCRIPTION>Unannotated fallthrough between switch labels (es.78).</DESCRIPTION>
    <FUNCTION>LibRaw::apply_tiff</FUNCTION>
    <DECORATED>?apply_tiff@LibRaw@@IEAAXXZ</DECORATED>
    <FUNCLINE>1584</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\write\</FILEPATH>
      <FILENAME>tiff_writer.cpp</FILENAME>
      <LINE>34</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>6031</DEFECTCODE>
    <DESCRIPTION>Return value ignored: '_setmode'.</DESCRIPTION>
    <FUNCTION>LibRaw::dcraw_ppm_tiff_writer</FUNCTION>
    <DECORATED>?dcraw_ppm_tiff_writer@LibRaw@@QEAAHPEBD@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>311</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::unpack</FUNCTION>
    <DECORATED>?unpack@LibRaw@@QEAAHXZ</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>317</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::unpack</FUNCTION>
    <DECORATED>?unpack@LibRaw@@QEAAHXZ</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>324</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::unpack</FUNCTION>
    <DECORATED>?unpack@LibRaw@@QEAAHXZ</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>332</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::unpack</FUNCTION>
    <DECORATED>?unpack@LibRaw@@QEAAHXZ</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>339</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::unpack</FUNCTION>
    <DECORATED>?unpack@LibRaw@@QEAAHXZ</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>346</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::unpack</FUNCTION>
    <DECORATED>?unpack@LibRaw@@QEAAHXZ</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>355</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::unpack</FUNCTION>
    <DECORATED>?unpack@LibRaw@@QEAAHXZ</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>361</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::unpack</FUNCTION>
    <DECORATED>?unpack@LibRaw@@QEAAHXZ</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>387</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::unpack</FUNCTION>
    <DECORATED>?unpack@LibRaw@@QEAAHXZ</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>unpack.cpp</FILENAME>
      <LINE>395</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::unpack</FUNCTION>
    <DECORATED>?unpack@LibRaw@@QEAAHXZ</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>unpack_thumb.cpp</FILENAME>
      <LINE>275</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::unpack_thumb</FUNCTION>
    <DECORATED>?unpack_thumb@LibRaw@@QEAAHXZ</DECORATED>
    <FUNCLINE>50</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>unpack_thumb.cpp</FILENAME>
      <LINE>275</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::unpack_thumb</FUNCTION>
    <DECORATED>?unpack_thumb@LibRaw@@QEAAHXZ</DECORATED>
    <FUNCLINE>50</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\decoders\</FILEPATH>
      <FILENAME>unpack_thumb.cpp</FILENAME>
      <LINE>277</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::unpack_thumb</FUNCTION>
    <DECORATED>?unpack_thumb@LibRaw@@QEAAHXZ</DECORATED>
    <FUNCLINE>50</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\utils\</FILEPATH>
      <FILENAME>utils_dcraw.cpp</FILENAME>
      <LINE>329</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::tiff_get</FUNCTION>
    <DECORATED>?tiff_get@LibRaw@@IEAAXIPEAI000@Z</DECORATED>
    <FUNCLINE>315</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>xtrans_demosaic.cpp</FILENAME>
      <LINE>113</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::xtrans_interpolate</FUNCTION>
    <DECORATED>?xtrans_interpolate@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>25</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>xtrans_demosaic.cpp</FILENAME>
      <LINE>174</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::xtrans_interpolate</FUNCTION>
    <DECORATED>?xtrans_interpolate@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>25</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>xtrans_demosaic.cpp</FILENAME>
      <LINE>195</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::xtrans_interpolate</FUNCTION>
    <DECORATED>?xtrans_interpolate@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>25</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>xtrans_demosaic.cpp</FILENAME>
      <LINE>197</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::xtrans_interpolate</FUNCTION>
    <DECORATED>?xtrans_interpolate@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>25</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>xtrans_demosaic.cpp</FILENAME>
      <LINE>199</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::xtrans_interpolate</FUNCTION>
    <DECORATED>?xtrans_interpolate@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>25</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>xtrans_demosaic.cpp</FILENAME>
      <LINE>220</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::xtrans_interpolate</FUNCTION>
    <DECORATED>?xtrans_interpolate@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>25</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>xtrans_demosaic.cpp</FILENAME>
      <LINE>249</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::xtrans_interpolate</FUNCTION>
    <DECORATED>?xtrans_interpolate@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>25</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>xtrans_demosaic.cpp</FILENAME>
      <LINE>370</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::xtrans_interpolate</FUNCTION>
    <DECORATED>?xtrans_interpolate@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>25</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\CODING\python\MFSIG\flock_counter_cpp_qt_cuda\LibRaw-0.21.2\src\demosaic\</FILEPATH>
      <FILENAME>xtrans_demosaic.cpp</FILENAME>
      <LINE>370</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LibRaw::xtrans_interpolate</FUNCTION>
    <DECORATED>?xtrans_interpolate@LibRaw@@IEAAXH@Z</DECORATED>
    <FUNCLINE>25</FUNCLINE>
    <PATH></PATH>
  </DEFECT></DEFECTS>